openapi: 3.0.0
info:
  description: Salary Plus API
  title: Salary Plus APIs
  version: 1.0.0
servers:
- url: /
paths:
  /:
    get:
      operationId: welcomeActHome
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: welcome to act home
      tags:
      - WelcomeAct
      x-accepts: application/json
      x-tags:
      - tag: WelcomeAct
  /api/health:
    get:
      operationId: healthCheck
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: server health check
        "500":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                    code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - HealthCheck
      x-accepts: application/json
      x-tags:
      - tag: HealthCheck
  /api/admin/shops:
    post:
      operationId: createShop
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
      security:
      - bearerAuth: []
      summary: 상점과 상점 그룹 상점 근무자들을 등록한다.
      tags:
      - Shop
      x-content-type: multipart/form-data
      x-accepts: application/json
      x-tags:
      - tag: Shop
  /api/stock-search-trends:
    post:
      operationId: createStockSearchTrend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStockSearchTrendRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      tags:
      - StockSearchTrends
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: StockSearchTrends
  /api/stocks/search-recommendations:
    get:
      operationId: getRecommendationSections
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockSearchRecommendationSectionDataResponse'
          description: Stock Search Trend Section Data
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - StockSearchRecommendation
      x-accepts: application/json
      x-tags:
      - tag: StockSearchRecommendation
  /api/sms/send-auth-request:
    post:
      operationId: sendAuthRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendAuthResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              example:
                message: 현재 인증서버와 연결이 원활하지 않습니다. 잠시 후 다시 시도해 주세요.
                code: 503
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
      tags:
      - SmsAuthentication
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: SmsAuthentication
  /api/sms/verify-auth-code:
    post:
      operationId: verifyAuthCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyAuthCodeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              example:
                message: 현재 인증서버와 연결이 원활하지 않습니다. 잠시 후 다시 시도해 주세요.
                code: 503
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
      summary: Verify Auth Code
      tags:
      - SmsAuthentication
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: SmsAuthentication
  /api/sms/resend-auth-request:
    post:
      operationId: resendAuthRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendAuthResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              example:
                message: 현재 인증서버와 연결이 원활하지 않습니다. 잠시 후 다시 시도해 주세요.
                code: 503
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
      security:
      - bearerAuth: []
      summary: Resend Auth Request
      tags:
      - SmsAuthentication
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: SmsAuthentication
  /api/auth/register-pin-number:
    post:
      operationId: registerPinNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinNumberRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 이미 가입된 이메일입니다.
                    code: 409
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                    code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Register Pin Number
      tags:
      - Authentication
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Authentication
  /api/auth/register-user-info:
    post:
      operationId: registerUserInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserInfoRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 회원정보가 이미 수정되었습니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                    code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Register User Info
      tags:
      - Authentication
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Authentication
  /api/auth/web/generate-verification-code:
    post:
      operationId: generateWebVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebVerificationCodeGenerateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebVerificationCodeGenerateResponse'
          description: Success
        "401":
          description: Unauthorized
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Generate Web Verification Code
      tags:
      - WebVerification
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: WebVerification
  /api/auth/web/verify-verification-code:
    post:
      operationId: verifyWebVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebVerificationCodeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebVerificationCodeResponse'
          description: Success
        "401":
          description: Unauthorized
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Verify Web Verification Code
      tags:
      - WebVerification
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: WebVerification
  /api/auth/web/redeem-verification-code:
    post:
      operationId: redeemWebVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationCodeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "401":
          description: Unauthorized
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Redeem Verify Verification Code
      tags:
      - WebVerification
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: WebVerification
  /api/auth/mydata-token-request:
    post:
      operationId: requestMyDataToken
      parameters:
      - description: Authorization header
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyDataTokenResponse'
          description: Success
        "401":
          description: Unauthorized
        "500":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                    code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: MyData Token Request
      tags:
      - Authentication
      x-accepts: application/json
      x-tags:
      - tag: Authentication
  /api/auth/verify-pin-number:
    post:
      operationId: verifyPinNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinNumberRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Success
        "401":
          description: Unauthorized
        "500":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                    code: 500
                failedVerify:
                  value:
                    message: |
                      비밀번호가 일치하지 않습니다
                      다시 입력해주세요
                    code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Verify Pin Number
      tags:
      - Authentication
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Authentication
  /api/auth/reset-pin-number:
    post:
      operationId: resetPinNumber
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "401":
          description: Unauthorized
        "500":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                    code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Reset Pin Number
      tags:
      - Authentication
      x-accepts: application/json
      x-tags:
      - tag: Authentication
  /api/auth/logout:
    post:
      operationId: logout
      responses:
        "200":
          description: No Content
      security:
      - bearerAuth: []
      summary: Logout Endpoint
      tags:
      - Authentication
      x-accepts: application/json
      x-tags:
      - tag: Authentication
  /api/auth/check-email:
    post:
      operationId: checkEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckEmailResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: Check Email Endpoint
      tags:
      - Authentication
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Authentication
  /api/auth/check-nickname:
    post:
      operationId: checkNickname
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNicknameRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNicknameResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: Check Nickname Endpoint
      tags:
      - Authentication
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Authentication
  /api/images:
    post:
      operationId: uploadImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadImage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Images uploaded successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 이미지 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or size.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Upload A Image
      tags:
      - ImageUpload
      x-content-type: multipart/form-data
      x-accepts: application/json
      x-tags:
      - tag: ImageUpload
  /api/images/default-profile-images:
    get:
      operationId: getDefaultProfileImages
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultProfileImagesResponse'
          description: List of default profile images
      security:
      - bearerAuth: []
      summary: 메인 홈
      tags:
      - Image
      x-accepts: application/json
      x-tags:
      - tag: Image
  /api/home:
    get:
      operationId: getHome
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeResponse'
          description: Success
      security:
      - bearerAuth: []
      summary: 메인 홈
      tags:
      - Home
      x-accepts: application/json
      x-tags:
      - tag: Home
  /api/home/links/{linkType}:
    get:
      operationId: getHomeLink
      parameters:
      - description: Link type NEWS or RANKING parameter
        explode: false
        in: path
        name: linkType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeLinkResponse'
          description: Success
      security:
      - bearerAuth: []
      summary: 메인 홈 공지사항 블로그 사이트 URL
      tags:
      - Home
      x-accepts: application/json
      x-tags:
      - tag: Home
  /api/home/my-solidarity:
    get:
      operationId: getMySolidarityList
      parameters:
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: "createdAt:desc,createdAt:desc"
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MySolidarityDataArrayResponse'
          description: Success
      security:
      - bearerAuth: []
      summary: 내 홈 화면 보유종목 조회
      tags:
      - Home
      x-accepts: application/json
      x-tags:
      - tag: Home
    patch:
      description: 연대가 생성된 종목코드 목록을 수정하고자 하는 순서대로 입력
      operationId: updateMySolidarityListDisplayOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMySolidarityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MySolidarityDataArrayResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                invalidStockCode:
                  summary: invalid stock code
                  value:
                    code: 400
                    message: 연대가 생성되지 않은 주식은 순서를 변경할 수 없습니다.
                notEnoughStockCode:
                  summary: not enough stock code
                  value:
                    code: 400
                    message: 연대가 활성화된 모든 종목 코드를 입력해주세요.
                duplicatedStockCode:
                  summary: duplicated stock code
                  value:
                    code: 400
                    message: 중복된 종목 코드가 존재합니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              example:
                message: 보유하고 있지 않은 주식이 존재합니다.
                code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 내 홈 화면 보유종목 표시 순서 수정
      tags:
      - Home
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Home
  /api/stock-rankings:
    get:
      operationId: getStockRankings
      parameters:
      - description: size of the ranking list
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - stakeRank:asc
          items:
            example: stakeRank:asc
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockRankingDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 종목 랭킹 조회
      tags:
      - StockRanking
      x-accepts: application/json
      x-tags:
      - tag: StockRanking
  /api/stocks/{stockCode}/home:
    get:
      operationId: getStockHome
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockHomeResponse'
          description: Success
        "403":
          content:
            application/json:
              example:
                message: 보유하고 있지 않은 주식입니다.
                code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 종목코드입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 종목 홈 화면 조회
      tags:
      - StockHome
      x-accepts: application/json
      x-tags:
      - tag: StockHome
  /api/stocks/{stockCode}/unread-board-group-post-status:
    get:
      operationId: getUnreadStockBoardGroupPostStatus
      parameters:
      - description: Stock code parameter
        in: path
        name: stockCode
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnreadStockBoardGroupPostStatusDataResponse'
          description: Success
        "403":
          content:
            application/json:
              example:
                message: 보유하고 있지 않은 주식입니다.
                code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 종목코드입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 종목별 게시판 그룹별 읽지 않은 게시글 상태 조회
      tags:
      - UnreadStockBoardGroupPostStatus
      x-accepts: application/json
      x-tags:
      - tag: UnreadStockBoardGroupPostStatus
  /api/stocks/{stockCode}/solidarity:
    get:
      operationId: getSolidarity
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolidarityDataResponse'
          description: Successful
      security:
      - bearerAuth: []
      summary: 연대 조회하기
      tags:
      - StockSolidarity
      x-accepts: application/json
      x-tags:
      - tag: StockSolidarity
  /api/stocks/{stockCode}/solidarity/{solidarityId}/leader/message:
    patch:
      operationId: updateSolidarityLeaderMessage
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Solidarity ID parameter
        explode: false
        in: path
        name: solidarityId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSolidarityLeaderMessageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                unAuthorized:
                  value:
                    message: 주주대표 한마디를 확인해주세요.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Inappropriate Message.
        "401":
          content:
            application/json:
              examples:
                unAuthorized:
                  value:
                    message: 주주대표가 아니면 변경할 수 없습니다.
                    code: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: No Solidarity Leader Authority
        "404":
          content:
            application/json:
              examples:
                notFoundSolidarityLeader:
                  value:
                    message: 주주대표를 찾을 수 없습니다.
                    code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: No Solidarity Leader Found
      security:
      - bearerAuth: []
      summary: 주주대표 한마디 수정하기
      tags:
      - StockSolidarityLeader
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: StockSolidarityLeader
  /api/stocks/{stockCode}/solidarity/apply-leader:
    delete:
      operationId: cancelSolidarityLeaderApplication
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful
        "403":
          content:
            application/json:
              example:
                message: 보유하고 있지 않은 주식입니다.
                code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 종목코드입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 주주대표 지원 취소하기
      tags:
      - StockSolidarity
      x-accepts: application/json
      x-tags:
      - tag: StockSolidarity
    post:
      operationId: applySolidarityLeader
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful
        "403":
          content:
            application/json:
              example:
                message: 보유하고 있지 않은 주식입니다.
                code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 종목코드입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 주주대표 지원하기
      tags:
      - StockSolidarity
      x-accepts: application/json
      x-tags:
      - tag: StockSolidarity
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/categories:
    get:
      operationId: getBoardGroupCategories
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        example: ACT_BEST or ANALYSIS or ACTION or DEBATE or GLOBALBOARD or GLOBALCOMMUNITY
          or GLOBALEVENT
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardCategoryDataArrayResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 보유하고 있지 않은 주식입니다.
                code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 종목별 게시판 그룹별 카테고리 조회
      tags:
      - StockBoardGroupCategory
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupCategory
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/holder-list-read-and-copy-form:
    get:
      operationId: getHolderListReadAndCopyForm
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        example: ACTION
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderListReadAndCopyFormResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 주주명부 열람/등사 폼 조회
      tags:
      - HolderListReadAndCopyForm
      x-accepts: application/json
      x-tags:
      - tag: HolderListReadAndCopyForm
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts:
    get:
      operationId: getBoardGroupPosts
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        example: ACT_BEST or ANALYSIS or ACTION or DEBATE or GLOBALBOARD or GLOBALCOMMUNITY
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: "Board category parameter if not specified, all categories will\
          \ be returned"
        explode: true
        in: query
        name: boardCategory
        required: false
        schema:
          type: string
        style: form
      - description: Board Group Categories
        explode: true
        in: query
        name: boardCategories
        required: false
        schema:
          example: "EVENT,CAMPAIGN"
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: "createdAt:desc,createdAt:desc"
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: "If true, only posts exclusive to stockholders will be returned"
        explode: true
        in: query
        name: isExclusiveToHolders
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "If true, only posts exclusive to public will be returned"
        explode: true
        in: query
        name: isExclusiveToPublic
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "If true, only not deleted posts will be returned"
        explode: true
        in: query
        name: isNotDeleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoardGroupPostResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 보유하고 있지 않은 주식입니다.
                code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 게시판 그룹 내 게시글 조회
      tags:
      - StockBoardGroupPost
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPost
    post:
      operationId: createBoardGroupPost
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetailsDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                boardGroupMismatch:
                  value:
                    message: 게시판 그룹이 유효하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Board group of the category does not match
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notAuthorizedCategory:
                  value:
                    message: 작성 권한이 없는 게시판입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 게시글 생성하기
      tags:
      - StockBoardGroupPost
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPost
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/previews:
    get:
      operationId: getBoardGroupPostPreviews
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        example: ACT_BEST or ANALYSIS or ACTION or DEBATE or GLOBALBOARD or GLOBALCOMMUNITY
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: "Board category parameter if not specified, all categories will\
          \ be returned"
        explode: true
        in: query
        name: boardCategory
        required: false
        schema:
          type: string
        style: form
      - description: Board Group Categories
        explode: true
        in: query
        name: boardCategories
        required: false
        schema:
          example: "EVENT,CAMPAIGN"
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoardGroupPostResponse'
          description: Successful response
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 게시판 그룹 내 게시글 미리보기 목록조회
      tags:
      - StockBoardGroupPostPreview
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostPreview
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/holder-list-read-and-copy:
    post:
      operationId: createPostHolderListReadAndCopy
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreatePostHolderListReadAndCopyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetailsDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                boardGroupMismatch:
                  value:
                    message: 게시판 그룹이 유효하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Board group of the category does not match
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notAuthorizedCategory:
                  value:
                    message: 작성 권한이 없는 게시판입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 게시글 열람등사 생성하기
      tags:
      - StockBoardGroupPost
      x-content-type: multipart/form-data
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPost
  /api/notifications:
    get:
      operationId: getUserNotifications
      parameters:
      - description: "Notification category parameter, (null or STOCKHOLDER_ACTION)"
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserNotificationDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 알림 리스트 조회
      tags:
      - UserNotification
      x-accepts: application/json
      x-tags:
      - tag: UserNotification
  /api/notifications/{notificationId}:
    post:
      operationId: createNotificationUserView
      parameters:
      - description: Notification ID
        in: path
        name: notificationId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 사용자 알림 확인
      tags:
      - UserNotification
      x-accepts: application/json
      x-tags:
      - tag: UserNotification
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}:
    delete:
      operationId: deleteBoardGroupPost
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful
        "400":
          content:
            application/json:
              examples:
                boardGroupMismatch:
                  value:
                    message: 게시판 그룹이 유효하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Board group of the category does not match
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notAuthorizedCategory:
                  value:
                    message: 삭제 권한이 없는 게시판입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
                notFoundPost:
                  summary: Non-existing post
                  value:
                    code: 404
                    message: 존재하지 않는 게시글입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 게시글 삭제하기
      tags:
      - StockBoardGroupPost
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPost
    get:
      operationId: getBoardGroupPostDetail
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
                notFoundPost:
                  summary: Non-existing post
                  value:
                    code: 404
                    message: 존재하지 않는 게시글입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: "게시글 상세 조회, 의결권 위임 상세 조회"
      tags:
      - StockBoardGroupPost
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPost
    patch:
      operationId: updateBoardGroupPost
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetailsDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                boardGroupMismatch:
                  value:
                    message: 게시판 그룹이 유효하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Board group of the category does not match
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notAuthorizedCategory:
                  value:
                    message: 수정 권한이 없는 게시판입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
                notFoundPost:
                  summary: Non-existing post
                  value:
                    code: 404
                    message: 존재하지 않는 게시글입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 게시글 수정하기
      tags:
      - StockBoardGroupPost
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPost
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/polls/{pollId}/answers:
    post:
      operationId: createBoardGroupPostPollAnswer
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Poll ID parameter
        explode: false
        in: path
        name: pollId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPollAnswerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollAnswerDataArrayResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 게시글 설문 답변하기
      tags:
      - StockBoardGroupPostPollAnswer
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostPollAnswer
    put:
      operationId: updateBoardGroupPostPollAnswer
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Poll ID parameter
        explode: false
        in: path
        name: pollId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPollAnswerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollAnswerDataArrayResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notMyPollAnswer:
                  value:
                    message: 본인이 선택한 항목만 수정할 수 있습니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 게시글 설문 선택한 답변 수정하기
      tags:
      - StockBoardGroupPostPollAnswer
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostPollAnswer
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/likes:
    delete:
      operationId: unlikeBoardGroupPost
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 게시글 좋아요 취소
      tags:
      - StockBoardGroupPostLike
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostLike
    post:
      operationId: likeBoardGroupPost
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                alreadyLiked:
                  value:
                    message: 이미 좋아요를 누른 게시글입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 게시글 좋아요
      tags:
      - StockBoardGroupPostLike
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostLike
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/reports:
    post:
      operationId: reportBoardGroupPost
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportContentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notReportable:
                  value:
                    message: 신고할 수 없는 게시글입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 게시글 신고하기
      tags:
      - StockBoardGroupPostReport
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostReport
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/comments:
    get:
      operationId: getBoardGroupPostComments
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: "createdAt:desc,likeCount:desc"
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentPagingResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 댓글 목록 조회
      tags:
      - StockBoardGroupPostComment
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostComment
    post:
      operationId: createBoardGroupPostComment
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 댓글 작성하기
      tags:
      - StockBoardGroupPostComment
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostComment
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/comments/{commentId}/replies:
    get:
      operationId: getBoardGroupPostCommentsReplies
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comment ID parameter
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: "createdAt:desc,likeCount:desc"
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentPagingResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 댓글의 답글 목록 조회
      tags:
      - StockBoardGroupPostCommentReply
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostCommentReply
    post:
      operationId: createBoardGroupPostCommentReply
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comment ID parameter
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 댓글의 답글 작성하기
      tags:
      - StockBoardGroupPostCommentReply
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostCommentReply
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/comments/{commentId}:
    delete:
      operationId: deleteBoardGroupPostComment
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comment ID parameter
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notCommentOwner:
                  value:
                    message: 댓글의 작성자만 수정 및 삭제가 가능합니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 내 댓글 or 답글 삭제하기
      tags:
      - StockBoardGroupPostComment
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostComment
    put:
      operationId: updateBoardGroupPostComment
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comment ID parameter
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notCommentOwner:
                  value:
                    message: 댓글의 작성자만 수정 및 삭제가 가능합니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 내 댓글 or 답글 수정하기
      tags:
      - StockBoardGroupPostComment
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostComment
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/comments/{commentId}/likes:
    delete:
      operationId: unlikeBoardGroupPostComment
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comment ID parameter
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 댓글 or 답글 좋아요 취소
      tags:
      - StockBoardGroupPostCommentLike
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostCommentLike
    post:
      operationId: likeBoardGroupPostComment
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comment ID parameter
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                alreadyLiked:
                  value:
                    message: 이미 좋아요를 누른 댓글입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 댓글 or 답글 좋아요
      tags:
      - StockBoardGroupPostCommentLike
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostCommentLike
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/comments/{commentId}/reports:
    post:
      operationId: reportBoardGroupPostComment
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comment ID parameter
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportContentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 댓글 or 답글 신고하기
      tags:
      - StockBoardGroupPostCommentReport
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: StockBoardGroupPostCommentReport
  /api/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/digital-proxy:
    post:
      operationId: signAndGetEmbeddedUrl
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalProxySignResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 의결권위임하고 위임장 url 받기
      tags:
      - DigitalProxy
      x-accepts: application/json
      x-tags:
      - tag: DigitalProxy
  /api/users/me:
    get:
      operationId: getMe
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 1
                  name: 이동훈
                  birthDate: 1988-03-07T12:00:00Z
                  gender: M
                  isAgreeToReceiveMail: false
                  lastPinNumberVerifiedAt: 2023-07-18T13:52:45.022804Z
                  nickname: yang_nickname
                  totalAssetAmount: 0
                  status: ACTIVE
                  authType: PIN
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
                  lastNicknameUpdatedAt: null || 2023-07-18T13:52:45.028685Z
                  isPinNumberRegistered: true
                  holdingStocks:
                  - code: "005930"
                    name: 삼성전자
                  - code: "000660"
                    name: SK하이닉스
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: Success
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
      summary: 내 정보 조회하기
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
    patch:
      operationId: updateMyProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMyProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 존재하지 않는 회원입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 내 프로필 변경하기
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/me/stocks/{stockCode}/authentication:
    get:
      operationId: getMyStockAuthentication
      parameters:
      - description: Stock code parameter
        in: path
        name: stockCode
        required: true
        schema:
          example: "020416"
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                individualStockCountLabel: 5000주+
                holdingStock:
                  code: "005930"
                  name: 삼성전자
              schema:
                $ref: '#/components/schemas/MyStockAuthenticationResponse'
          description: Success
      security:
      - bearerAuth: []
      summary: 주주인증 정보 조회하기
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/my-address:
    patch:
      operationId: updateMyAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMyAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 존재하지 않는 회원입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 내 주소 변경하기
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/{userId}/profile:
    get:
      operationId: getUserSimpleProfile
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Stock code filtering parameter
        explode: true
        in: query
        name: stockCode
        required: false
        schema:
          example: "020416"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleUserProfileDataResponse'
          description: Successful response
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 회원입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 간단 프로필 조회
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/solidarity-leader-confidential-agreement-document-form:
    get:
      operationId: getSolidarityLeaderConfidentialAgreementDocumentForm
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolidarityLeaderConfidentialAgreementResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 주주대표 비밀유지 서약서 폼 조회
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/solidarity-leader-confidential-agreement-document:
    post:
      operationId: createSolidarityLeaderConfidentialAgreementDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolidarityLeaderConfidentialAgreementRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 주주대표 비밀유지 서약서 제출
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/my-profile-image:
    patch:
      operationId: updateMyProfileImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMyProfileImageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleImageDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 존재하지 않는 회원입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 내 프로필 이미지 변경하기
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/push-token:
    patch:
      operationId: updateMyPushToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMyPushTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 존재하지 않는 회원입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 푸시 토큰 변경하기
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/push-agreements:
    get:
      operationId: getUserPushAgreements
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPushAgreementItemsDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 푸시 동의 상태 조회
      tags:
      - UserPushAgreement
      x-accepts: application/json
      x-tags:
      - tag: UserPushAgreement
    patch:
      operationId: updateUserPushAgreements
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UserPushAgreementItem'
              title: pushAgreementItems
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Push Agreement Updated successfully.
      security:
      - bearerAuth: []
      summary: 푸시 동의 상태 업데이트
      tags:
      - UserPushAgreement
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: UserPushAgreement
  /api/users/nickname:
    patch:
      operationId: updateMyNickname
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMyNicknameRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 존재하지 않는 회원입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 닉네임 변경하기
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/me/auth-type:
    patch:
      operationId: updateMyAuthType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMyAuthTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 회원입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 인증 수단 변경하기
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/me/blocked-users:
    get:
      operationId: getBlockedUsers
      parameters:
      - description: "BlockedUserType - ALL(전체), NORMAL_USER(일반 사용자), SOLIDARITY_LEADER(주\
          주대표)"
        explode: true
        in: query
        name: blockedUserType
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:asc
          example: createdAt:asc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockedUserResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: Get users who have been blocked by a user.
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
    post:
      operationId: blockUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlockUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "400":
          content:
            application/json:
              example:
                message: 자기 자신을 차단할 수 없습니다.
                code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Block user self Or Already blocked user
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 회원입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 사용자 차단하기
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/me/blocked-users/{blockedUserId}:
    delete:
      operationId: unblockUser
      parameters:
      - in: path
        name: blockedUserId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
      summary: 유저 차단 해제하기
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/mydata:
    post:
      operationId: updateMyData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMyDataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 존재하지 않는 회원입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 마이데이터 파입 업로드 하기
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/withdrawal:
    post:
      operationId: requestWithdrawal
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 존재하지 않는 회원입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 회원 탈퇴 하기
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/users/anonymousCount:
    get:
      operationId: getUserAnonymousCount
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnonymousCountResponse'
          description: Successful response
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 회원입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 사용자의 익명 작성 카운트 조회
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/digital-document/{digitalDocumentId}/email:
    post:
      operationId: sendEmailForDigitalDocument
      parameters:
      - description: Digital Document ID parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 전자문서 이메일 발송
      tags:
      - DigitalDocumentEmailSender
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: DigitalDocumentEmailSender
  /api/users/digital-document/{digitalDocumentId}/download-document:
    get:
      operationId: getUserDigitalDocumentPdf
      parameters:
      - description: Digital Document ID parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: Digital Document Files downloaded successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 전자문서 사용자별 pdf 다운로드
      tags:
      - UserDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: UserDigitalDocument
  /api/users/digital-document/{digitalDocumentId}:
    delete:
      operationId: deleteUserDigitalDocument
      parameters:
      - description: Digital Document ID parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Digital Document delete successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 전자문서 사용자별 삭제
      tags:
      - UserDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: UserDigitalDocument
    patch:
      operationId: updateUserDigitalDocumentStatus
      parameters:
      - description: Digital Document ID parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Digital Document Update successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 전자문서 사용자별 제출 상태로 변경
      tags:
      - UserDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: UserDigitalDocument
    post:
      operationId: createUserDigitalDocumentWithImage
      parameters:
      - description: Digital Document ID parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUserDigitalDocumentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDigitalDocumentResponse'
          description: Digital Document Files uploaded successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 유저의 전자문서 서명하기
      tags:
      - UserDigitalDocument
      x-content-type: multipart/form-data
      x-accepts: application/json
      x-tags:
      - tag: UserDigitalDocument
  /public-api/email:
    post:
      operationId: sendEmailInPublic
      parameters:
      - description: Public API Key
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SenderEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
      tags:
      - PublicEmail
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: PublicEmail
  /api/contact-us:
    post:
      operationId: contactUs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactUsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
      tags:
      - ContactUs
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: ContactUs
  /api/batch/update-stocks:
    post:
      operationId: updateStocks
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              example:
                message: 현재 인증서버와 연결이 원활하지 않습니다. 잠시 후 다시 시도해 주세요.
                code: 503
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/create-solidarity-daily-statistics:
    post:
      operationId: createSolidarityDailyStatistics
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/create-solidarity-daily-summaries:
    post:
      operationId: createSolidarityDailySummaries
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/update-solidarity-daily-summaries:
    post:
      operationId: updateSolidarityDailySummaries
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/update-withdrawal-request-users:
    post:
      operationId: updateWithdrawalRequestUsers
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/dashboard/statistics:
    post:
      operationId: processDashboardStatistics
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/digital-document/zip-file-request:
    post:
      operationId: createDigitalDocumentZipFiles
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/digital-document/delete-old-documents:
    post:
      operationId: deleteOldDigitalDocuments
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/dart/update-corp-codes:
    post:
      operationId: updateCorpCodes
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/dart/update-stock-dark-corporations:
    post:
      operationId: updateStockDartCorporations
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: DART Corp 기업 정보 업데이트
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/update-stocks-from-dart-corporations:
    post:
      operationId: updateStocksFromDartCorporations
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/data-matrices/user-retention-weekly/{formattedCsvDataType}:
    post:
      operationId: createUserRetentionWeeklyCsv
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      - description: User Retention Weekly CSV Data Type (converted LowerCase and
          '_')
        example: all-users-given-all-conditions / all-users-signature-opportunity-given-have-stock-in-all-digital-documents-progress-period
          / all-users-signature-opportunity-given-have-stock-in-digital-documents-except-etc-progress-period
        explode: false
        in: path
        name: formattedCsvDataType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: CreateCsv_모든 유저별 주차별 리텐션|전자문서참여기회지표|전자문서참여기회지표(기타문서X)
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/notification/slack:
    post:
      operationId: sendSlackMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlackMessageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful sent slack message.
        "500":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                    code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - SlackMessage
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: SlackMessage
  /api/solidarity-leader-elections/procedures:
    get:
      description: 선출 과정 안내 리스트를 조회한다.
      operationId: getSolidarityLeaderElectionProcedures
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolidarityLeaderElectionProceduresDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 선출 과정 안내 조회
      tags:
      - SolidarityLeaderElection
      x-accepts: application/json
      x-tags:
      - tag: SolidarityLeaderElection
  /api/stocks/{stockCode}/solidarity-leader-elections/{solidarityLeaderElectionId}/solidarity-leader-applicants:
    get:
      operationId: getSolidarityLeaderApplicants
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Solidarity Leader Election Id
        explode: false
        in: path
        name: solidarityLeaderElectionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolidarityLeaderApplicantResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 주주대표 지원자 목록 조회
      tags:
      - SolidarityLeaderElection
      x-accepts: application/json
      x-tags:
      - tag: SolidarityLeaderElection
  /api/stocks/{stockCode}/solidarity-leader-elections/solidarity-leader-applicants:
    post:
      operationId: createSolidarityLeaderApplicant
      parameters:
      - description: Stock Code
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolidarityLeaderElectionApplyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "400":
          content:
            application/json:
              example:
                message: 보유하지 않은 종목입니다.
                code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 종목입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 주주대표 지원하기
      tags:
      - SolidarityLeaderElection
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: SolidarityLeaderElection
  /api/stocks/{stockCode}/solidarity-leader-elections/solidarity-leader-applicants/latest:
    get:
      operationId: getLatestSolidarityLeaderApplication
      parameters:
      - description: Stock Code
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolidarityLeaderApplicationResponse'
          description: Successful response
        "400":
          content:
            application/json:
              example:
                message: 보유하지 않은 종목입니다.
                code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                message: 지원서를 작성한 내역이 없습니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: "가장 최근 작성한 지원서 조회, 지원서 id, 선출 id, 제출 상태는 포함되지 않고 전달됩니다."
      tags:
      - SolidarityLeaderElection
      x-accepts: application/json
      x-tags:
      - tag: SolidarityLeaderElection
  ? /api/stocks/{stockCode}/solidarity-leader-elections/{solidarityLeaderElectionId}/solidarity-leader-applicants/{solidarityLeaderApplicantId}
  : delete:
      description: 후보자 선출이 시작되기 전 임시저장 상태 또는 후보자 등록 기간에 취소가 가능합니다. 단일 후보자일 때 취소하게
        되면 선출 프로세스가 종료됩니다.
      operationId: withdrawSolidarityLeaderApplication
      parameters:
      - description: Stock Code
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Solidarity Leader Election ID
        explode: false
        in: path
        name: solidarityLeaderElectionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Solidarity Leader Applicant ID
        explode: false
        in: path
        name: solidarityLeaderApplicantId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "400":
          content:
            application/json:
              example:
                message: 보유하지 않은 종목입니다.
                code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 종목입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 주주대표 지원 취소하기
      tags:
      - SolidarityLeaderElection
      x-accepts: application/json
      x-tags:
      - tag: SolidarityLeaderElection
    get:
      description: "임시저장 상태의 경우 작성자만 조회 가능하고, 제출 완료 상태의 경우 주주라면 조회 가능합니다."
      operationId: getSolidarityLeaderApplication
      parameters:
      - description: Stock Code
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Solidarity Leader Election ID
        explode: false
        in: path
        name: solidarityLeaderElectionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Solidarity Leader Applicant ID
        explode: false
        in: path
        name: solidarityLeaderApplicantId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolidarityLeaderApplicationResponse'
          description: Successful response
        "400":
          content:
            application/json:
              example:
                message: 보유하지 않은 종목입니다.
                code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 종목입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 주주대표 지원서 조회하기
      tags:
      - SolidarityLeaderElection
      x-accepts: application/json
      x-tags:
      - tag: SolidarityLeaderElection
    patch:
      operationId: updateSolidarityLeaderApplicant
      parameters:
      - description: Stock Code
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Solidarity Leader Election Id
        explode: false
        in: path
        name: solidarityLeaderElectionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Solidarity Leader Applicant Id
        explode: false
        in: path
        name: solidarityLeaderApplicantId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolidarityLeaderElectionApplyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                holdingStockNotFound:
                  value:
                    message: 보유하지 않은 종목입니다.
                    code: 400
                alreadySubmittedApplication:
                  value:
                    message: 이미 제출한 지원서는 임시 저장할 수 없습니다.
                    code: 400
                alreadySolidarityLeaderExists:
                  value:
                    message: 해당 연대에 이미 주주대표가 존재합니다.
                    code: 400
                invalidApplicationContentAllLength:
                  value:
                    message: 주주대표 지원서 각 항목은 모두 80자 이상 500자 이하로 입력해주세요.
                    code: 400
                invalidApplicationContentMaxLength:
                  value:
                    message: 주주대표 지원서 각 항목은 모두 500자 이하로 입력해주세요.
                    code: 400
                invalidApplyPeriod:
                  value:
                    message: 주주대표 지원 기간이 아닙니다.
                    code: 400
                invalidApplicationCondition:
                  value:
                    message: 주주대표 충족요건이 달성되지 않아 지원이 불가능합니다.
                    code: 400
                solidarityDailyStatisticsNotFound:
                  value:
                    message: 주주대표 지원이 불가합니다. 고객센터에 문의해주세요.
                    code: 400
                invalidUpdatePermission:
                  value:
                    message: 본인이 작성한 지원서만 수정할 수 있습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              example:
                value:
                  message: 보유하고 있지 않은 주식입니다.
                  code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "404":
          content:
            application/json:
              examples:
                stockNotFound:
                  value:
                    message: 존재하지 않는 종목입니다.
                    code: 404
                solidarityLeaderApplicantNotFound:
                  value:
                    message: 지원서를 임시 저장하거나 제출한 내역이 없습니다.
                    code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 주주대표 지원서 수정하기 (임시저장 제출)
      tags:
      - SolidarityLeaderElection
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: SolidarityLeaderElection
  /api/stocks/{stockCode}/solidarity-leader-elections/{solidarityLeaderElectionId}/vote-items:
    get:
      operationId: getSolidarityLeaderElectionVoteItems
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Solidarity Leader Election Id
        explode: false
        in: path
        name: solidarityLeaderElectionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolidarityLeaderElectionDetailResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 주주대표 선출 투표 현황 조회
      tags:
      - SolidarityLeaderElectionPostPoll
      x-accepts: application/json
      x-tags:
      - tag: SolidarityLeaderElectionPostPoll
  /api/stocks/{stockCode}/solidarity-leader-elections/{solidarityLeaderElectionId}/answers:
    post:
      operationId: createElectionPostPollAnswer
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Poll ID parameter
        explode: false
        in: path
        name: solidarityLeaderElectionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPollAnswerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollAnswerDataArrayResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 주주대표 선출 투표하기
      tags:
      - SolidarityLeaderElectionPostPollAnswer
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: SolidarityLeaderElectionPostPollAnswer
    put:
      operationId: updateElectionPostPollAnswer
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Poll ID parameter
        explode: false
        in: path
        name: solidarityLeaderElectionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPollAnswerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollAnswerDataArrayResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notMyPollAnswer:
                  value:
                    message: 본인이 선택한 항목만 수정할 수 있습니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 주주대표 선출 투표 수정하기
      tags:
      - SolidarityLeaderElectionPostPollAnswer
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: SolidarityLeaderElectionPostPollAnswer
  /api/admin/dashboard/statistics:
    get:
      description: 대쉬보드 화면 상단 전체 정보와 하단의 종목별 정보 파라미터별로 조회한다.
      operationId: getStatistics
      parameters:
      - description: DashboardStatisticsType 기본값 없으면 전체 차트 조회
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: stockCode 기본값 없으면 전체 차트 조회
        explode: true
        in: query
        name: stockCode
        required: false
        schema:
          type: string
        style: form
      - description: DAILY or MONTHLY 기본값은 DAILY
        explode: true
        in: query
        name: periodType
        required: false
        schema:
          type: string
        style: form
      - description: 2023-11-24 or 2023-05 is period 7
        explode: true
        in: query
        name: searchFrom
        required: false
        schema:
          type: string
        style: form
      - description: 2023-11-30 or 2023-11 is period 7
        explode: true
        in: query
        name: searchTo
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                search:
                  period: 7
                  from: 2023-05 or 2023-05-31
                  to: 2023-11 or 2023-11-30
                data:
                  items:
                  - chartType: USER_REGISTRATION_COUNT
                    title: 가입자수
                    value: 100
                    periodType: DAILY
                    summary:
                      upDown: up
                      text: 전일대비
                      value: 10%
                    items:
                    - key: 2023-10-31
                      value: 100
                    - key: 2023-11-01
                      value: 100
                    - key: 2023-11-02
                      value: 100
                    - key: 2023-11-03
                      value: 100
                    - key: 2023-11-04
                      value: 100
                    - key: 2023-11-05
                      value: 100
                    - key: 2023-11-06
                      value: 100
                  - chartType: USER_WITHDRAWAL_COUNT
                    title: 탈퇴자수
                    value: 100
                    periodType: DAILY
                    summary:
                      upDown: up
                      text: 전일대비
                      value: 10%
                    items:
                    - key: 2023-10-31
                      value: 100
                    - key: 2023-11-01
                      value: 100
                    - key: 2023-11-02
                      value: 100
                    - key: 2023-11-03
                      value: 100
                    - key: 2023-11-04
                      value: 100
                    - key: 2023-11-05
                      value: 100
                    - key: 2023-11-06
                      value: 100
              schema:
                $ref: '#/components/schemas/DashboardStatisticsDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 대쉬보드 전체/종목별 일별/월별 통계 조회
      tags:
      - AdminDashboardStatistics
      x-accepts: application/json
      x-tags:
      - tag: AdminDashboardStatistics
  /api/admin/dashboard/statistics/gender:
    get:
      operationId: getStatisticsGender
      parameters:
      - description: DAILY or MONTHLY 기본값은 DAILY
        explode: true
        in: query
        name: periodType
        required: false
        schema:
          type: string
        style: form
      - description: 2023-11-24 or 2023-05 is period 7
        explode: true
        in: query
        name: searchFrom
        required: false
        schema:
          type: string
        style: form
      - description: 2023-11-30 or 2023-11 is period 7
        explode: true
        in: query
        name: searchTo
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                search:
                  period: 7
                  from: 2023-05 or 2023-05-31
                  to: 2023-11 or 2023-11-30
                data:
                  type: USER_BY_GENDER_COUNT
                  title: 성별
                  periodType: DAILY
                  total: 100
                  male:
                    title: 남
                    value: 50
                    percent: 50%
                    upDown: up down
                    text: 전일대비 전월대비
                    upDownValue: 0.5%
                  female:
                    title: 여
                    value: 50
                    percent: 50%
                    upDown: up down
                    text: 전일대비 전월대비
                    upDownValue: 0.5%
              schema:
                $ref: '#/components/schemas/DashboardStatisticsGenderDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 대쉬보드 성별 일별/월별 통계 조회
      tags:
      - AdminDashboardStatistics
      x-accepts: application/json
      x-tags:
      - tag: AdminDashboardStatistics
  /api/admin/dashboard/statistics/age:
    get:
      operationId: getStatisticsAge
      parameters:
      - description: DAILY or MONTHLY 기본값은 DAILY
        explode: true
        in: query
        name: periodType
        required: false
        schema:
          type: string
        style: form
      - description: 2023-11-24 or 2023-05 is period 7
        explode: true
        in: query
        name: searchFrom
        required: false
        schema:
          type: string
        style: form
      - description: 2023-11-30 or 2023-11 is period 7
        explode: true
        in: query
        name: searchTo
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                search:
                  period: 7
                  from: 2023-05 or 2023-05-31
                  to: 2023-11 or 2023-11-30
                data:
                  type: USER_BY_AGE_COUNT
                  title: 연령별
                  periodType: DAILY
                  total: 100
                  age20:
                    title: 20대
                    value: 50
                    percent: 50%
                    upDown: up down
                    text: 전일대비 전월대비
                    upDownValue: 0.5%
                  age30:
                    title: 30대
                    value: 0
                    percent: 0%
                    upDown: up down
                    text: 전일대비 전월대비
                    upDownValue: 0.5%
                  age40:
                    title: 40대
                    value: 0
                    percent: 0%
                    upDown: up down
                    text: 전일대비 전월대비
                    upDownValue: 0.5%
                  age50:
                    title: 50대
                    value: 50
                    percent: 50%
                    upDown: up down
                    text: 전일대비 전월대비
                    upDownValue: 0.5%
              schema:
                $ref: '#/components/schemas/DashboardStatisticsAgeDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 대쉬보드 나이별 일별/월별 통계 조회
      tags:
      - AdminDashboardStatistics
      x-accepts: application/json
      x-tags:
      - tag: AdminDashboardStatistics
  /api/admin/solidarity-leaders/{solidarityId}:
    delete:
      operationId: dismissSolidarityLeader
      parameters:
      - description: Solidarity Id
        explode: false
        in: path
        name: solidarityId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissSolidarityLeaderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목 주주대표 해임하기
      tags:
      - AdminSolidarityLeader
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminSolidarityLeader
    post:
      operationId: createSolidarityLeader
      parameters:
      - description: Solidarity Id
        explode: false
        in: path
        name: solidarityId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolidarityLeaderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목 주주대표 선정하기
      tags:
      - AdminSolidarityLeader
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminSolidarityLeader
  /api/admin/solidarity-leaders/{solidarityId}/corporate-user:
    post:
      operationId: createSolidarityLeaderForCorporateUser
      parameters:
      - description: Solidarity Id
        explode: false
        in: path
        name: solidarityId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolidarityLeaderForCorporateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 법인사업자 주주대표 선정하기
      tags:
      - AdminSolidarityLeader
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminSolidarityLeader
  /api/admin/solidarity-leaders/{solidarityId}/message:
    patch:
      operationId: updateSolidarityLeaderMessageByAdmin
      parameters:
      - description: Solidarity ID parameter
        explode: false
        in: path
        name: solidarityId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSolidarityLeaderMessageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                unAuthorized:
                  value:
                    message: 주주대표 한마디를 확인해주세요.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Inappropriate Message.
        "404":
          content:
            application/json:
              examples:
                notFoundSolidarityLeader:
                  value:
                    message: 주주대표를 찾을 수 없습니다.
                    code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: No Solidarity Leader Found
      security:
      - bearerAuth: []
      summary: CMS 주주대표 한마디 수정하기
      tags:
      - AdminSolidarityLeader
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminSolidarityLeader
  /api/admin/solidarity-leader-applicants/{solidarityId}:
    delete:
      operationId: deleteSolidarityLeaderApplicant
      parameters:
      - description: Solidarity Id
        explode: false
        in: path
        name: solidarityId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSolidarityApplicantRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목 유저의 주주대표 지원자 삭제하기
      tags:
      - AdminSolidarityLeaderApplicant
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminSolidarityLeaderApplicant
  /api/admin/stocks/{stockCode}/solidarity-leader-applicants/{solidarityLeaderApplicantId}/withdraw:
    post:
      operationId: withdrawSolidarityLeaderApplicant
      parameters:
      - description: 종목 코드
        in: path
        name: stockCode
        required: true
        schema:
          type: string
      - description: 지원서 ID
        in: path
        name: solidarityLeaderApplicantId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawSolidarityLeaderApplicantRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 관리자가 지원자의 지원을 철회한다.
      tags:
      - AdminSolidarityLeaderApplicant
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminSolidarityLeaderApplicant
  /api/admin/stock-groups:
    get:
      operationId: getStockGroups
      parameters:
      - description: Stock group ID
        explode: true
        in: query
        name: stockGroupId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                code: 종목코드
                name: 종목명
                memberCount: 10000
                stake: 0.05
              schema:
                $ref: '#/components/schemas/GetStockGroupsResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목그룹 목록 조회하기
      tags:
      - AdminStockGroup
      x-accepts: application/json
      x-tags:
      - tag: AdminStockGroup
    post:
      operationId: createStockGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStockGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 1456
                name: 종목그룹명
                stockCount: 1000
                status: ACTIVE
                description: 종목그룹 설명
                createdAt: 2021-07-18T13:52:31.082965Z
                updatedAt: 2021-07-18T13:52:45.028685Z
                deletedAt: 2021-07-18T13:52:45.028685Z
              schema:
                $ref: '#/components/schemas/StockGroupDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목그룹 등록 하기
      tags:
      - AdminStockGroup
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminStockGroup
  /api/admin/stock-groups/auto-complete:
    get:
      deprecated: true
      operationId: getStockGroupsAutoComplete
      parameters:
      - description: Search keyword
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockGroupDataArrayResponse'
          description: Success
      security:
      - bearerAuth: []
      summary: CMS 종목그룹 자동 완성
      tags:
      - AdminStockGroup
      x-accepts: application/json
      x-tags:
      - tag: AdminStockGroup
  /api/admin/stock-groups/{stockGroupId}:
    delete:
      operationId: deleteStockGroup
      parameters:
      - description: Stock group ID
        explode: false
        in: path
        name: stockGroupId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목그룹 삭제하기
      tags:
      - AdminStockGroup
      x-accepts: application/json
      x-tags:
      - tag: AdminStockGroup
    get:
      operationId: getStockGroupDetails
      parameters:
      - description: Stock group ID
        explode: false
        in: path
        name: stockGroupId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                code: 종목코드
                name: 종목명
                memberCount: 10000
                stake: 0.05
              schema:
                $ref: '#/components/schemas/GetStockGroupDetailsDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목그룹 상세 조회하기
      tags:
      - AdminStockGroup
      x-accepts: application/json
      x-tags:
      - tag: AdminStockGroup
    put:
      operationId: updateStockGroup
      parameters:
      - description: Stock group ID
        explode: false
        in: path
        name: stockGroupId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStockGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 1456
                name: 종목그룹명
                stockCount: 1000
                status: ACTIVE
                description: 종목그룹 설명
                createdAt: 2021-07-18T13:52:31.082965Z
                updatedAt: 2021-07-18T13:52:45.028685Z
                deletedAt: 2021-07-18T13:52:45.028685Z
              schema:
                $ref: '#/components/schemas/StockGroupDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목그룹 수정 하기
      tags:
      - AdminStockGroup
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminStockGroup
  /api/admin/stocks:
    get:
      operationId: getStocks
      parameters:
      - description: Stock code
        explode: true
        in: query
        name: code
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - stake:desc
          example:
          - stake:desc
          - memberCount:desc
          - marketValue:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: filter only private stocks
        explode: true
        in: query
        name: isOnlyPrivateStocks
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                code: 종목코드
                name: 종목명
                memberCount: 10000
                stake: 0.05
              schema:
                $ref: '#/components/schemas/GetStocksResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목 목록 조회하기
      tags:
      - AdminStock
      x-accepts: application/json
      x-tags:
      - tag: AdminStock
  /api/admin/stocks/private-stocks:
    post:
      operationId: createPrivateStock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrivateStockRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: 비상장 종목 등록
      tags:
      - AdminPrivateStock
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminPrivateStock
  /api/admin/stocks/{code}:
    get:
      operationId: getStockDetails
      parameters:
      - description: Stock code
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                solidarity:
                  code: "024810"
                  name: 이화전기
                  memberCount: 1
                  stake: 0.05
                  status: ACTIVE
                  requiredMemberCount: 10
                  minThresholdMemberCount: 50
                solidarityLeader:
                  id: 1324
                  name: 이름
                  birthDate: 1999-08-07T12:00:00.000Z
                  email: test@act.com
                  phoneNumber: "01012345678"
                  nickname: 닉네임
                  status: ACTIVE
                  solidarityId: 1234
                  message: 인사말
                acceptUser:
                  id: 1324
                  name: 이름
                  birthDate: 1999-08-07T12:00:00.000Z
                  phoneNumber: "01012345678"
                  corporateNo: 수임인이 법인 사업자인 경우
                todayDelta:
                  descriptionLabel: "최종 업데이트(전일대비): 2023-08-23 21:49"
                  items:
                  - title: 주식수/주주수/시가액/지분율/연대포인트
                    value: 10000주
                    text: ▲/▼
                    color: "#FF0000 or #000000"
                solidarityLeaderApplicants:
                  items:
                  - id: 1324
                    name: 이름
                    phoneNumber: "01012345678"
                    nickname: 닉네임
                    solidarityApplicantId: 124
              schema:
                $ref: '#/components/schemas/GetStockDetailsDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목 상세 조회
      tags:
      - AdminStock
      x-accepts: application/json
      x-tags:
      - tag: AdminStock
  /api/admin/stocks/{code}/acceptor-users:
    delete:
      operationId: deleteStockAcceptorUser
      parameters:
      - description: Stock Code
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStockAcceptorUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목 상세 수임인 해임
      tags:
      - AdminStockAcceptorUser
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminStockAcceptorUser
    post:
      operationId: createStockAcceptorUser
      parameters:
      - description: Stock Code
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStockAcceptorUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목 상세 수임인 선정
      tags:
      - AdminStockAcceptorUser
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminStockAcceptorUser
  /api/admin/stocks/{code}/statistics/{type}/{periodType}:
    get:
      operationId: getStockStatistics
      parameters:
      - description: Stock code
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: STOCK_QUANTITY(주식수) OR MEMBER_COUNT(주주수) OR MARKET_VALUE(시가액)
          OR STAKE(지분율)
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: DAILY OR MONTHLY
        explode: false
        in: path
        name: periodType
        required: true
        schema:
          type: string
        style: simple
      - description: 202310 for DAILY or 2023 for MONTHLY
        explode: true
        in: query
        name: period
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  items:
                  - key: 2023-10
                    value: 100
                  - key: 2023-10-01
                    value: 0.00345
              schema:
                $ref: '#/components/schemas/GetStockStatisticsDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 종목 통계 정보 일별/월별 조회
      tags:
      - AdminStock
      x-accepts: application/json
      x-tags:
      - tag: AdminStock
  /api/admin/stocks/auto-complete:
    get:
      deprecated: true
      operationId: getStocksAutoComplete
      parameters:
      - description: Search keyword
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockDataArrayResponse'
          description: Success
      security:
      - bearerAuth: []
      summary: 종목명 자동 완성
      tags:
      - AdminStock
      x-accepts: application/json
      x-tags:
      - tag: AdminStock
  /api/batch/send-pushes:
    post:
      operationId: sendPushes
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/stock-rankings:
    post:
      operationId: createStockRanking
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/user-holding-stocks-histories:
    post:
      operationId: createUserHoldingStocksHistories
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/cleanup/unfinished-digital-document-users:
    post:
      operationId: cleanupUnfinishedDigitalDocumentUsers
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/qa/test-stocks:
    post:
      operationId: updateTestStocks
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/cleanup/unfinished-batches:
    post:
      operationId: cleanupUnfinishedBatches
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/batch/maintenance/solidarity-leader-elections:
    post:
      operationId: maintainSolidarityLeaderElections
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Success
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Batch
  /api/admin/solidarity/{solidarityId}/active:
    patch:
      operationId: updateSolidarityToActive
      parameters:
      - description: Solidarity ID parameter
        explode: false
        in: path
        name: solidarityId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolidarityDataResponse'
          description: Success
      security:
      - bearerAuth: []
      summary: 주주 연대 활성화하기
      tags:
      - AdminSolidarity
      x-accepts: application/json
      x-tags:
      - tag: AdminSolidarity
  /api/admin/{reportType}/reports:
    get:
      operationId: getReports
      parameters:
      - description: Report type code parameter POST or COMMENT
        explode: false
        in: path
        name: reportType
        required: true
        schema:
          type: string
        style: simple
      - description: Report status code parameter
        explode: true
        in: query
        name: reportStatus
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 보유하고 있지 않은 주식입니다.
                code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 신고 목록 조회하기
      tags:
      - AdminReport
      x-accepts: application/json
      x-tags:
      - tag: AdminReport
  /api/admin/{reportType}/reports/{reportId}:
    get:
      operationId: getReportDetail
      parameters:
      - description: Report type code parameter POST or COMMENT
        explode: false
        in: path
        name: reportType
        required: true
        schema:
          type: string
        style: simple
      - description: Report ID
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDetailResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 보유하고 있지 않은 주식입니다.
                code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 신고 상세 조회하기
      tags:
      - AdminReport
      x-accepts: application/json
      x-tags:
      - tag: AdminReport
    patch:
      operationId: updateReportStatus
      parameters:
      - description: Report type code parameter POST or COMMENT
        explode: false
        in: path
        name: reportType
        required: true
        schema:
          type: string
        style: simple
      - description: Report ID
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateReportStatus_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDetailResponse'
          description: Successful response
        "403":
          content:
            application/json:
              example:
                message: 보유하고 있지 않은 주식입니다.
                code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 신고 컨텐츠 처리하기
      tags:
      - AdminReport
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminReport
  /api/admin/digital-document/preview:
    post:
      operationId: previewDigitalDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewDigitalDocumentRequest'
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: Preview Digital Document Files downloaded successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
      security:
      - bearerAuth: []
      summary: 전자문서 미리보기
      tags:
      - AdminDigitalDocument
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminDigitalDocument
  /api/admin/digital-document/{digitalDocumentId}/reference-dates/{referenceDateId}:
    patch:
      operationId: updateDigitalDocumentReferenceDate
      parameters:
      - description: Digital Document ID parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: ReferenceDate ID parameter
        explode: false
        in: path
        name: referenceDateId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStockReferenceDateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockReferenceDateDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 액션 리스트 전자문서 위임장 기준일 변경
      tags:
      - AdminDigitalDocument
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminDigitalDocument
  /api/admin/digital-document/{digitalDocumentId}/zip-file-request:
    post:
      operationId: createDigitalDocumentZipFile
      parameters:
      - description: Digital document id parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: ZIP file is secured with password or not
        explode: true
        in: query
        name: isSecured
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 전자문서 ZIP 파일 생성요청
      tags:
      - AdminDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: AdminDigitalDocument
  /api/admin/digital-document/{digitalDocumentId}/csv-download:
    post:
      operationId: downloadDigitalDocumentUserResponseInCsv
      parameters:
      - description: Digital document id parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: Digital Document Files download successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 전자문서 응답내역 엑셀 파일 다운로드
      tags:
      - AdminDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: AdminDigitalDocument
  /api/admin/digital-documents/{digitalDocumentId}/pin-verification-given-register-digital-document-complete-retention-download:
    get:
      operationId: downloadPinVerificationGivenRegisterDigitalDocumentCompleteRetentionDownload
      parameters:
      - description: Digital document id parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: Digital Document Files download successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 전자문서 서명 기간동안 신규 가입한 사용자의 리텐션 조회
      tags:
      - UserRetentionWeeklyMatrixByDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: UserRetentionWeeklyMatrixByDigitalDocument
  ? /api/admin/digital-documents/{digitalDocumentId}/pin-verification-given-register-digital-document-not-complete-retention-download
  : get:
      operationId: downloadPinVerificationGivenRegisterAndDigitalDocumentNotCompleteRetentionDownload
      parameters:
      - description: Digital document id parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: download retention of user that register in digital document
            progress period and not participate digital document
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 전자문서 서명 기간 내의 신규 가입자 중 해당 전자문서에 참여하지 않은 사용자들의 리텐션 csv 다운로드
      tags:
      - UserRetentionWeeklyMatrixByDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: UserRetentionWeeklyMatrixByDigitalDocument
  /api/admin/digital-document/{digitalDocumentId}/users:
    get:
      operationId: getDigitalDocumentUsers
      parameters:
      - description: Digital document ID parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: UserSearchType - NAME(이름)
        explode: true
        in: query
        name: searchType
        required: false
        schema:
          type: string
        style: form
      - description: Search keyword
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - name:asc
          example: name:asc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalDocumentUserDetailsDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 전자문서 유저 응답내역 리스트 조회
      tags:
      - AdminDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: AdminDigitalDocument
  /api/public/download/{downloadFileTypeName}/{zipFileKey}:
    get:
      operationId: downloadFile
      parameters:
      - description: Download file type parameter (ZIP)
        explode: false
        in: path
        name: downloadFileTypeName
        required: true
        schema:
          type: string
        style: simple
      - description: Zip file key parameter
        explode: false
        in: path
        name: zipFileKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: Digital Document Files download successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: ZIP 파일 다운로드
      tags:
      - PublicDownload
      x-accepts: application/json
      x-tags:
      - tag: PublicDownload
  /api/admin/images/{fileContentType}:
    post:
      operationId: uploadImageAdmin
      parameters:
      - description: File content type (DEFAULT / DEFAULT_PROFILE)
        explode: false
        in: path
        name: fileContentType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadImageAdmin_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Images uploaded successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 이미지 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or size.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Upload A Image
      tags:
      - AdminImageUpload
      x-content-type: multipart/form-data
      x-accepts: application/json
      x-tags:
      - tag: AdminImageUpload
  /api/admin/acceptors/digital-document/{digitalDocumentType}:
    get:
      operationId: getDigitalDocumentPostsByAcceptor
      parameters:
      - description: Digital Document Type parameter (DIGITAL_PROXY)
        explode: false
        in: path
        name: digitalDocumentType
        required: true
        schema:
          type: string
        style: simple
      - description: PostSearchType (TITLE)
        explode: true
        in: query
        name: searchType
        required: false
        schema:
          type: string
        style: form
      - description: Search keyword for post title
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                paging:
                  totalElements: 10
                  totalPages: 10
                  size: 10
                  page: 1
                  sorts: "createdAt:desc,userId:asc"
                data:
                - id: post id
                  title: 제목
                  content: 내용
                  status: ACTIVE
                  stock:
                    code: 종목코드
                    name: 종목명
                    totalIssuedQuantity: 100
                    representativePhoneNumber: (02) 555-6666
                  digitalDocument:
                    digitalDocumentType: DIGITAL_PROXY
                    answerStatus: null or COMPLETE
                    joinUserCount: 10
                    joinStockSum: 10
                    shareholdingRatio: 10.6
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
              schema:
                $ref: '#/components/schemas/GetPostDigitalDocumentDataResponse'
          description: Digital Documents
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: CMS 로그인한 수임인의 의결권위임 리스트
      tags:
      - AdminAcceptorDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: AdminAcceptorDigitalDocument
  /api/admin/users:
    get:
      operationId: getUsers
      parameters:
      - description: "UserFilterType - ALL(전체), ADMIN(어드민), SOLIDARITY_LEADER(주주대표\
          ), ACCEPTOR_USER(수임인)"
        explode: true
        in: query
        name: filterType
        required: false
        schema:
          type: string
        style: form
      - description: "UserSearchType - NAME(이름), USER_ID(사용자 아이디), NICKNAME(닉네임),\
          \ PHONE_NUMBER(휴대폰번호), EMAIL(이메일)"
        explode: true
        in: query
        name: searchType
        required: false
        schema:
          type: string
        style: form
      - description: Search keyword
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 사용자 목록 조회하기
      tags:
      - AdminUser
      x-accepts: application/json
      x-tags:
      - tag: AdminUser
  /api/admin/users/{userId}:
    get:
      operationId: getUserDetailsAdmin
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: Details of User
      tags:
      - AdminUser
      x-accepts: application/json
      x-tags:
      - tag: AdminUser
  /api/admin/users/{userId}/add-role:
    patch:
      operationId: addRoleToUser
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRoleToUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: Add role to the user
      tags:
      - AdminUserRole
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminUserRole
  /api/admin/users/{userId}/nickname:
    patch:
      operationId: editUserNickname
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUserNicknameRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                existingNickname:
                  summary: Already existing nickname
                  value:
                    code: 400
                    message: 이미 사용중인 닉네임입니다.
                invalidNickname:
                  summary: Not a valid nickname
                  value:
                    code: 400
                    message: 닉네임을 확인해주세요.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: edit user's nickname by admin
      tags:
      - AdminUser
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminUser
  /api/admin/users/{userId}/assign-admin:
    post:
      operationId: assignAdminToUser
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: Assign admin to user
      tags:
      - AdminUserRole
      x-accepts: application/json
      x-tags:
      - tag: AdminUserRole
  /api/admin/users/{userId}/revoke-admin:
    post:
      operationId: revokeAdminToUser
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 어드민 사용자를 일반 사용자로 변경
      tags:
      - AdminUserRole
      x-accepts: application/json
      x-tags:
      - tag: AdminUserRole
  /api/admin/users/{userId}/stocks:
    get:
      operationId: getUserStocks
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserStockResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 사용자 상세 하단 주식 정보 리스트
      tags:
      - AdminUserStock
      x-accepts: application/json
      x-tags:
      - tag: AdminUserStock
  /api/admin/users/{userId}/digital-document/{digitalDocumentId}/download-document:
    get:
      operationId: getUserDigitalDocumentPdfByAdmin
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Digital Document ID parameter
        explode: false
        in: path
        name: digitalDocumentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: Digital Document Files downloaded successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: CMS 전자문서 사용자별 pdf 다운로드
      tags:
      - AdminUserDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: AdminUserDigitalDocument
  /api/admin/users/{userId}/download-document/solidarity-leader-confidential-agreement:
    get:
      operationId: getSolidarityLeaderConfidentialAgreementDocumentByAdmin
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: Solidarity Leader Confidential Agreement Document File downloaded
            successfully
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: CMS 회원의 주주대표 비밀유지서약서 다운로드
      tags:
      - AdminUserDownloadDocument
      x-accepts: application/json
      x-tags:
      - tag: AdminUserDownloadDocument
  /api/admin/users/mydata/withdraw/{finpongAccessToken}:
    delete:
      operationId: withdrawMyDataWithToken
      parameters:
      - description: Mydata token parameter
        explode: false
        in: path
        name: finpongAccessToken
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 마이데이터 토큰으로 마이데이터 탈퇴하기
      tags:
      - AdminUser
      x-accepts: application/json
      x-tags:
      - tag: AdminUser
  /api/admin/users/{userId}/dummy-stock:
    delete:
      operationId: deleteDummyStockFromUser
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDummyStockFromUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: Delete dummy stock From the user
      tags:
      - AdminUserStock
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminUserStock
    get:
      operationId: getUserDummyStocks
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserDummyStockResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: Get dummy stocks from the user
      tags:
      - AdminUserStock
      x-accepts: application/json
      x-tags:
      - tag: AdminUserStock
    post:
      operationId: addDummyStockToUser
      parameters:
      - description: User ID parameter
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDummyStockToUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: Add dummy stock to the user
      tags:
      - AdminUserStock
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminUserStock
  /api/admin/stocks/{stockCode}/users/csv-download:
    post:
      operationId: downloadUsersByStockCodeCsv
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: File download successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 해당 종목을 보유한 유저정보 엑셀 파일 다운로드
      tags:
      - AdminStock
      x-accepts: application/json
      x-tags:
      - tag: AdminStock
  /api/admin/auth/login:
    post:
      operationId: loginAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CmsLoginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
          description: Logged in successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 아이디 혹은 비밀번호를 확인해주세요.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Admin Login
      tags:
      - AdminAuthentication
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminAuthentication
  /api/admin/auth/change-password:
    post:
      operationId: changeMyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
          description: Logged in successfully
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 아이디 혹은 비밀번호를 확인해주세요.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: Admin Change Password
      tags:
      - AdminAuthentication
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminAuthentication
  /api/admin/pushes:
    get:
      operationId: getPushesAdmin
      parameters:
      - description: SearchType (PUSH_TITLE / STOCK_NAME / PUSH_CONTENT)
        explode: true
        in: query
        name: searchType
        required: false
        schema:
          type: string
        style: form
      - description: Search keyword
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPushDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 푸시 목록 조회하기
      tags:
      - AdminPush
      x-accepts: application/json
      x-tags:
      - tag: AdminPush
    post:
      operationId: createPushAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePushRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushDetailsDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 푸시 등록 생성하기
      tags:
      - AdminPush
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminPush
  /api/admin/pushes/{pushId}:
    delete:
      operationId: deletePushAdmin
      parameters:
      - description: Push ID
        explode: false
        in: path
        name: pushId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      summary: 푸시 예약 삭제하기
      tags:
      - AdminPush
      x-accepts: application/json
      x-tags:
      - tag: AdminPush
    get:
      operationId: getPushDetailsAdmin
      parameters:
      - description: Push ID
        explode: false
        in: path
        name: pushId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushDetailsDataResponse'
          description: Successful
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      summary: 푸시 정보 상세조회
      tags:
      - AdminPush
      x-accepts: application/json
      x-tags:
      - tag: AdminPush
  /api/admin/automated-pushes:
    get:
      operationId: getAutomatedPushesAdmin
      parameters:
      - description: SearchType (PUSH_TITLE / AUTHOR_NAME / AUTHOR_NICKNAME / PUSH_CONTENT)
        explode: true
        in: query
        name: searchType
        required: false
        schema:
          type: string
        style: form
      - description: Search keyword
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPushDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 개인 자동 푸시 목록 조회하기
      tags:
      - AdminPush
      x-accepts: application/json
      x-tags:
      - tag: AdminPush
  /api/admin/popups:
    get:
      operationId: getPopupsAdmin
      parameters:
      - description: "예약중, 게시중, 종료 구분 (READY / PROCESSING / COMPLETE)"
        explode: true
        in: query
        name: popupStatus
        required: false
        schema:
          type: string
        style: form
      - description: SearchType (TITLE)
        explode: true
        in: query
        name: searchType
        required: false
        schema:
          type: string
        style: form
      - description: Search keyword
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPopupDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 팝업 목록 조회하기
      tags:
      - AdminPopup
      x-accepts: application/json
      x-tags:
      - tag: AdminPopup
    post:
      operationId: createPopup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopupDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 팝업 생성하기
      tags:
      - AdminPopup
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminPopup
  /api/admin/popups/{popupId}:
    delete:
      operationId: deletePopup
      parameters:
      - description: Popup Id
        explode: false
        in: path
        name: popupId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      summary: 팝업 삭제하기
      tags:
      - AdminPopup
      x-accepts: application/json
      x-tags:
      - tag: AdminPopup
    get:
      operationId: getPopupDetailsAdmin
      parameters:
      - description: Popup ID
        explode: false
        in: path
        name: popupId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopupDetailsDataResponse'
          description: Successful
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      summary: 팝업 정보 상세조회
      tags:
      - AdminPopup
      x-accepts: application/json
      x-tags:
      - tag: AdminPopup
    patch:
      operationId: updatePopup
      parameters:
      - description: Popup Id
        explode: false
        in: path
        name: popupId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopupDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 팝업 수정하기
      tags:
      - AdminPopup
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminPopup
  /api/admin/corporate-users:
    get:
      operationId: getCorporateUsers
      parameters:
      - description: CorporateUserSearchType (CORPORATE_NAME)
        explode: true
        in: query
        name: searchType
        required: false
        schema:
          type: string
        style: form
      - description: Search keyword
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCorporateUserDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 법인 사업자 목록 조회하기
      tags:
      - AdminCorporateUser
      x-accepts: application/json
      x-tags:
      - tag: AdminCorporateUser
    post:
      operationId: createCorporateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorporateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateUserDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 법인 사업자 생성하기
      tags:
      - AdminCorporateUser
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminCorporateUser
  /api/admin/corporate-users/{corporateId}:
    delete:
      operationId: deleteCorporateUser
      parameters:
      - description: Corporate Id
        explode: false
        in: path
        name: corporateId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful
      security:
      - bearerAuth: []
      summary: 법인 사업자 삭제하기
      tags:
      - AdminCorporateUser
      x-accepts: application/json
      x-tags:
      - tag: AdminCorporateUser
    patch:
      operationId: updateCorporateUser
      parameters:
      - description: Corporate Id
        explode: false
        in: path
        name: corporateId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorporateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateUserDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 법인 사업자 수정하기
      tags:
      - AdminCorporateUser
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminCorporateUser
  /api/popup/exclusive:
    get:
      operationId: getExclusivePopup
      parameters:
      - description: MAIN_HOME or NEWS_HOME or STOCK_HOME
        explode: true
        in: query
        name: displayTargetType
        required: true
        schema:
          type: string
        style: form
      - description: Stock code
        explode: true
        in: query
        name: stockCode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopupDetailsDataResponse'
          description: Successful
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      summary: 여러개의 팝업중에 사용자에게 가장 중요한 팝업을 선별하여 회신한다
      tags:
      - Popup
      x-accepts: application/json
      x-tags:
      - tag: Popup
  /api/posts/digital-document/{digitalDocumentType}:
    get:
      operationId: getDigitalDocumentPosts
      parameters:
      - description: Digital Document Type parameter (DIGITAL_PROXY)
        explode: false
        in: path
        name: digitalDocumentType
        required: true
        schema:
          type: string
        style: simple
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                paging:
                  totalElements: 10
                  totalPages: 10
                  size: 10
                  page: 1
                  sorts: "createdAt:desc,userId:asc"
                data:
                - id: post id
                  title: 제목
                  content: 내용
                  status: ACTIVE
                  stock:
                    code: 종목코드
                    name: 종목명
                    totalIssuedQuantity: 100
                    representativePhoneNumber: (02) 555-6666
                  digitalDocument:
                    digitalDocumentType: DIGITAL_PROXY
                    answerStatus: null or COMPLETE
                    joinUserCount: 10
                    joinStockSum: 10
                    shareholdingRatio: 10.6
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
              schema:
                $ref: '#/components/schemas/GetPostDigitalDocumentResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 전자문서 의결권위임 리스트 조회
      tags:
      - DigitalDocumentPost
      x-accepts: application/json
      x-tags:
      - tag: DigitalDocumentPost
  /api/admin/board-groups/{boardGroupName}/categories:
    get:
      operationId: getBoardGroupCategoriesAdmin
      parameters:
      - description: Board group name parameter
        example: ACT_BEST or ANALYSIS or ACTION or DEBATE or GLOBALBOARD or GLOBALCOMMUNITY
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardCategoryDataArrayResponse'
          description: Successful response
        "404":
          content:
            application/json:
              examples:
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 게시판 그룹별 카테고리 조회
      tags:
      - AdminBoardGroupCategory
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupCategory
  /api/admin/board-groups/{boardGroup}/posts:
    get:
      operationId: getPosts
      parameters:
      - description: BoardGroup ACTION or ANALYSIS or DEBATE or GLOBALBOARD
        explode: false
        in: path
        name: boardGroup
        required: true
        schema:
          type: string
        style: simple
      - description: BoardCategory
        explode: true
        in: query
        name: boardCategory
        required: false
        schema:
          type: string
        style: form
      - description: PostSearchType (STOCK_CODE / TITLE / CONTENT / TITLE_AND_CONTENT)
        explode: true
        in: query
        name: searchType
        required: false
        schema:
          type: string
        style: form
      - description: Search keyword for title or stockCode for stock
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      - description: Search start date for post created date
        explode: true
        in: query
        name: searchStartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Search end date for post created date
        explode: true
        in: query
        name: searchEndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Status of the post (ACTIVE, DELETED_BY_USER, DELETED_BY_ADMIN\
          \ or ALL)"
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                paging:
                  totalElements: 10
                  totalPages: 10
                  size: 10
                  page: 1
                  sorts: "createdAt:desc,userId:asc"
                data:
                - id: 1
                  stock:
                    name: 종목명
                  title: 제목
                  viewCount: 100
                  commentCount: 10
                  likeCount: 1
                  status: ACTIVE
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
              schema:
                $ref: '#/components/schemas/GetBoardGroupPostResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: CMS 공통 게시글/액션/토론방 목록 조회하기
      tags:
      - AdminBoardGroupPost
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupPost
  /api/admin/posts/{postId}/csv-download:
    get:
      operationId: downloadPostPollResultsInCsv
      parameters:
      - description: Post id
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: Poll User responses file download
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 설문 게시글 설문 결과 다운로드
      tags:
      - AdminPost
      x-accepts: application/json
      x-tags:
      - tag: AdminPost
  /api/admin/campaigns/{campaignId}/zip-file-request:
    post:
      operationId: createCampaignDigitalDocumentZipFile
      parameters:
      - description: Campaign document id parameter
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: ZIP file is secured with password or not
        explode: true
        in: query
        name: isSecured
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 캠페인 전체 전자문서 ZIP 파일 생성요청
      tags:
      - AdminCampaign
      x-accepts: application/json
      x-tags:
      - tag: AdminCampaign
  /api/admin/campaigns/{campaignId}/csv-download:
    post:
      operationId: downloadCampaignUserResponseInCsv
      parameters:
      - description: Campaign document id parameter
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: Campaign Document Files download
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 캠페인 내의 전자문서 혹은 설문 응답내역 엑셀 파일 다운로드
      tags:
      - AdminCampaign
      x-accepts: application/json
      x-tags:
      - tag: AdminCampaign
  /api/admin/campaigns/{campaignId}/pin-verification-given-register-digital-document-complete-retention-download:
    get:
      operationId: downloadPinVerificationGivenRegisterDigitalDocumentOfCampaignCompleteRetentionDownload
      parameters:
      - description: Campaign document id parameter
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: download retention of user that register and participate campaign
            in campaign period
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 캠페인 기간 내의 신규 가입자 중 해당 캠페인에 참여한 사용자들의 리텐션 csv 다운로드
      tags:
      - UserRetentionWeeklyMatrixByDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: UserRetentionWeeklyMatrixByDigitalDocument
  /api/admin/campaigns/{campaignId}/pin-verification-given-register-digital-document-not-complete-retention-download:
    get:
      operationId: downloadPinVerificationGivenRegisterDigitalDocumentOfCampaignNotCompleteRetentionDownload
      parameters:
      - description: Campaign document id parameter
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: download retention of user that register in campaign progress
            period and not participate in the campaign
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 지원하지 않는 형식입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request. Invalid file format or data.
        "500":
          content:
            application/json:
              example:
                message: 알 수 없는 오류가 발생하였습니다. 잠시 후에 다시 시도해 주세요.
                code: 500
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - bearerAuth: []
      summary: 캠페인 기간 내의 신규 가입자 중 해당 캠페인에 참여하지 않은 사용자들의 리텐션 csv 다운로드
      tags:
      - UserRetentionWeeklyMatrixByDigitalDocument
      x-accepts: application/json
      x-tags:
      - tag: UserRetentionWeeklyMatrixByDigitalDocument
  /api/admin/campaigns/{campaignId}:
    delete:
      operationId: deleteCampaign
      parameters:
      - description: campaign id parameter
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                campaignNotFound:
                  value:
                    message: 캠페인이 존재하지 않습니다.
                    code: 400
                stockGroupNotFound:
                  value:
                    message: 종목그룹이 존재하지 않습니다.
                    code: 400
                sourcePostNotFound:
                  value:
                    message: 캠페인의 게시글이 존재하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found.
      security:
      - bearerAuth: []
      summary: CMS 캠페인 삭제
      tags:
      - AdminCampaign
      x-accepts: application/json
      x-tags:
      - tag: AdminCampaign
    get:
      operationId: getCampaignDetailsAdmin
      parameters:
      - description: campaign id parameter
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 1
                  title: 캠페인 제목
                  sourcePostId: 1
                  sourcePostTitle: 게시글 제목
                  sourceStockGroupId: 1
                  sourceStockGroupName: 주식 그룹명
                  status: ACTIVE
                  createdAt: 2023-08-10T08:22:44.548Z
                  updatedAt: 2023-08-10T08:22:44.548Z
                  deletedAt: null
              schema:
                $ref: '#/components/schemas/CampaignDetailsDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                campaignNotFound:
                  value:
                    message: 캠페인이 존재하지 않습니다.
                    code: 400
                stockGroupNotFound:
                  value:
                    message: 종목그룹이 존재하지 않습니다.
                    code: 400
                sourcePostNotFound:
                  value:
                    message: 캠페인의 게시글이 존재하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found.
      security:
      - bearerAuth: []
      summary: CMS 캠페인 상세조회
      tags:
      - AdminCampaign
      x-accepts: application/json
      x-tags:
      - tag: AdminCampaign
    patch:
      operationId: updateCampaign
      parameters:
      - description: campaign id parameter
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 1
                  title: 캠페인 제목
                  sourcePostId: 1
                  sourcePostTitle: 게시글 제목
                  sourceStockGroupId: 1
                  sourceStockGroupName: 주식 그룹명
                  status: ACTIVE
                  createdAt: 2023-08-10T08:22:44.548Z
                  updatedAt: 2023-08-10T08:22:44.548Z
                  deletedAt: null
              schema:
                $ref: '#/components/schemas/CampaignDetailsDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                campaignNotFound:
                  value:
                    message: 캠페인이 존재하지 않습니다.
                    code: 400
                stockGroupNotFound:
                  value:
                    message: 종목그룹이 존재하지 않습니다.
                    code: 400
                sourcePostNotFound:
                  value:
                    message: 캠페인의 게시글이 존재하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found.
      security:
      - bearerAuth: []
      summary: CMS 캠페인 수정
      tags:
      - AdminCampaign
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminCampaign
  /api/admin/campaigns:
    get:
      operationId: getCampaigns
      parameters:
      - description: "CampaignSearchType (TITLE, STOCK_GROUP_NAME)"
        explode: true
        in: query
        name: searchType
        required: false
        schema:
          type: string
        style: form
      - description: Search keyword for title for stock
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      - description: BoardCategory action surveys and etc
        explode: true
        in: query
        name: boardCategory
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                paging:
                  totalElements: 10
                  totalPages: 10
                  size: 10
                  page: 1
                  sorts: createdAt:desc
                data:
                - id: 1
                  title: 캠페인 제목
                  sourcePostId: 1
                  sourcePostTitle: 게시글 제목
                  sourceStockGroupId: 1
                  mappedStocksCount: 1
                  status: ACTIVE
                  createdAt: 2023-08-10T08:22:44.548Z
                  updatedAt: 2023-08-10T08:22:44.548Z
                  deletedAt: null
              schema:
                $ref: '#/components/schemas/GetCampaignsDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 캠페인 목록 조회하기
      tags:
      - AdminCampaign
      x-accepts: application/json
      x-tags:
      - tag: AdminCampaign
    post:
      operationId: createCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaignRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 1
                  title: 캠페인 제목
                  sourcePostId: 1
                  sourcePostTitle: 게시글 제목
                  sourceStockGroupId: 1
                  sourceStockGroupName: 종목 그룹명
                  status: ACTIVE
                  createdAt: 2023-08-10T08:22:44.548Z
                  updatedAt: 2023-08-10T08:22:44.548Z
                  deletedAt: null
              schema:
                $ref: '#/components/schemas/CampaignDetailsDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                boardGroupMismatch:
                  value:
                    message: 게시판 그룹이 유효하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Board group of the category does not match
        "404":
          content:
            application/json:
              examples:
                notFoundStockGroupId:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목그룹입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 캠페인 생성
      tags:
      - AdminCampaign
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminCampaign
  /api/admin/stocks/{stockCode}/board-groups/{boardGroupName}/posts:
    post:
      operationId: createPost
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: BoardGroup ACTION or ANALYSIS or DEBATE or GLOBALBOARD
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 1
                  title: 게시글 제목
                  content: 게시글 내용
                  viewCount: 100
                  commentCount: 10
                  likeCount: 1
                  status: ACTIVE
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
                  stock:
                    code: 종목코드
                    name: 종목명
                  userProfile:
                    profileImageUrl: 프로필 이미지 uRL
                    nickname: 닉네임
                    individualStockCountLabel: 보유주식라벨
                    totalAssetLabel: 총자산라벨
                  poll:
                    id: 1
                    title: 설문 제목
                    voteType: PERSON_BASED or SHAREHOLDER_BASED
                    SelectionOption: MULTIPLE_ITEMS or SINGLE_ITEM
                    status: ACTIVE
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                    items:
                    - text: 설문 아이템
                  digitalProxy:
                    id: 1
                    templateId: 아이디
                    templateName: 이름
                    templateRole: 권한
                    status: ACTIVE
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                  digitalDocument:
                    id: 1
                    type: 의결권위임 DIGITAL_PROXY or 공동보유 JOINT_OWNERSHIP_DOCUMENT or
                      기타 ETC_DOCUMENT
                    title: 기타 전자문서 제목
                    content: 전자문서 내용
                    companyName: 공동보유 회사명
                    companyRegistrationNumber: 공동보유 법인등록번호
                    shareholderMeetingType: 주총구분 REGULAR_GENERAL_MEETING_STOCKHOLDERS
                      or EXTRAORDINARY_GENERAL_MEETING_STOCKHOLDERS
                    shareholderMeetingName: 주총명
                    shareholderMeetingDate: 주총일시
                    designatedAgentNames: 의결권위임 수임인지정 대리인
                    acceptUserName: 주주대표 성명
                    acceptUserBirthDate: 주주대표 생년월일
                    status: ACTIVE
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                    attachOptions:
                      signImage: REQUIRED
                      idCardImage: REQUIRED or OPTIONAL or NONE
                      bankAccountImage: REQUIRED or OPTIONAL or NONE
                      hectoEncryptedBankAccountPdf: REQUIRED or OPTIONAL or NONE
                    items:
                    - id: 1
                      title: 의안1제목
                      content: 의안1내용
                      childItems:
                      - id: 2
                        title: 의안1-1제목
                        content: 의안1-1내용
                        leaderDescription: 주주대표 의견
                        defaultSelectValue: APPROVAL or REJECTION or ABSTENTION
              schema:
                $ref: '#/components/schemas/PostDetailsDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                boardGroupMismatch:
                  value:
                    message: 게시판 그룹이 유효하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Board group of the category does not match
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notAuthorizedCategory:
                  value:
                    message: 작성 권한이 없는 게시판입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundStockCode:
                  summary: Non-existing stock code
                  value:
                    code: 404
                    message: 존재하지 않는 종목코드입니다.
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 공통 게시글/액션/토론방 생성하기
      tags:
      - AdminBoardGroupPost
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupPost
  /api/admin/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}:
    delete:
      operationId: deletePost
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: BoardGroup ACTION or ANALYSIS or DEBATE or GLOBALBOARD
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful
        "400":
          content:
            application/json:
              examples:
                boardGroupMismatch:
                  value:
                    message: 게시판 그룹이 유효하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Board group of the category does not match
        "404":
          content:
            application/json:
              examples:
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
                notFoundPost:
                  summary: Non-existing post
                  value:
                    code: 404
                    message: 존재하지 않는 게시글입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 공통 게시글/액션/토론방 삭제하기
      tags:
      - AdminBoardGroupPost
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupPost
    get:
      operationId: getPostDetails
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: BoardGroup ACTION or ANALYSIS or DEBATE or GLOBALBOARD
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 1
                  title: 게시글 제목
                  content: 게시글 내용
                  viewCount: 100
                  commentCount: 10
                  likeCount: 1
                  status: ACTIVE
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
                  stock:
                    code: 종목코드
                    name: 종목명
                  userProfile:
                    profileImageUrl: 프로필 이미지 uRL
                    nickname: 닉네임
                    individualStockCountLabel: 보유주식라벨
                    totalAssetLabel: 총자산라벨
                  poll:
                    id: 1
                    title: 설문 제목
                    voteType: PERSON_BASED or SHAREHOLDER_BASED
                    selectionOption: MULTIPLE_ITEMS or SINGLE_ITEM
                    status: ACTIVE
                    voteTotalCount: 4
                    voteTotalStockSum: 113
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                    items:
                    - id: 1
                      text: 설문 아이템
                      voteItemCount: 2
                      voteItemStockSum: 22
                      createdAt: 2023-07-18T13:52:31.082965Z
                      updatedAt: 2023-07-18T13:52:45.028685Z
                  digitalProxy:
                    id: 1
                    templateId: 아이디
                    templateName: 이름
                    templateRole: 권한
                    status: ACTIVE
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                  digitalDocument:
                    id: 1
                    type: 의결권위임 DIGITAL_PROXY or 공동보유 JOINT_OWNERSHIP_DOCUMENT or
                      기타 ETC_DOCUMENT
                    title: 기타 전자문서 제목
                    content: 전자문서 내용
                    companyName: 공동보유 회사명
                    companyRegistrationNumber: 공동보유 법인등록번호
                    shareholderMeetingType: 주총구분 REGULAR_GENERAL_MEETING_STOCKHOLDERS
                      or EXTRAORDINARY_GENERAL_MEETING_STOCKHOLDERS
                    shareholderMeetingName: 주총명
                    shareholderMeetingDate: 주총일시
                    designatedAgentNames: 의결권위임 수임인지정 대리인
                    acceptUserName: 주주대표 성명
                    acceptUserBirthDate: 주주대표 생년월일
                    status: ACTIVE
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                    attachOptions:
                      signImage: OPTIONAL
                      idCardImage: OPTIONAL
                      bankAccountImage: OPTIONAL
                    items:
                    - id: 1
                      title: 의안1제목
                      content: 의안1내용
                      childItems:
                      - id: 2
                        title: 의안1-1제목
                        content: 의안1-1내용
                        leaderDescription: 주주대표 의견
                        defaultSelectValue: APPROVAL or REJECTION or ABSTENTION
                  election:
                    winner:
                      isElected: true
                      nickname: 슈퍼맨
                    applicants:
                    - id: 1
                      nickname: SuperAdmin
                      profileImageUrl: https://conduit.png
                      individualStockCountLabel: 500주+
                      solidarityApplicantId: 21
                    electionDetail:
                      solidarityLeaderElectionId: 31
                      status: VOTE_PERIOD
                      totalVoterCount: 0
                      pollApplicants:
                      - solidarityLeaderApplicantId: 21
                        nickname: SuperAdmin
                        totalVoterStockQuantity: 500
                        resolutionCondition:
                          stockQuantity: 6184660
                          label: 결의요건
                          unit: 주
                          valueText: 결의요건 6184660주
                          color: '#FF0000'
                        finishedEarlyCondition:
                          stockQuantity: 12369321
                          label: 조기마감
                          unit: 주
                          valueText: 조기마감 12369321주
                          color: '#FF0000'
                        pollItemGroups:
                        - pollItemId: 1
                          isVoted: true
                          title: 찬성
                          voteCount: 1
                          stockQuantity: 500
                          stockQuantityPercentage: 100
                        - pollItemId: 2
                          isVoted: false
                          title: 반대
                          voteCount: 0
                          stockQuantity: 0
                          stockQuantityPercentage: 0
              schema:
                $ref: '#/components/schemas/PostDetailsDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: CMS 공통 게시글/액션/토론방 상세 조회하기
      tags:
      - AdminBoardGroupPost
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupPost
    patch:
      operationId: updatePost
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: BoardGroup ACTION or ANALYSIS or DEBATE or GLOBALBOARD
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 1
                  title: 게시글 제목
                  content: 게시글 내용
                  viewCount: 100
                  commentCount: 10
                  likeCount: 1
                  status: ACTIVE
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
                  stock:
                    code: 종목코드
                    name: 종목명
                  userProfile:
                    profileImageUrl: 프로필 이미지 uRL
                    nickname: 닉네임
                    individualStockCountLabel: 보유주식라벨
                    totalAssetLabel: 총자산라벨
                  poll:
                    id: 1
                    title: 설문 제목
                    voteType: PERSON_BASED or SHAREHOLDER_BASED
                    selectionOption: MULTIPLE_ITEMS or SINGLE_ITEM
                    status: ACTIVE
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                    items:
                    - text: 설문 아이템
                  digitalProxy:
                    id: 1
                    templateId: 아이디
                    templateName: 이름
                    templateRole: 권한
                    status: ACTIVE
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                  digitalDocument:
                    id: 1
                    type: 의결권위임 DIGITAL_PROXY or 공동보유 JOINT_OWNERSHIP_DOCUMENT or
                      기타 ETC_DOCUMENT
                    title: 기타 전자문서 제목
                    content: 전자문서 내용
                    companyName: 공동보유 회사명
                    companyRegistrationNumber: 공동보유 법인등록번호
                    shareholderMeetingType: 주총구분 REGULAR_GENERAL_MEETING_STOCKHOLDERS
                      or EXTRAORDINARY_GENERAL_MEETING_STOCKHOLDERS
                    shareholderMeetingName: 주총명
                    shareholderMeetingDate: 주총일시
                    designatedAgentNames: 의결권위임 수임인지정 대리인
                    acceptUserName: 주주대표 성명
                    acceptUserBirthDate: 주주대표 생년월일
                    status: ACTIVE
                    version: 전자문서 버전 V1
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                    attachOptions:
                      signImage: OPTIONAL
                      idCardImage: OPTIONAL
                      bankAccountImage: OPTIONAL
                    items:
                    - id: 1
                      title: 의안1제목
                      content: 의안1내용
                      childItems:
                      - id: 2
                        title: 의안1-1제목
                        content: 의안1-1내용
                        leaderDescription: 주주대표 의견
                        defaultSelectValue: APPROVAL or REJECTION or ABSTENTION
              schema:
                $ref: '#/components/schemas/PostDetailsDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                boardGroupMismatch:
                  value:
                    message: 게시판 그룹이 유효하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Board group of the category does not match
        "403":
          content:
            application/json:
              examples:
                notAuthorizedCategory:
                  value:
                    message: 수정 권한이 없는 게시판입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
                notFoundPost:
                  summary: Non-existing post
                  value:
                    code: 404
                    message: 존재하지 않는 게시글입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 공통 게시글/액션/토론방 수정하기
      tags:
      - AdminBoardGroupPost
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupPost
  /api/admin/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/comments:
    get:
      operationId: getComments
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: BoardGroup ACTION or ANALYSIS or DEBATE or GLOBALBOARD
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: "createdAt:desc,likeCount:desc"
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                paging:
                  totalElements: 10
                  totalPages: 10
                  size: 10
                  page: 1
                  sorts: "createdAt:desc,userId:asc"
                data:
                  id: 1
                  userId: 1
                  content: 댓글 내용
                  liked: false
                  deleted: false
                  reported: false
                  likeCount: 1
                  replyCommentCount: 10
                  status: ACTIVE
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
                  editedAt: 2023-07-18T13:52:45.028685Z
                  userProfile:
                    profileImageUrl: 프로필 이미지 uRL
                    nickname: 닉네임
                    individualStockCountLabel: 보유주식라벨
                    totalAssetLabel: 총자산라벨
              schema:
                $ref: '#/components/schemas/CommentPagingResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: CMS 공통 댓글 목록 조회하기
      tags:
      - AdminBoardGroupPostComment
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupPostComment
    post:
      operationId: createPostComment
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: CMS 댓글 작성하기
      tags:
      - AdminBoardGroupPostComment
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupPostComment
  /api/admin/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/comments/{commentId}/replies:
    get:
      operationId: getReplies
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: BoardGroup ACTION or ANALYSIS or DEBATE or GLOBALBOARD
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comment ID
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: "createdAt:desc,likeCount:desc"
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                paging:
                  totalElements: 10
                  totalPages: 10
                  size: 10
                  page: 1
                  sorts: "createdAt:desc,userId:asc"
                data:
                  id: 1
                  userId: 1
                  content: 답글 내용
                  liked: false
                  deleted: false
                  reported: false
                  likeCount: 1
                  replyCommentCount: 10
                  status: ACTIVE
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
                  editedAt: 2023-07-18T13:52:45.028685Z
                  userProfile:
                    profileImageUrl: 프로필 이미지 uRL
                    nickname: 닉네임
                    individualStockCountLabel: 보유주식라벨
                    totalAssetLabel: 총자산라벨
              schema:
                $ref: '#/components/schemas/CommentPagingResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: CMS 공통 답글 목록 조회하기
      tags:
      - AdminBoardGroupPostComment
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupPostComment
    post:
      operationId: createPostCommentReplies
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Board group name parameter
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comment ID parameter
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: CMS 답글 작성하기
      tags:
      - AdminBoardGroupPostComment
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupPostComment
  /api/admin/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/comments/{commentId}:
    patch:
      operationId: updatePostComment
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: BoardGroup ACTION or ANALYSIS or DEBATE or GLOBALBOARD
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comment ID parameter
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 1
                  userId: 1
                  content: 답글 내용
                  liked: false
                  deleted: false
                  reported: false
                  likeCount: 1
                  replyCommentCount: 10
                  status: ACTIVE
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
                  editedAt: 2023-07-18T13:52:45.028685Z
                  userProfile:
                    profileImageUrl: 프로필 이미지 uRL
                    nickname: 닉네임
                    individualStockCountLabel: 보유주식라벨
                    totalAssetLabel: 총자산라벨
              schema:
                $ref: '#/components/schemas/CommentDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notCommentOwner:
                  value:
                    message: 댓글의 작성자만 수정 및 삭제가 가능합니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: CMS 공통 댓글 or 답글 수정하기(어드민 사용자의 글만 가능하다)
      tags:
      - AdminBoardGroupPostComment
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupPostComment
  /api/admin/stocks/{stockCode}/board-groups/{boardGroupName}/posts/{postId}/comments/{commentId}/status:
    patch:
      operationId: updateStatusPostComment
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: BoardGroup ACTION or ANALYSIS or DEBATE or GLOBALBOARD
        explode: false
        in: path
        name: boardGroupName
        required: true
        schema:
          type: string
        style: simple
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comment ID parameter
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentUpdateStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 1
                  userId: 1
                  content: 답글 내용
                  liked: false
                  deleted: false
                  reported: false
                  likeCount: 1
                  replyCommentCount: 10
                  status: ACTIVE
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
                  editedAt: 2023-07-18T13:52:45.028685Z
                  userProfile:
                    profileImageUrl: 프로필 이미지 uRL
                    nickname: 닉네임
                    individualStockCountLabel: 보유주식라벨
                    totalAssetLabel: 총자산라벨
              schema:
                $ref: '#/components/schemas/CommentDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              examples:
                notHeldStock:
                  value:
                    message: 보유하고 있지 않은 주식입니다.
                    code: 403
                notCommentOwner:
                  value:
                    message: 댓글의 작성자만 수정 및 삭제가 가능합니다.
                    code: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: CMS 공통 댓글 or 답글 상태 변경하기
      tags:
      - AdminBoardGroupPostComment
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminBoardGroupPostComment
  /api/admin/posts/{postId}/duplicate:
    post:
      operationId: duplicatePost
      parameters:
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCopyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 1
                  title: 게시글 제목
                  content: 게시글 내용
                  viewCount: 100
                  commentCount: 10
                  likeCount: 1
                  status: ACTIVE
                  createdAt: 2023-07-18T13:52:31.082965Z
                  updatedAt: 2023-07-18T13:52:45.028685Z
                  stock:
                    code: 종목코드
                    name: 종목명
                  userProfile:
                    profileImageUrl: 프로필 이미지 uRL
                    nickname: 닉네임
                    individualStockCountLabel: 보유주식라벨
                    totalAssetLabel: 총자산라벨
                  poll:
                    id: 1
                    title: 설문 제목
                    voteType: PERSON_BASED or SHAREHOLDER_BASED
                    selectionOption: MULTIPLE_ITEMS or SINGLE_ITEM
                    status: ACTIVE
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                    items:
                    - text: 설문 아이템
                  digitalProxy:
                    id: 1
                    templateId: 아이디
                    templateName: 이름
                    templateRole: 권한
                    status: ACTIVE
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                  digitalDocument:
                    id: 1
                    type: 의결권위임 DIGITAL_PROXY or 공동보유 JOINT_OWNERSHIP_DOCUMENT or
                      기타 ETC_DOCUMENT
                    title: 기타 전자문서 제목
                    content: 전자문서 내용
                    companyName: 공동보유 회사명
                    companyRegistrationNumber: 공동보유 법인등록번호
                    shareholderMeetingType: 주총구분 REGULAR_GENERAL_MEETING_STOCKHOLDERS
                      or EXTRAORDINARY_GENERAL_MEETING_STOCKHOLDERS
                    shareholderMeetingName: 주총명
                    shareholderMeetingDate: 주총일시
                    designatedAgentNames: 의결권위임 수임인지정 대리인
                    acceptUserName: 주주대표 성명
                    acceptUserBirthDate: 주주대표 생년월일
                    status: ACTIVE
                    targetStartDate: 2023-07-18T13:52:31.082965Z
                    targetEndDate: 2023-07-18T13:52:45.028685Z
                    attachOptions:
                      signImage: OPTIONAL
                      idCardImage: OPTIONAL
                      bankAccountImage: OPTIONAL
                      hectoEncryptedBankAccountPdf: OPTIONAL
                    items:
                    - id: 1
                      title: 의안1제목
                      content: 의안1내용
                      childItems:
                      - id: 2
                        title: 의안1-1제목
                        content: 의안1-1내용
                        leaderDescription: 주주대표 의견
                        defaultSelectValue: APPROVAL or REJECTION or ABSTENTION
              schema:
                $ref: '#/components/schemas/PostDetailsDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                boardGroupMismatch:
                  value:
                    message: 게시판 그룹이 유효하지 않습니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Board group of the category does not match
        "404":
          content:
            application/json:
              examples:
                notFoundBoardGroupName:
                  summary: Non-existing board group name
                  value:
                    code: 404
                    message: 존재하지 않는 게시판 그룹입니다.
                notFoundPost:
                  summary: Non-existing post
                  value:
                    code: 404
                    message: 존재하지 않는 게시글입니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: 게시글을 그룹 카테고리에 복제한다.
      tags:
      - AdminPost
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminPost
  /api/admin/posts/{postId}/stock-groups/{stockGroupId}/duplicate:
    post:
      operationId: duplicatePosts
      parameters:
      - description: Post ID parameter
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Stock group ID parameter
        explode: false
        in: path
        name: stockGroupId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 같은 종목 그룹에 게시글을 복제한다.
      tags:
      - AdminPost
      x-accepts: application/json
      x-tags:
      - tag: AdminPost
  ? /api/admin/stocks/{stockCode}/solidarity-leader-elections/{solidarityLeaderElectionId}/solidarity-leader-applicants/{solidarityLeaderApplicantId}
  : get:
      operationId: getSolidarityLeaderApplicant
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Solidarity Leader Election ID parameter
        explode: false
        in: path
        name: solidarityLeaderElectionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Solidarity Leader Applicant ID parameter
        explode: false
        in: path
        name: solidarityLeaderApplicantId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                user:
                  id: 1
                  nickname: 개미는뚠뚠
                stock:
                  code: "003490"
                  name: 대한항공
                  standardCode: KR7003490000
                applyStatus: COMPLETE
                reasonsForApply: 주주대표에 지원한 이유는 어쩌구
                knowledgeOfCompanyManagement: 회사경영에 대한 지식은 어쩌구
                goals: 주주대표로서 이루고 싶은 목표는 어쩌구
                commentsForStockHolders: 주주들에게 전하고 싶은 말은 어쩌구
              schema:
                $ref: '#/components/schemas/SolidarityLeaderApplicationResponse'
          description: Successful response
        "404":
          content:
            application/json:
              examples:
                notFoundSolidarityLeaderApplicant:
                  summary: Non-existing solidarity leader applicant
                  value:
                    code: 404
                    message: 해당 종목에 대한 지원 내역이 없습니다.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS용 주주대표 선출 공약 조회
      tags:
      - AdminSolidarityLeaderApplicant
      x-accepts: application/json
      x-tags:
      - tag: AdminSolidarityLeaderApplicant
  /api/admin/test-stocks/{stockCode}:
    post:
      operationId: createOrUpdateTestStock
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
          x-field-extra-annotation: |
            @Size(min = 6, max = 6, message = "종목코드를 확인해 주세요.")
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTestStockRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 테스트 종목의 데이터를 생성하거나 수정한다.
      tags:
      - AdminQualityAssurance
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminQualityAssurance
  /api/admin/stocks/{stockCode}/reference-dates:
    get:
      operationId: getStockReferenceDates
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockReferenceDateDataArrayResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 종목 기준일 목록 조회하기
      tags:
      - AdminStockReferenceDate
      x-accepts: application/json
      x-tags:
      - tag: AdminStockReferenceDate
    post:
      operationId: createStockReferenceDate
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStockReferenceDateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockReferenceDateDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 종목 기준일 등록 생성하기
      tags:
      - AdminStockReferenceDate
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminStockReferenceDate
  /api/admin/stocks/{stockCode}/reference-dates/{referenceDateId}:
    delete:
      operationId: deleteStockReferenceDateAdmin
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Stock's reference Date Id
        explode: false
        in: path
        name: referenceDateId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      summary: 종목 기준일 삭제하기
      tags:
      - AdminStockReferenceDate
      x-accepts: application/json
      x-tags:
      - tag: AdminStockReferenceDate
    patch:
      operationId: updateStockReferenceDate
      parameters:
      - description: Stock code parameter
        explode: false
        in: path
        name: stockCode
        required: true
        schema:
          type: string
        style: simple
      - description: Stock's reference Date Id
        explode: false
        in: path
        name: referenceDateId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStockReferenceDateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockReferenceDateDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 종목 기준일 수정하기
      tags:
      - AdminStockReferenceDate
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminStockReferenceDate
  /api/commons/stocks:
    get:
      operationId: getCommonStocks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSimpleStockDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: |
        앱에서 필요한 종목 리스트 조회
        - simple stocks
      tags:
      - Common
      x-accepts: application/json
      x-tags:
      - tag: Common
  /api/admin/cms-commons:
    get:
      operationId: getCmsCommons
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CmsCommonsDataResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: |
        CMS 화면에서 필요한 기본 정보들
        - simple stocks
        - simple stock groups
      tags:
      - AdminCommon
      x-accepts: application/json
      x-tags:
      - tag: AdminCommon
  /api/admin/app-preferences:
    get:
      operationId: getAppPreferences
      parameters:
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPreferenceDataResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: CMS에서 App Preference 조회
      tags:
      - AdminAppPreference
      x-accepts: application/json
      x-tags:
      - tag: AdminAppPreference
  /api/admin/app-preferences/{appPreferenceId}:
    get:
      operationId: getAppPreferenceDetails
      parameters:
      - explode: false
        in: path
        name: appPreferenceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPreferenceResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: CMS에서 APP Preference 단건 조회
      tags:
      - AdminAppPreference
      x-accepts: application/json
      x-tags:
      - tag: AdminAppPreference
    patch:
      operationId: updateAppPreference
      parameters:
      - explode: false
        in: path
        name: appPreferenceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppPreferenceUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPreferenceResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security:
      - bearerAuth: []
      summary: App Preference 수정
      tags:
      - AdminAppPreference
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminAppPreference
  /api/admin/links/{linkType}:
    patch:
      operationId: updateHomeLink
      parameters:
      - description: Link type NEWS or RANKING parameter
        explode: false
        in: path
        name: linkType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHomeLinkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeLinkResponse'
          description: Success
      security:
      - bearerAuth: []
      summary: 메인 홈 공지사항 블로그 사이트 URL 업데이트
      tags:
      - AdminHome
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminHome
  /api/admin/notifications:
    get:
      operationId: getNotifications
      parameters:
      - description: "Notification category parameter, (null or STOCKHOLDER_ACTION)"
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          example: createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: post title
        explode: true
        in: query
        name: postTitle
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationDataResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 알림 리스트 조회
      tags:
      - AdminNotification
      x-accepts: application/json
      x-tags:
      - tag: AdminNotification
  /api/admin/data-matrices/user-retention-weekly/pin-verification-given-register:
    get:
      operationId: downloadPinVerificationGivenRegisterCsv
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: User Retention Weekly Matrix File download successfully
      security:
      - bearerAuth: []
      summary: "특정 주차에 가입한 사람들에 대해, 이후 핀 로그인 횟수 추이"
      tags:
      - UserRetentionWeeklyDataMatrix
      x-accepts: application/octet-stream
      x-tags:
      - tag: UserRetentionWeeklyDataMatrix
  /api/admin/data-matrices/user-retention-weekly/digital-document-participation-rate-given-register:
    get:
      operationId: downloadDigitalDocumentParticipationRateGivenRegisterCsv
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: User Retention Weekly Matrix File download successfully
      security:
      - bearerAuth: []
      summary: "특정 주차에 가입한 사람들에 대해, 전자문서에 참여한 사람의 비율"
      tags:
      - UserRetentionWeeklyDataMatrix
      x-accepts: application/octet-stream
      x-tags:
      - tag: UserRetentionWeeklyDataMatrix
  /api/admin/data-matrices/user-retention-weekly/pin-verification-given-first-digital-document-complete:
    get:
      operationId: downloadPinVerificationGivenFirstDigitalDocumentCompleteCsv
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: User Retention Weekly Matrix File download successfully
      security:
      - bearerAuth: []
      summary: "특정 주차에 처음으로 전자문서에 참여한 사람들에 대해, 이후 핀 로그인 횟수 추이"
      tags:
      - UserRetentionWeeklyDataMatrix
      x-accepts: application/octet-stream
      x-tags:
      - tag: UserRetentionWeeklyDataMatrix
  /api/admin/data-matrices/user-retention-weekly/pin-verification-given-register-and-digital-document-complete:
    get:
      operationId: downloadPinVerificationGivenRegisterAndDigitalDocumentCompleteCsv
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: User Retention Weekly Matrix File download successfully
      security:
      - bearerAuth: []
      summary: "특정 주차에 가입하고 전자문서에도 참여한 사람들에 대해, 이후 핀 로그인 횟수 추이"
      tags:
      - UserRetentionWeeklyDataMatrix
      x-accepts: application/octet-stream
      x-tags:
      - tag: UserRetentionWeeklyDataMatrix
  /api/admin/data-matrices/user-retention-weekly/pin-verification-given-register-and-no-digital-document-complete:
    get:
      operationId: downloadPinVerificationGivenRegisterAndNoDigitalDocumentCompleteCsv
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: User Retention Weekly Matrix File download successfully
      security:
      - bearerAuth: []
      summary: "특정 주차에 가입하고 전자문서에 참여한 적 없는 사람들에 대해, 이후 핀 로그인 횟수 추이"
      tags:
      - UserRetentionWeeklyDataMatrix
      x-accepts: application/octet-stream
      x-tags:
      - tag: UserRetentionWeeklyDataMatrix
  /api/admin/data-matrices/user-retention-weekly/non-retained-user-given-register-and-digital-document-complete:
    get:
      operationId: downloadNonRetainedUserGivenRegisterAndDigitalDocumentCompleteCsv
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: User Retention Weekly Matrix File download successfully
      security:
      - bearerAuth: []
      summary: "특정 주차에 가입하고 전자문서에 참여한 사람들에 대해, 각 주에 접속한 적 없는 유저의 수"
      tags:
      - UserRetentionWeeklyDataMatrix
      x-accepts: application/octet-stream
      x-tags:
      - tag: UserRetentionWeeklyDataMatrix
  /api/admin/data-matrices/user-retention-weekly/non-retained-user-given-register-and-no-digital-document-complete:
    get:
      operationId: downloadNonRetainedUserGivenRegisterAndNoDigitalDocumentCompleteCsv
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: User Retention Weekly Matrix File download successfully
      security:
      - bearerAuth: []
      summary: "특정 주차에 가입하고 전자문서에 참여한 적 없는 사람들에 대해, 각 주에 접속한 적 없는 유저의 수"
      tags:
      - UserRetentionWeeklyDataMatrix
      x-accepts: application/octet-stream
      x-tags:
      - tag: UserRetentionWeeklyDataMatrix
  ? /api/admin/data-matrices/user-retention-weekly/pin-verification-for-three-weeks-in-a-row-given-register-and-digital-document-complete
  : get:
      operationId: downloadPinVerificationForThreeWeeksForThreeWeeksInARowGivenRegisterAndDigitalDocumentCompleteCsv
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: User Retention Weekly Matrix File download successfully
      security:
      - bearerAuth: []
      summary: "특정 주차에 가입하고 전자문서에 참여한 적 있는 사람들에 대해, 3주 연속 접속한 유저의 수"
      tags:
      - UserRetentionWeeklyDataMatrix
      x-accepts: application/octet-stream
      x-tags:
      - tag: UserRetentionWeeklyDataMatrix
  ? /api/admin/data-matrices/user-retention-weekly/pin-verification-for-three-weeks-in-a-row-given-register-and-no-digital-document-complete
  : get:
      operationId: downloadPinVerificationForThreeWeeksForThreeWeeksInARowGivenRegisterAndNoDigitalDocumentCompleteCsv
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: User Retention Weekly Matrix File download successfully
      security:
      - bearerAuth: []
      summary: "특정 주차에 가입하고 전자문서에 참여한 적 없는 사람들에 대해, 3주 연속 접속한 유저의 수"
      tags:
      - UserRetentionWeeklyDataMatrix
      x-accepts: application/octet-stream
      x-tags:
      - tag: UserRetentionWeeklyDataMatrix
  /api/admin/data-matrices/user-retention-weekly/{formattedCsvDataType}:
    get:
      operationId: downloadUserRetentionWeeklyCsv
      parameters:
      - description: User Retention Weekly CSV Data Type (converted LowerCase and
          '_')
        example: all-users-given-all-conditions / all-users-signature-opportunity-given-have-stock-in-all-digital-documents-progress-period
          / all-users-signature-opportunity-given-have-stock-in-digital-documents-except-etc-progress-period
        explode: false
        in: path
        name: formattedCsvDataType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BinaryFileResponse'
          description: User Retention Weekly Matrix File download successfully
      security:
      - bearerAuth: []
      summary: DownloadCsv_모든 유저별 주차별 리텐션|전자문서참여기회지표|전자문서참여기회지표(기타문서X) 다운로드
      tags:
      - UserRetentionWeeklyDataMatrix
      x-accepts: application/octet-stream
      x-tags:
      - tag: UserRetentionWeeklyDataMatrix
  /api/admin/stop-words:
    get:
      operationId: getStopWords
      parameters:
      - description: "StopWordFilterType - ALL(전체), ACTIVE(활성화), INACTIVE(비활성화)"
        explode: true
        in: query
        name: filterType
        required: false
        schema:
          type: string
        style: form
      - description: Search keyword
        explode: true
        in: query
        name: searchKeyword
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Sorting criteria
        explode: false
        in: query
        name: sorts
        required: false
        schema:
          default:
          - createdAt:desc
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStopWordResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 금칙어 목록 조회하기
      tags:
      - AdminStopWord
      x-accepts: application/json
      x-tags:
      - tag: AdminStopWord
    post:
      operationId: createStopWord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStopWordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopWordDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 이미 등록된 금칙어입니다.
                    code: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - bearerAuth: []
      summary: CMS 금칙어 등록
      tags:
      - AdminStopWord
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminStopWord
  /api/admin/stop-words/{stopWordId}:
    delete:
      operationId: deleteStopWord
      parameters:
      - description: ID
        explode: false
        in: path
        name: stopWordId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 금칙어입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 금칙어 삭제
      tags:
      - AdminStopWord
      x-accepts: application/json
      x-tags:
      - tag: AdminStopWord
    post:
      operationId: updateStopWord
      parameters:
      - description: ID
        explode: false
        in: path
        name: stopWordId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStopWordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopWordDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                example1:
                  value:
                    message: 타입을 확인해주세요.
                    code: 400
                example2:
                  value:
                    message: 이미 활성화|비활성화 된 금칙어입니다.
                    code: 452
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: 존재하지 않는 금칙어입니다.
                code: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - bearerAuth: []
      summary: CMS 금칙어 활성화 or 비활성화
      tags:
      - AdminStopWord
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: AdminStopWord
  /api/callback/digital-document-download/{fileType}:
    post:
      operationId: digitalDocumentZipFileCallback
      parameters:
      - description: Authorization header for batch
        explode: false
        in: header
        name: x-api-key
        required: true
        schema:
          type: string
        style: simple
      - description: DIGITAL_DOCUMENT or CAMPAIGN_DIGITAL_DOCUMENT
        explode: false
        in: path
        name: fileType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalDocumentZipFileCallbackRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: 전자문서 ZIP 파일 생성요청
      tags:
      - DigitalDocumentCallback
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: DigitalDocumentCallback
  /api/test/solidarity-leader-election/{solidarityLeaderElectionId}:
    post:
      operationId: createElectionPoll
      parameters:
      - description: election ID
        explode: false
        in: path
        name: solidarityLeaderElectionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: Successful response
      security:
      - bearerAuth: []
      summary: test 임시로 사용 배치 완성되면 삭제합시다
      tags:
      - SolidarityLeaderElectionPollService
      x-accepts: application/json
      x-tags:
      - tag: SolidarityLeaderElectionPollService
  /openapi.yaml:
    get:
      operationId: openapiYaml
      responses:
        "200":
          content:
            application/x-yaml:
              schema:
                format: binary
                type: string
          description: An openapi.yaml file
      tags:
      - OpenapiSwagger
      x-accepts: application/x-yaml
      x-tags:
      - tag: OpenapiSwagger
components:
  parameters:
    ApiKeyHeader:
      description: Authorization header for batch
      explode: false
      in: header
      name: x-api-key
      required: true
      schema:
        type: string
      style: simple
  schemas:
    CorporateUserRequest:
      example:
        corporateNo: 법인사업자번호
        corporateName: 법인명
        status: default ACTIVE or 수정시 입력
      properties:
        corporateNo:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "법인사업자번호을 확인해주세요.")
        corporateName:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "볍인명을 확인해주세요.")
        status:
          default: ACTIVE
          type: string
      type: object
    CorporateUserDetailsResponse:
      example:
        id: ID
        corporateNo: 법인사업자번호
        corporateName: 법인명
        status: 상태
        leadingSolidarityStockCodes:
        - "005930"
        - "000930"
        createdAt: 2023-07-13T08:39:14.490Z
        updatedAt: 2023-07-13T08:40:08.022Z
        deletedAt: null
      properties:
        id:
          format: int64
          type: integer
        userId:
          format: int64
          type: integer
        corporateNo:
          type: string
        corporateName:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        leadingSolidarityStockCodes:
          items:
            description: List of stocks where the user is a leader of the solidarity.
            type: string
          type: array
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
          example: null
      type: object
    PopupRequest:
      example:
        id: Popup ID
        title: 팝업 제목
        content: 팝업 내용
        displayTargetType: MAIN_HOME or NEWS_HOME or STOCK_HOME
        stockTargetType: ALL or STOCK or STOCK_GROUP
        stockCode: 종목 코드
        stockGroupId: 종목 그룹 ID
        linkType: LINK or NOTIFICATION or MAIN_HOME or NEWS_HOME or STOCK_HOME or
          NONE
        linkTitle: 링크 제목
        status: default ACTIVE or 수정시 입력
        targetStartDatetime: 2023-07-18T13:52:31.082+09:00
        targetEndDatetime: 2023-07-18T13:52:45.028+09:00
        postId: Post ID
      properties:
        id:
          format: int64
          type: integer
        title:
          type: string
        content:
          type: string
        displayTargetType:
          type: string
        stockTargetType:
          type: string
        stockCode:
          type: string
        stockGroupId:
          format: int64
          type: integer
        linkType:
          type: string
        linkTitle:
          type: string
        status:
          default: ACTIVE
          type: string
        targetStartDatetime:
          format: date-time
          type: string
        targetEndDatetime:
          format: date-time
          type: string
        postId:
          format: int64
          type: integer
      type: object
    DashboardStatisticsResponse:
      example:
        summary:
          upDownText: upDownText
          upDownPercent: upDownPercent
          upDown: upDown
        periodType: periodType
        type: type
        title: title
        value: 6.027456183070403
        items:
        - value: 1.4658129805029452
          key: key
        - value: 1.4658129805029452
          key: key
      properties:
        type:
          description: DashboardStatisticsType enum
          type: string
        title:
          description: DashboardStatisticsType title
          type: string
        value:
          format: double
          type: number
        periodType:
          description: DAILY or MONTHLY
          type: string
        summary:
          $ref: '#/components/schemas/DashboardStatisticsResponse_summary'
        items:
          items:
            $ref: '#/components/schemas/DashboardStatisticsResponse_items_inner'
          type: array
      type: object
    DashboardAgeStatisticsResponse:
      example:
        total: 0
        periodType: periodType
        age10:
          upDownText: upDownText
          upDownPercent: upDownPercent
          title: title
          upDown: upDown
          value: 6
          percent: percent
        age20:
          upDownText: upDownText
          upDownPercent: upDownPercent
          title: title
          upDown: upDown
          value: 6
          percent: percent
        age30:
          upDownText: upDownText
          upDownPercent: upDownPercent
          title: title
          upDown: upDown
          value: 6
          percent: percent
        type: type
        title: title
        age40:
          upDownText: upDownText
          upDownPercent: upDownPercent
          title: title
          upDown: upDown
          value: 6
          percent: percent
        age50:
          upDownText: upDownText
          upDownPercent: upDownPercent
          title: title
          upDown: upDown
          value: 6
          percent: percent
        age60:
          upDownText: upDownText
          upDownPercent: upDownPercent
          title: title
          upDown: upDown
          value: 6
          percent: percent
        age70:
          upDownText: upDownText
          upDownPercent: upDownPercent
          title: title
          upDown: upDown
          value: 6
          percent: percent
      properties:
        type:
          description: DashboardStatisticsType enum
          type: string
        title:
          description: DashboardStatisticsType title
          type: string
        periodType:
          description: DAILY or MONTHLY
          type: string
        total:
          format: int64
          type: integer
        age10:
          $ref: '#/components/schemas/DashboardStatisticsItemResponse'
        age20:
          $ref: '#/components/schemas/DashboardStatisticsItemResponse'
        age30:
          $ref: '#/components/schemas/DashboardStatisticsItemResponse'
        age40:
          $ref: '#/components/schemas/DashboardStatisticsItemResponse'
        age50:
          $ref: '#/components/schemas/DashboardStatisticsItemResponse'
        age60:
          $ref: '#/components/schemas/DashboardStatisticsItemResponse'
        age70:
          $ref: '#/components/schemas/DashboardStatisticsItemResponse'
      type: object
    DashboardGenderStatisticsResponse:
      example:
        total: 0
        periodType: periodType
        type: type
        title: title
        female:
          upDownText: upDownText
          upDownPercent: upDownPercent
          title: title
          upDown: upDown
          value: 6
          percent: percent
        male:
          upDownText: upDownText
          upDownPercent: upDownPercent
          title: title
          upDown: upDown
          value: 6
          percent: percent
      properties:
        type:
          description: DashboardStatisticsType enum
          type: string
        title:
          description: DashboardStatisticsType title
          type: string
        periodType:
          description: DAILY or MONTHLY
          type: string
        total:
          format: int64
          type: integer
        male:
          $ref: '#/components/schemas/DashboardStatisticsItemResponse'
        female:
          $ref: '#/components/schemas/DashboardStatisticsItemResponse'
      type: object
    DashboardStatisticsItemResponse:
      example:
        upDownText: upDownText
        upDownPercent: upDownPercent
        title: title
        upDown: upDown
        value: 6
        percent: percent
      properties:
        title:
          type: string
        value:
          format: int64
          type: integer
        percent:
          type: string
        upDown:
          description: "Up, Down, - 로 구분"
          type: string
        upDownText:
          description: 전일대비 전월대비
          type: string
        upDownPercent:
          description: 12.5%
          type: string
      type: object
    AnonymousCountResponse:
      example:
        post:
          current: 0
          max: 6
        comment:
          current: 0
          max: 6
      properties:
        post:
          $ref: '#/components/schemas/AnonymousCountResponse_post'
        comment:
          $ref: '#/components/schemas/AnonymousCountResponse_post'
      type: object
    MyDataTokenResponse:
      example:
        token: eyJhbGciOiJI1zI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIi4iIxIiwiaWF0IjoxNjg5MTMy3zIwLCJleHAiOjE2ODk3Mzc11jB9.Wo3iBvhSyf3ujtQiqA9BPyZ54tQuKL_bN1AN6qS3Ih8
      properties:
        token:
          example: eyJhbGciOiJI1zI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIi4iIxIiwiaWF0IjoxNjg5MTMy3zIwLCJleHAiOjE2ODk3Mzc11jB9.Wo3iBvhSyf3ujtQiqA9BPyZ54tQuKL_bN1AN6qS3Ih8
          type: string
      type: object
    UserDataResponse:
      example:
        data:
          id: "1"
          name: 이동훈
          email: yanggun7201@gmail.com
          birthDate: 1999-08-07T12:00:00.000Z
          phoneNumber: "01055556666"
          gender: M
          isAgreeToReceiveMail: null
          lastPinNumberVerifiedAt: 2023-07-13T08:40:08.021Z
          nickname: null
          jobTitle: null
          address: null
          addressDetail: null
          zipcode: null
          totalAssetAmount: null
          profileImageUrl: null
          status: PROCESSING
          authType: PIN
          createdAt: 2023-07-13T08:39:14.490Z
          updatedAt: 2023-07-13T08:40:08.022Z
          deletedAt: null
          isPinNumberRegistered: true
          isSolidarityLeaderConfidentialAgreementSigned: true
          userBadgeVisibility:
          - label: 주식수
            isVisible: true
            name: isVisibilityStockQuantity
          - label: 자산
            isVisible: true
            name: isVisibilityTotalAsset
          lastNicknameUpdatedAt: null || 2023-07-18T13:52:45.028685Z
          roles:
          - USER
          - ADMIN
          - SUPER_ADMIN
          leadingSolidarityStockCodes:
          - "005930"
          - "555666"
          - "000660"
          holdingStocks:
          - code: "005930"
            name: 삼성전자
          - code: "000660"
            name: SK하이닉스
      properties:
        data:
          $ref: '#/components/schemas/UserResponse'
      type: object
    UserResponse:
      example:
        id: "1"
        name: 이동훈
        email: yanggun7201@gmail.com
        birthDate: 1999-08-07T12:00:00.000Z
        phoneNumber: "01055556666"
        gender: M
        isAgreeToReceiveMail: null
        lastPinNumberVerifiedAt: 2023-07-13T08:40:08.021Z
        nickname: null
        jobTitle: null
        address: null
        addressDetail: null
        zipcode: null
        totalAssetAmount: null
        profileImageUrl: null
        status: PROCESSING
        authType: PIN
        createdAt: 2023-07-13T08:39:14.490Z
        updatedAt: 2023-07-13T08:40:08.022Z
        deletedAt: null
        isPinNumberRegistered: true
        isSolidarityLeaderConfidentialAgreementSigned: true
        userBadgeVisibility:
        - label: 주식수
          isVisible: true
          name: isVisibilityStockQuantity
        - label: 자산
          isVisible: true
          name: isVisibilityTotalAsset
        lastNicknameUpdatedAt: null || 2023-07-18T13:52:45.028685Z
        roles:
        - USER
        - ADMIN
        - SUPER_ADMIN
        leadingSolidarityStockCodes:
        - "005930"
        - "555666"
        - "000660"
        holdingStocks:
        - code: "005930"
          name: 삼성전자
        - code: "000660"
          name: SK하이닉스
      properties:
        id:
          format: int64
          type: integer
        email:
          type: string
        name:
          type: string
        birthDate:
          format: date-time
          type: string
        phoneNumber:
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        lastPinNumberVerifiedAt:
          format: date-time
          nullable: true
          type: string
        nickname:
          nullable: true
          type: string
        mySpeech:
          nullable: true
          type: string
        jobTitle:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        addressDetail:
          nullable: true
          type: string
        zipcode:
          nullable: true
          type: string
        totalAssetAmount:
          format: int64
          type: integer
        profileImageUrl:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/Status'
        authType:
          $ref: '#/components/schemas/AuthType'
        lastNicknameUpdatedAt:
          format: date-time
          nullable: true
          type: string
          example: null
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        editedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
          example: null
        isPinNumberRegistered:
          type: boolean
        isAgreeToReceiveMail:
          nullable: true
          type: boolean
        userBadgeVisibilities:
          items:
            $ref: '#/components/schemas/UserBadgeVisibilityResponse'
          type: array
        isChangePasswordRequired:
          nullable: true
          type: boolean
        isAdmin:
          nullable: true
          type: boolean
        isSolidarityLeaderConfidentialAgreementSigned:
          description: 주주연대 대표 비밀유지계약서 서명 여부
          type: boolean
        leadingSolidarityStockCodes:
          items:
            description: List of stocks where the user is a leader of the solidarity.
            type: string
          type: array
        roles:
          items:
            description: List of user roles.
            type: string
          type: array
        holdingStocks:
          items:
            $ref: '#/components/schemas/SimpleStockResponse'
          type: array
      type: object
    SimpleUserResponse:
      example:
        id: "1"
        name: 이동훈
        email: yanggun7201@gmail.com
        birthDate: 1999-08-07T12:00:00.000Z
        phoneNumber: "01055556666"
        gender: M
        nickname: 닉네임
        status: ACTIVE
      properties:
        id:
          format: int64
          type: integer
        email:
          type: string
        name:
          type: string
        birthDate:
          format: date-time
          type: string
        phoneNumber:
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        nickname:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/Status'
        profileImageUrl:
          nullable: true
          type: string
      type: object
    SimpleUserProfileDataResponse:
      example:
        data:
          totalAssetLabel: totalAssetLabel
          nickname: nickname
          individualStockCountLabel: individualStockCountLabel
          profileImageUrl: profileImageUrl
      properties:
        data:
          $ref: '#/components/schemas/SimpleUserProfileResponse'
      type: object
    SimpleUserProfileResponse:
      example:
        totalAssetLabel: totalAssetLabel
        nickname: nickname
        individualStockCountLabel: individualStockCountLabel
        profileImageUrl: profileImageUrl
      nullable: true
      properties:
        nickname:
          type: string
        profileImageUrl:
          nullable: true
          type: string
        individualStockCountLabel:
          nullable: true
          type: string
        totalAssetLabel:
          nullable: true
          type: string
      type: object
    SolidarityLeaderResponse:
      allOf:
      - $ref: '#/components/schemas/SimpleUserResponse'
      - $ref: '#/components/schemas/SolidarityLeaderResponse_allOf'
      example:
        id: "1"
        name: 이동훈
        email: yanggun7201@gmail.com
        birthDate: 1999-08-07T12:00:00.000Z
        phoneNumber: "01055556666"
        gender: M
        nickname: null
        status: ACTIVE
        message: 안녕하세요. 잘 부탁합니다.
        solidarityId: 124
        corporateNo: 법인번호
    SolidarityLeaderApplicantResponse:
      example:
        phoneNumber: phoneNumber
        name: name
        nickname: nickname
        commentsForStockHolder: commentsForStockHolder
        id: 0
        individualStockCountLabel: individualStockCountLabel
        solidarityApplicantId: 6
        profileImageUrl: profileImageUrl
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        phoneNumber:
          nullable: true
          type: string
        nickname:
          nullable: true
          type: string
        profileImageUrl:
          nullable: true
          type: string
        individualStockCountLabel:
          type: string
        commentsForStockHolder:
          type: string
        solidarityApplicantId:
          format: int64
          type: integer
      type: object
    HomeLinkResponse:
      example:
        id: "1"
        linkType: NOTICE or BLOG
        linkUrl: 사이트 URL
        status: PROCESSING
        createdAt: 2023-07-13T08:39:14.490Z
        updatedAt: 2023-07-13T08:40:08.022Z
      properties:
        id:
          format: int64
          type: integer
        linkType:
          type: string
        linkTitle:
          type: string
        linkUrl:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    UpdateHomeLinkRequest:
      example:
        linkUrl: 사이트 URL
      properties:
        linkUrl:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "url을 확인해주세요.")
      type: object
    AppPreferenceResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        updatedBy: 1
        createdBy: 6
        id: 0
        value: value
        appPreferenceType: appPreferenceType
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        appPreferenceType:
          type: string
        value:
          type: string
        createdBy:
          format: int64
          type: integer
        updatedBy:
          format: int64
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    AppPreferenceUpdateRequest:
      example:
        newValue: newValue
        currentValue: currentValue
      properties:
        currentValue:
          type: string
        newValue:
          type: string
      type: object
    StringResponse:
      type: string
    RegisterUserInfoRequest:
      example:
        email: yanggun7202@gmail.com
        nickname: yang_nickname
        isAgreeToReceiveMail: true
      properties:
        email:
          type: string
          x-field-extra-annotation: |
            @Email(message = "형식에 맞지 않는 이메일입니다. ex) act123@naver.com", regexp="^[A-Za-z0-9][A-Za-z0-9+_.-]+@([A-Za-z0-9.-]+\\.[A-Za-z]{2,})$")
        nickname:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "닉네임을 확인해주세요.")
        isAgreeToReceiveMail:
          type: boolean
          x-field-extra-annotation: |
            @IsBoolean(message = "주주연대 공지 우편물 수신동의를 확인해주세요.")
      type: object
    CheckEmailRequest:
      example:
        email: test@test.com
      properties:
        email:
          nullable: false
          type: string
          x-field-extra-annotation: |
            @Email(message = "형식에 맞지 않는 이메일입니다. ex) act123@naver.com", regexp="^[A-Za-z0-9][A-Za-z0-9+_.-]+@([A-Za-z0-9.-]+\\.[A-Za-z]{2,})$")
      type: object
    CheckEmailResponse:
      example:
        data:
          canUse: true
      properties:
        data:
          $ref: '#/components/schemas/CanUseResponse'
      type: object
    CanUseResponse:
      example:
        canUse: true
      properties:
        canUse:
          type: boolean
      type: object
    CheckNicknameRequest:
      example:
        nickname: Jonny
      properties:
        nickname:
          type: string
          x-field-extra-annotation: |
            @Size(min = 1, max = 255, message = "닉네임을 확인해주세요.")
            @NotBlank(message = "닉네임을 확인해주세요.")
      type: object
    CheckNicknameResponse:
      example:
        data:
          canUse: true
      properties:
        data:
          $ref: '#/components/schemas/CanUseResponse'
      type: object
    HomeResponse:
      example:
        actBestPosts:
          link: /act-best
          posts:
          - activeStartDate: 2000-01-23T04:56:07.000+00:00
            isPush: false
            polls:
            - voteType: voteType
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              answers:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              postId: 6
              voteTotalCount: 1
              title: title
              content: content
              createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              selectionOption: selectionOption
              id: 0
              voteTotalStockSum: 5
              pollItems:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - voteType: voteType
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              answers:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              postId: 6
              voteTotalCount: 1
              title: title
              content: content
              createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              selectionOption: selectionOption
              id: 0
              voteTotalStockSum: 5
              pollItems:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            digitalProxy:
              createdAt: 2000-01-23T04:56:07.000+00:00
              templateRole: templateRole
              templateName: templateName
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              id: 1
              templateId: templateId
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            likeCount: 1
            poll:
              voteType: voteType
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              answers:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              postId: 6
              voteTotalCount: 1
              title: title
              content: content
              createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              selectionOption: selectionOption
              id: 0
              voteTotalStockSum: 5
              pollItems:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            title: title
            isActive: true
            userProfile:
              leadingStocks:
              - code: code
                name: name
                standardCode: standardCode
              - code: code
                name: name
                standardCode: standardCode
              deleted: true
              hasStocks: true
              totalAssetLabel: totalAssetLabel
              nickname: nickname
              reported: true
              userIp: userIp
              individualStockCountLabel: individualStockCountLabel
              profileImageUrl: profileImageUrl
              isSolidarityLeader: true
            content: content
            liked: true
            createdAt: 2000-01-23T04:56:07.000+00:00
            thumbnailImageUrl: thumbnailImageUrl
            reported: true
            id: 1
            viewCount: 5
            stock:
              code: 종목코드
              name: 종목명
              totalIssuedQuantity: 상장주식수
              representativePhoneNumber: (02) 555-6666
              memberCount: 주주수
              stake: 지분율
            activeEndDate: 2000-01-23T04:56:07.000+00:00
            boardGroup: boardGroup
            digitalDocument:
              id: digitalDocumentId
              answerStatus: SAVE or COMPLETE
              digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
              joinUserCount: 전자문서 참여자수
              shareholdingRatio: 지분율
              targetStartDate: 전자문서 시작일자
              targetEndDate: 전자문서 종료일자
              user: 전자문서 위임인 정보
              stock: 전자문서 위임인 주식정보
              acceptUser: 전자문서 수임인 정보
              items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
              attachOptions: 전자문서 첨부 옵션
              digitalDocumentDownload: 전자문서 다운로드 정보
            updatedAt: 2000-01-23T04:56:07.000+00:00
            isPinned: false
            boardCategory:
              name: DAILY_ACT
              displayName: 분석자료
              isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
              badgeColor: '#FFFFFF'
              isGroup: "false"
              subCategories: 하위 카테고리 목록
            isExclusiveToHolders: false
            postImageList:
            - imageId: 9
              imageUrl: imageUrl
            - imageId: 9
              imageUrl: imageUrl
            isNew: true
            isNotification: true
            userId: 7
            commentCount: 4
            isAuthorAdmin: true
            deletedAt: 2000-01-23T04:56:07.000+00:00
            holderListReadAndCopyDigitalDocument:
              digitalDocumentId: 1
              fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
              userId: 1
            deleted: true
            editedAt: 2000-01-23T04:56:07.000+00:00
            boardId: 6
            status: null
          - activeStartDate: 2000-01-23T04:56:07.000+00:00
            isPush: false
            polls:
            - voteType: voteType
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              answers:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              postId: 6
              voteTotalCount: 1
              title: title
              content: content
              createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              selectionOption: selectionOption
              id: 0
              voteTotalStockSum: 5
              pollItems:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - voteType: voteType
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              answers:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              postId: 6
              voteTotalCount: 1
              title: title
              content: content
              createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              selectionOption: selectionOption
              id: 0
              voteTotalStockSum: 5
              pollItems:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            digitalProxy:
              createdAt: 2000-01-23T04:56:07.000+00:00
              templateRole: templateRole
              templateName: templateName
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              id: 1
              templateId: templateId
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            likeCount: 1
            poll:
              voteType: voteType
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              answers:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              postId: 6
              voteTotalCount: 1
              title: title
              content: content
              createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              selectionOption: selectionOption
              id: 0
              voteTotalStockSum: 5
              pollItems:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            title: title
            isActive: true
            userProfile:
              leadingStocks:
              - code: code
                name: name
                standardCode: standardCode
              - code: code
                name: name
                standardCode: standardCode
              deleted: true
              hasStocks: true
              totalAssetLabel: totalAssetLabel
              nickname: nickname
              reported: true
              userIp: userIp
              individualStockCountLabel: individualStockCountLabel
              profileImageUrl: profileImageUrl
              isSolidarityLeader: true
            content: content
            liked: true
            createdAt: 2000-01-23T04:56:07.000+00:00
            thumbnailImageUrl: thumbnailImageUrl
            reported: true
            id: 1
            viewCount: 5
            stock:
              code: 종목코드
              name: 종목명
              totalIssuedQuantity: 상장주식수
              representativePhoneNumber: (02) 555-6666
              memberCount: 주주수
              stake: 지분율
            activeEndDate: 2000-01-23T04:56:07.000+00:00
            boardGroup: boardGroup
            digitalDocument:
              id: digitalDocumentId
              answerStatus: SAVE or COMPLETE
              digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
              joinUserCount: 전자문서 참여자수
              shareholdingRatio: 지분율
              targetStartDate: 전자문서 시작일자
              targetEndDate: 전자문서 종료일자
              user: 전자문서 위임인 정보
              stock: 전자문서 위임인 주식정보
              acceptUser: 전자문서 수임인 정보
              items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
              attachOptions: 전자문서 첨부 옵션
              digitalDocumentDownload: 전자문서 다운로드 정보
            updatedAt: 2000-01-23T04:56:07.000+00:00
            isPinned: false
            boardCategory:
              name: DAILY_ACT
              displayName: 분석자료
              isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
              badgeColor: '#FFFFFF'
              isGroup: "false"
              subCategories: 하위 카테고리 목록
            isExclusiveToHolders: false
            postImageList:
            - imageId: 9
              imageUrl: imageUrl
            - imageId: 9
              imageUrl: imageUrl
            isNew: true
            isNotification: true
            userId: 7
            commentCount: 4
            isAuthorAdmin: true
            deletedAt: 2000-01-23T04:56:07.000+00:00
            holderListReadAndCopyDigitalDocument:
              digitalDocumentId: 1
              fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
              userId: 1
            deleted: true
            editedAt: 2000-01-23T04:56:07.000+00:00
            boardId: 6
            status: null
        unreadNotificationsCount: 1
        unreadPostStatus:
          unreadGlobalBoard: true
          unreadDigitalDelegation: true
          unreadGlobalCommunity: true
          unreadGlobalEvent: true
          unreadStocks:
          - code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          - code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
        mySolidarity:
        - null
        - null
      properties:
        unreadNotificationsCount:
          example: 1
          format: int64
          type: integer
        unreadPostStatus:
          $ref: '#/components/schemas/UnreadPostStatus'
        mySolidarity:
          items:
            $ref: '#/components/schemas/MySolidarityResponse'
          type: array
        actBestPosts:
          $ref: '#/components/schemas/ActBestPosts'
      type: object
    UnreadPostStatus:
      example:
        unreadGlobalBoard: true
        unreadDigitalDelegation: true
        unreadGlobalCommunity: true
        unreadGlobalEvent: true
        unreadStocks:
        - code: 종목코드
          name: 종목명
          totalIssuedQuantity: 상장주식수
          representativePhoneNumber: (02) 555-6666
          memberCount: 주주수
          stake: 지분율
        - code: 종목코드
          name: 종목명
          totalIssuedQuantity: 상장주식수
          representativePhoneNumber: (02) 555-6666
          memberCount: 주주수
          stake: 지분율
      properties:
        unreadGlobalBoard:
          default: false
          example: true
          type: boolean
        unreadGlobalCommunity:
          default: false
          example: true
          type: boolean
        unreadGlobalEvent:
          default: false
          example: true
          type: boolean
        unreadDigitalDelegation:
          default: false
          example: true
          type: boolean
        unreadStocks:
          items:
            $ref: '#/components/schemas/StockResponse'
          type: array
      type: object
    SolidarityDataArrayResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/SolidarityResponse'
          type: array
      type: object
    SolidarityDataResponse:
      example:
        data:
          stake: 1.4658129
          requiredMemberCount: 5
          code: code
          representativePhoneNumber: (02) 555-6666
          minThresholdMemberCount: 33861
          memberCount: 6
          name: name
          id: 0
          status: null
      properties:
        data:
          $ref: '#/components/schemas/SolidarityResponse'
      type: object
    StockHomeResponse:
      example:
        stock:
          code: "005930"
          name: 삼성전자
        dashboard:
          descriptionLabel: "최종 업데이트(전일대비): 2023-08-23 21:49"
          items:
          - title: 종목명
            value: 삼성전자
            variation:
              text: 1.23%
              color: '#FF0000'
          - title: 현재가
            value: "80,000"
            variation:
              text: 1.23%
              color: '#FF0000'
        leader:
          status: ELECTED
          message: 안녕하세요. 주주대표입니다.
          applied: true
          solidarityId: 1
        leaderApplication:
          solidarityLeaderApplicationId: 1
          applyStatus: COMPLETED
        sections:
        - type: list
          header:
            title: 최신글
            link: /stock/005930/news
          listItems:
            title: 제목
            boardCategory:
              name: DEBATE
              displayName: 토론방
              isExclusiveToHolders: false
              isGroup: false
            viewCount: 3
            link: /stock/005930/board/debate/posts/1
            likeCount: 10
            reported: true
            deleted: false
            isNew: false
            isExclusiveToHolders: true
            commentCount: "0,"
            createdAt: 2023-07-13T08:39:14.490Z
            updatedAt: 2023-07-13T08:40:08.022Z
        notices:
        - noticeLevel: INFO
          message: 공지사항입니다.
        leaderElectionDetail:
          solidarityLeaderElectionId: 1
          electionStatus: FINISHED
          winner:
            isElectedByAdmin: 관리자에 의해 선출된 주주대표인 경우 true
            nickname: 닉네임
            profileImageUrl: 프로필 이미지 URL
          startDate: 2024-05-24T06:30:41Z
          endDate: 2024-05-30T07:31:34Z
          electionProcesses:
          - title: 후보자 등록 기간
          - detail:
              title: 지원자 현황
              value: 3
              unit: 명
              startDate: 2024-05-24T06:30:41Z
              endDate: 2024-05-28T07:31:34Z
          - label:
              title: 진행중
              color: '#FF0000'
      properties:
        stock:
          $ref: '#/components/schemas/SimpleStockResponse'
        dashboard:
          $ref: '#/components/schemas/DashboardResponse'
        leader:
          $ref: '#/components/schemas/StockHomeLeaderResponse'
        leaderApplication:
          $ref: '#/components/schemas/SolidarityLeaderApplicationResponse'
        sections:
          description: Sections for preview posts
          items:
            $ref: '#/components/schemas/StockHomeSectionResponse'
          type: array
        notices:
          description: Notices for the stock
          items:
            $ref: '#/components/schemas/StockNoticeResponse'
          type: array
        leaderElectionFeatureActiveCondition:
          $ref: '#/components/schemas/LeaderElectionFeatureActiveConditionResponse'
        leaderElectionDetail:
          $ref: '#/components/schemas/LeaderElectionDetailResponse'
        unreadStockBoardGroupPostStatus:
          $ref: '#/components/schemas/UnreadStockBoardGroupPostStatusResponse'
      type: object
    StockHomeLeaderResponse:
      example:
        status: ELECTED || ELECTION_IN_PROGRESS
        message: 안녕하세요. 주주대표입니다. || null
        applied: true || false || null
      properties:
        status:
          description: EJECTED
          type: string
        message:
          nullable: true
          type: string
        applied:
          nullable: true
          type: boolean
        solidarityId:
          format: int64
          type: integer
      type: object
    DashboardResponse:
      example:
        items:
        - title: title
          value: value
          variation:
            color: '#FF0000'
            text: text
        - title: title
          value: value
          variation:
            color: '#FF0000'
            text: text
        descriptionLabel: "최종 업데이트(전일대비): 2023-08-23 21:49"
      properties:
        descriptionLabel:
          example: "최종 업데이트(전일대비): 2023-08-23 21:49"
          type: string
        items:
          items:
            $ref: '#/components/schemas/DashboardItemResponse'
          type: array
      type: object
    DashboardItemResponse:
      example:
        title: title
        value: value
        variation:
          color: '#FF0000'
          text: text
      properties:
        title:
          description: Title of the item
          type: string
        value:
          description: Value of the item
          type: string
        variation:
          $ref: '#/components/schemas/DashboardItemResponse_variation'
      type: object
    CarouselSectionResponse:
      properties:
        type:
          example: carousel
          type: string
        carouselItems:
          items:
            $ref: '#/components/schemas/CarouselItemResponse'
          type: array
      type: object
    CarouselItemResponse:
      properties:
        header:
          $ref: '#/components/schemas/CarouselSectionHeaderResponse'
        listItems:
          items:
            $ref: '#/components/schemas/SectionItemResponse'
          type: array
      type: object
    CarouselSectionHeaderResponse:
      properties:
        title:
          type: string
        link:
          type: string
        image:
          type: string
      type: object
    ListSectionResponse:
      properties:
        type:
          example: list
          type: string
        header:
          $ref: '#/components/schemas/ListSectionHeaderResponse'
        listItems:
          items:
            $ref: '#/components/schemas/SectionItemResponse'
          type: array
      type: object
    ListSectionHeaderResponse:
      properties:
        title:
          type: string
        link:
          type: string
      type: object
    UpdateMySolidarityRequest:
      example:
        data:
        - "020416"
        - "034567"
      properties:
        data:
          example:
          - "020416"
          - "034567"
          items:
            type: string
          type: array
      type: object
    StockNoticeResponse:
      properties:
        noticeLevel:
          $ref: '#/components/schemas/NoticeLevel'
        message:
          type: string
      type: object
    LeaderElectionDetailResponse:
      example:
        solidarityLeaderElectionId: 1
        electionStatus: FINISHED
        winner:
          isElected: true
          nickname: 닉네임
          profileImageUrl: 프로필 이미지 URL
        startDate: 2024-05-24T06:30:41Z
        endDate: 2024-05-30T07:31:34Z
        electionProcesses:
        - title: 후보자 등록 기간
        - electionStatus: CANDIDATE_REGISTRATION_PERIOD
        - detail:
            title: 지원자 현황
            value: 3
            unit: 명
            startDate: 2024-05-24T06:30:41Z
            endDate: 2024-05-28T07:31:34Z
        - label:
            title: 진행중
            color: '#FF0000'
      properties:
        solidarityLeaderElectionId:
          description: 선거 아이디
          format: int64
          type: integer
        electionStatus:
          description: FINISHED or VOTE_PERIOD or CANDIDATE_REGISTRATION_PERIOD
          type: string
        winner:
          $ref: '#/components/schemas/LeaderElectionWinnerResponse'
        startDate:
          description: 선거 시작일
          format: date-time
          type: string
        endDate:
          description: 선거 시작일
          format: date-time
          type: string
        electionProcesses:
          items:
            $ref: '#/components/schemas/LeaderElectionProcessResponse'
          type: array
      type: object
    LeaderElectionWinnerResponse:
      properties:
        isElected:
          type: boolean
        nickname:
          type: string
        profileImageUrl:
          type: string
        isElectedByAdmin:
          description: 관리자에 의해 선출된 주주대표인 경우 true
          type: boolean
      type: object
    LeaderElectionProcessResponse:
      properties:
        title:
          description: 후보자 등록 기간 or 주주대표 투표 or 투표마감
          type: string
        electionStatus:
          description: FINISHED or VOTE_PERIOD or CANDIDATE_REGISTRATION_PERIOD
          type: string
        detail:
          $ref: '#/components/schemas/LeaderElectionProcessDetailResponse'
        label:
          $ref: '#/components/schemas/LeaderElectionProcessLabelResponse'
      type: object
    LeaderElectionFeatureActiveConditionResponse:
      example:
        minThresholdStake: 5
        stake: 3.8
        minThresholdMemberCount: 1000
        memberCount: 888
        isVisible: true
      properties:
        minThresholdStake:
          description: 주주연대 지분율 임계값
          format: float
          type: number
        stake:
          default: 0
          description: 실제 주주연대 지분율
          format: float
          type: number
        minThresholdMemberCount:
          description: 주주연대 인원수 임계값
          format: int64
          type: integer
        memberCount:
          default: 0
          description: 실제 주주연대 인원수
          format: int64
          type: integer
        isVisible:
          default: false
          description: 주주대표 선출기능 활성화 조건 노출여부
          type: boolean
      type: object
    UpdateMySolidarityItem:
      example: "020416"
      type: string
    CreateCampaignRequest:
      example:
        createPostRequest:
          boardCategory: DAILY_ACT
          stockCode: 종목코드
          title: 게시글 제목
          content: 게시글 내용
          isActive: "true"
          imageIds:
          - 1
          poll:
            title: 설문 제목
            voteType: PERSON_BASED or SHAREHOLDER_BASED
            selectionOption: MULTIPLE_ITEMS or SINGLE_ITEM
            targetStartDate: 2023-07-18T13:52:31.082+09:00
            targetEndDate: 2023-07-18T13:52:45.028+09:00
            pollItems:
            - text: 설문 아이템
          digitalProxy:
            templateId: 아이디
            templateName: 이름
            templateRole: 권한
            targetStartDate: 2023-07-18T13:52:31.082+09:00
            targetEndDate: 2023-07-18T13:52:45.028+09:00
          digitalDocument:
            type: 의결권위임 DIGITAL_PROXY or 공동보유 JOINT_OWNERSHIP_DOCUMENT or 기타 ETC_DOCUMENT
            title: 기타 전자문서 제목
            content: 전자문서 내용
            companyName: 공동보유 회사명
            companyRegistrationNumber: 공동보유 법인등록번호
            shareholderMeetingType: 주총구분 REGULAR_GENERAL_MEETING_STOCKHOLDERS or EXTRAORDINARY_GENERAL_MEETING_STOCKHOLDERS
            shareholderMeetingName: 주총명
            shareholderMeetingDate: 주총일시
            designatedAgentNames: 의결권위임 수임인지정 대리인
            acceptUserId: 10
            stockReferenceDateId: 5
            targetStartDate: 2023-07-18T13:52:31.082+09:00
            targetEndDate: 2023-07-18T13:52:45.028+09:00
            attachOptions:
              signImage: OPTIONAL
              idCardImage: OPTIONAL
              bankAccountImage: OPTIONAL
            childItems:
            - title: 의안1제목
              content: 의안1내용
              childItems:
              - title: 의안1-1제목
                content: 의안1-1내용
                leaderDescription: 주주대표 의견
                defaultSelectValue: APPROVAL or REJECTION or ABSTENTION
          isEd: 이미 escaped 되었는지 여부 true or false
        stockGroupId: 0
        title: title
        boardGroupName: boardGroupName
      properties:
        createPostRequest:
          $ref: '#/components/schemas/CreatePostRequest'
        title:
          description: Campaign title
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "캠페인 제목을 확인해주세요.")
        boardGroupName:
          description: BoardGroup ACTION or ANALYSIS or DEBATE
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "게시판 그룹을 확인해주세요.")
        stockGroupId:
          description: Stock group ID
          format: int64
          type: integer
      type: object
      x-implements:
      - ag.act.dto.CampaignHtmlContent
    UpdateCampaignRequest:
      example:
        updatePostRequest:
          boardCategory: DAILY_ACT
          title: text
          content: text
          isActive: "true"
          imageIds:
          - 1
          updateTargetDate:
            targetStartDate: 2023-07-18T13:52:31.082+09:00
            targetEndDate: 2023-07-18T13:52:45.028+09:00
          poll:
            targetStartDate: 2023-07-18T13:52:31.082+09:00
            targetEndDate: 2023-07-18T13:52:45.028+09:00
          digitalProxy:
            targetStartDate: 2023-07-18T13:52:31.082+09:00
            targetEndDate: 2023-07-18T13:52:45.028+09:00
          digitalDocument:
            title: 기타 전자문서 제목
            content: 전자문서 내용
            stockReferenceDateId: 5
            targetStartDate: 2023-07-18T13:52:31.082+09:00
            targetEndDate: 2023-07-18T13:52:45.028+09:00
          isEd: 이미 escaped 되었는지 여부 true or false
        title: title
      properties:
        updatePostRequest:
          $ref: '#/components/schemas/UpdatePostRequest'
        title:
          description: Campaign title
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "캠페인 제목을 확인해주세요.")
      type: object
      x-implements:
      - ag.act.dto.CampaignHtmlContent
    CreatePostRequest:
      example:
        boardCategory: DAILY_ACT
        stockCode: 종목코드
        title: 게시글 제목
        content: 게시글 내용
        isActive: "true"
        imageIds:
        - 1
        poll:
          title: 설문 제목
          voteType: PERSON_BASED or SHAREHOLDER_BASED
          selectionOption: MULTIPLE_ITEMS or SINGLE_ITEM
          targetStartDate: 2023-07-18T13:52:31.082+09:00
          targetEndDate: 2023-07-18T13:52:45.028+09:00
          pollItems:
          - text: 설문 아이템
        digitalProxy:
          templateId: 아이디
          templateName: 이름
          templateRole: 권한
          targetStartDate: 2023-07-18T13:52:31.082+09:00
          targetEndDate: 2023-07-18T13:52:45.028+09:00
        digitalDocument:
          type: 의결권위임 DIGITAL_PROXY or 공동보유 JOINT_OWNERSHIP_DOCUMENT or 기타 ETC_DOCUMENT
          title: 기타 전자문서 제목
          content: 전자문서 내용
          companyName: 공동보유 회사명
          companyRegistrationNumber: 공동보유 법인등록번호
          shareholderMeetingType: 주총구분 REGULAR_GENERAL_MEETING_STOCKHOLDERS or EXTRAORDINARY_GENERAL_MEETING_STOCKHOLDERS
          shareholderMeetingName: 주총명
          shareholderMeetingDate: 주총일시
          designatedAgentNames: 의결권위임 수임인지정 대리인
          acceptUserId: 10
          stockReferenceDateId: 5
          targetStartDate: 2023-07-18T13:52:31.082+09:00
          targetEndDate: 2023-07-18T13:52:45.028+09:00
          attachOptions:
            signImage: OPTIONAL
            idCardImage: OPTIONAL
            bankAccountImage: OPTIONAL
          childItems:
          - title: 의안1제목
            content: 의안1내용
            childItems:
            - title: 의안1-1제목
              content: 의안1-1내용
              leaderDescription: 주주대표 의견
              defaultSelectValue: APPROVAL or REJECTION or ABSTENTION
        isEd: 이미 escaped 되었는지 여부 true or false
      properties:
        boardCategory:
          description: The category of the post. This field is mandatory.
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "Board Category 를 확인해주세요.")
        title:
          description: The title of the post. This field is mandatory.
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "제목을 확인해주세요.")
        content:
          description: The content of the post. This field is mandatory.
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "내용을 확인해주세요.")
        isAnonymous:
          default: false
          description: "Indicates whether the post is written anonymously. By default,\
            \ this is set to 'false'."
          type: boolean
        isActive:
          default: true
          description: "Indicates whether the post is active. By default, this is\
            \ set to 'true'. This field is mandatory."
          type: boolean
        isNotification:
          default: false
          description: "Indicates whether a notification should be sent for the post.\
            \ By default, this is set to 'false'."
          type: boolean
        isExclusiveToHolders:
          default: true
          description: "Indicates whether the post is exclusive to stock holders.\
            \ By default, this is set to 'false'. This field is optional."
          type: boolean
        imageIds:
          description: IDs of images included in the post
          items:
            format: int64
            type: integer
          type: array
        activeStartDate:
          format: date-time
          type: string
        activeEndDate:
          format: date-time
          type: string
        push:
          $ref: '#/components/schemas/PushRequest'
        polls:
          items:
            $ref: '#/components/schemas/CreatePollRequest'
          type: array
        digitalProxy:
          $ref: '#/components/schemas/CreateDigitalProxyRequest'
        digitalDocument:
          $ref: '#/components/schemas/CreateDigitalDocumentRequest'
        isEd:
          default: false
          type: boolean
      type: object
      x-implements:
      - ag.act.dto.HtmlContent
    BinaryFileResponse:
      description: File binary
      format: binary
      type: string
    UserDigitalDocumentResponse:
      example:
        id: digitalDocumentId
        answerStatus: SAVE or COMPLETE
        digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
        joinUserCount: 전자문서 참여자수
        shareholdingRatio: 지분율
        targetStartDate: 전자문서 시작일자
        targetEndDate: 전자문서 종료일자
        user: 전자문서 위임인 정보
        stock: 전자문서 위임인 주식정보
        acceptUser: 전자문서 수임인 정보
        items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
        attachOptions: 전자문서 첨부 옵션
        digitalDocumentDownload: 전자문서 다운로드 정보
      properties:
        id:
          format: int64
          type: integer
        answerStatus:
          type: string
        digitalDocumentType:
          type: string
        joinUserCount:
          type: integer
        joinStockSum:
          format: int64
          type: integer
        shareholdingRatio:
          format: float
          type: number
        targetStartDate:
          format: date-time
          type: string
        targetEndDate:
          format: date-time
          type: string
        user:
          $ref: '#/components/schemas/DigitalDocumentUserResponse'
        stock:
          $ref: '#/components/schemas/DigitalDocumentStockResponse'
        acceptUser:
          $ref: '#/components/schemas/DigitalDocumentAcceptUserResponse'
        items:
          items:
            $ref: '#/components/schemas/DigitalDocumentItemResponse'
          type: array
        attachOptions:
          $ref: '#/components/schemas/JsonAttachOption'
        digitalDocumentDownload:
          $ref: '#/components/schemas/DigitalDocumentDownloadResponse'
      type: object
    HolderListReadAndCopyDigitalDocumentResponse:
      example:
        digitalDocumentId: 1
        fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
        userId: 1
      properties:
        digitalDocumentId:
          format: int64
          type: integer
        fileName:
          type: string
        userId:
          format: int64
          type: integer
      type: object
    PreviewDigitalDocumentRequest:
      example:
        shareholderMeetingName: shareholderMeetingName
        acceptUserId: 0
        companyRegistrationNumber: companyRegistrationNumber
        companyName: companyName
        childItems:
        - defaultSelectValue: defaultSelectValue
          leaderDescription: leaderDescription
          childItems:
          - null
          - null
          title: title
          content: content
        - defaultSelectValue: defaultSelectValue
          leaderDescription: leaderDescription
          childItems:
          - null
          - null
          title: title
          content: content
        type: type
        title: title
        shareholderMeetingDate: 2000-01-23T04:56:07.000+00:00
        version: V1
        content: content
        shareholderMeetingType: shareholderMeetingType
        isDisplayStockQuantity: false
        designatedAgentNames: designatedAgentNames
      properties:
        type:
          description: 전자 문서 구분 DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "문서 구분을 확인해주세요.")
        companyName:
          description: 회사명
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "회사명을 확인해주세요.")
        shareholderMeetingType:
          description: 주총구분 REGULAR_GENERAL_MEETING_STOCKHOLDERS or EXTRAORDINARY_GENERAL_MEETING_STOCKHOLDERS
          type: string
        shareholderMeetingName:
          description: 주총명
          type: string
        shareholderMeetingDate:
          description: 주춍일
          format: date-time
          type: string
        designatedAgentNames:
          description: 수임인지정대리인
          type: string
        childItems:
          items:
            $ref: '#/components/schemas/DigitalDocumentItemRequest'
          type: array
        companyRegistrationNumber:
          description: 법인등록번호
          type: string
        title:
          description: 전자문서 제목
          type: string
        content:
          description: 전자문서 내용
          type: string
        version:
          default: V1
          description: 전자문서 버전
          type: string
        acceptUserId:
          description: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT 인 경우 수임인 아이디 필수
          format: int64
          type: integer
        isDisplayStockQuantity:
          default: false
          description: 보유주식수 표시 여부
          type: boolean
      type: object
      x-implements:
      - ag.act.dto.IDigitalDocumentFillRequest
    CreatePostHolderListReadAndCopyRequest:
      example:
        signImage: file
        idCardImage: file
        bankAccountImages: files
        hectoEncryptedBankAccountPdf: file
        createPostRequest: "{\"holderListReadAndCopyItems\":[{\"itemType\":\"LEADER_NAME\"\
          ,\"itemValue\":\"홍길동\"},{\"itemType\":\"COMPANY_NAME\",\"itemValue\":\"컨\
          두잇\"},{\"itemType\":\"LEADER_ADDRESS\",\"itemValue\":\"집주소\"},    {\"itemType\"\
          :\"CEO_NAME\",\"itemValue\":\"이상목\"},    {\"itemType\":\"COMPANY_ADDRESS\"\
          ,\"itemValue\":\"회사주쇼\"},    {\"itemType\":\"IR_PHONE_NUMBER\",\"itemValue\"\
          :\"02-123-1234\"},    {\"itemType\":\"DEADLINE_DATE_BY_LEADER\",\"itemValue\"\
          :\"2024-12-12T10:10:10+09:00\"}, {\"itemType\":\"REFERENCE_DATE_BY_LEADER\"\
          ,\"itemValue\":\"12월말\"},{\"itemType\":\"LEADER_EMAIL\",\"itemValue\":\"\
          air@air.com\"}]}"
      properties:
        createPostRequest:
          type: string
        signImage:
          description: 서명 이미지
          format: binary
          type: string
        idCardImage:
          description: 신분증 이미지
          format: binary
          type: string
        bankAccountImages:
          items:
            description: 잔고증명서 이미지
            format: binary
            type: string
          nullable: true
          type: array
        hectoEncryptedBankAccountPdf:
          description: 암호화된 헥토측 잔고증명서 pdf 파일
          format: binary
          type: string
      type: object
    CreateUserDigitalDocumentRequest:
      example:
        signImage: file
        idCardImage: file
        bankAccountImages: files
        answerData: "itemId:APPROVAL,itemId:REJECTION,itemId:ABSTENTION"
      properties:
        signImage:
          description: 서명 이미지
          format: binary
          type: string
        idCardImage:
          description: 신분증 이미지
          format: binary
          type: string
        bankAccountImages:
          items:
            description: 잔고증명서 이미지
            format: binary
            type: string
          nullable: true
          type: array
        hectoEncryptedBankAccountPdf:
          description: 암호화된 헥토측 잔고증명서 pdf 파일
          format: binary
          type: string
        answerData:
          nullable: true
          type: string
      type: object
    HolderListReadAndCopyItemRequest:
      properties:
        itemType:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "항목 타입을 확인해주세요.")
        itemValue:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "항목 값 확인해주세요.")
      type: object
    CreateUserDigitalDocumentItemRequest:
      properties:
        itemId:
          description: 전자문서 의안 아이디
          format: int64
          type: integer
        userSelectValue:
          description: 사용자 선택값
          type: string
      type: object
    CreateDigitalDocumentRequest:
      properties:
        type:
          description: 전자 문서 구분 DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "문서 구분을 확인해주세요.")
        companyName:
          description: 회사명
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "회사명을 확인해주세요.")
        acceptUserId:
          description: 수임인 아이디
          format: int64
          type: integer
        stockReferenceDateId:
          description: 기준일 정보 아이디
          format: int64
          type: integer
        targetStartDate:
          description: 시작일
          format: date-time
          type: string
        targetEndDate:
          description: 종료일
          format: date-time
          type: string
        shareholderMeetingType:
          description: 주총구분 REGULAR_GENERAL_MEETING_STOCKHOLDERS or EXTRAORDINARY_GENERAL_MEETING_STOCKHOLDERS
          type: string
        shareholderMeetingName:
          description: 주총명
          type: string
        shareholderMeetingDate:
          description: 주춍일
          format: date-time
          type: string
        designatedAgentNames:
          description: 수임인지정대리인
          type: string
        childItems:
          items:
            $ref: '#/components/schemas/DigitalDocumentItemRequest'
          type: array
        companyRegistrationNumber:
          description: 법인등록번호
          type: string
        title:
          description: 전자문서 제목
          type: string
        content:
          description: 전자문서 내용
          type: string
        version:
          default: V1
          description: 전자문서 버전
          type: string
        idCardWatermarkType:
          default: ACT_LOGO
          description: NONE or ACT_LOGO or ACT_LOGO_WITH_DATE
          type: string
        attachOptions:
          $ref: '#/components/schemas/JsonAttachOption'
        holderListReadAndCopyItems:
          items:
            $ref: '#/components/schemas/HolderListReadAndCopyItemRequest'
          type: array
        isDisplayStockQuantity:
          default: false
          description: 보유주식수 표시 여부
          type: boolean
      type: object
      x-implements:
      - ag.act.dto.IDigitalDocumentFillRequest
    UpdateDigitalDocumentRequest:
      properties:
        postTitle:
          description: 게시글 제목
          type: string
        postContent:
          description: 게시글 내용
          type: string
        stockReferenceDateId:
          description: 기준일 정보 아이디
          format: int64
          type: integer
        targetEndDate:
          description: 종료일
          format: date-time
          type: string
        imageIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    JsonAttachOption:
      properties:
        signImage:
          description: REQUIRED or OPTIONAL or NONE
          type: string
        idCardImage:
          description: REQUIRED or OPTIONAL or NONE
          type: string
        bankAccountImage:
          description: REQUIRED or OPTIONAL or NONE
          type: string
        hectoEncryptedBankAccountPdf:
          description: REQUIRED or OPTIONAL or NONE
          type: string
      type: object
    DigitalDocumentItemRequest:
      example:
        defaultSelectValue: defaultSelectValue
        leaderDescription: leaderDescription
        childItems:
        - null
        - null
        title: title
        content: content
      properties:
        title:
          description: 의안 제목
          type: string
        content:
          description: 의안 상세
          type: string
        defaultSelectValue:
          description: 기본 선택값
          type: string
        leaderDescription:
          description: 주주대표 의안 상세 설명
          type: string
        childItems:
          items:
            $ref: '#/components/schemas/DigitalDocumentItemRequest'
          type: array
      type: object
    CreateDigitalProxyRequest:
      description: Digital Proxy for the post. It can be null.
      properties:
        templateId:
          description: Template id of the Digital Proxy is mandatory
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "Template Id 을 확인해주세요.")
        templateName:
          description: Template name of the Digital Proxy is mandatory
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "Template Name 을 확인해주세요.")
        templateRole:
          description: Template role of the Digital Proxy is mandatory
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "Template Role 을 확인해주세요.")
        targetStartDate:
          description: The start date for the Digital Proxy is mandatory
          format: date-time
          type: string
        targetEndDate:
          description: The end date for the Digital Proxy is mandatory
          format: date-time
          type: string
        status:
          default: ACTIVE
          description: Status for the Digital Proxy ex) ACTIVE is mandatory
          type: string
      type: object
    CreatePollRequest:
      description: Poll for the post. It can be null.
      properties:
        title:
          description: Title of the poll is mandatory
          type: string
        content:
          description: Content of the poll is mandatory
          type: string
        targetStartDate:
          description: The start date for the poll is mandatory
          format: date-time
          type: string
        targetEndDate:
          description: The end date for the poll is mandatory
          format: date-time
          type: string
        selectionOption:
          description: "Selection options for the poll ex) SINGLE_ITEM, MULTIPLE_ITEMS\
            \ is mandatory"
          type: string
        voteType:
          description: "Vote type for the poll ex) PERSON_BASED, SHAREHOLDER_BASED\
            \ is mandatory"
          type: string
        pollItems:
          items:
            $ref: '#/components/schemas/CreatePollItemRequest'
          type: array
      type: object
    CreatePollItemRequest:
      properties:
        text:
          description: Text for the poll item is mandatory
          type: string
      type: object
    UpdatePostRequest:
      example:
        boardCategory: DAILY_ACT
        title: text
        content: text
        isActive: "true"
        imageIds:
        - 1
        updateTargetDate:
          targetStartDate: 2023-07-18T13:52:31.082+09:00
          targetEndDate: 2023-07-18T13:52:45.028+09:00
        poll:
          targetStartDate: 2023-07-18T13:52:31.082+09:00
          targetEndDate: 2023-07-18T13:52:45.028+09:00
        digitalProxy:
          targetStartDate: 2023-07-18T13:52:31.082+09:00
          targetEndDate: 2023-07-18T13:52:45.028+09:00
        digitalDocument:
          title: 기타 전자문서 제목
          content: 전자문서 내용
          stockReferenceDateId: 5
          targetStartDate: 2023-07-18T13:52:31.082+09:00
          targetEndDate: 2023-07-18T13:52:45.028+09:00
        isEd: 이미 escaped 되었는지 여부 true or false
      properties:
        boardCategory:
          description: The category of the post. This field is mandatory.
          type: string
        title:
          description: The title of the post. This field is mandatory.
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "제목을 확인해주세요.")
        content:
          description: The content of the post. This field is mandatory.
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "내용을 확인해주세요.")
        isAnonymous:
          default: false
          description: "Indicates whether the post is written anonymously. By default,\
            \ this is set to 'false'."
          type: boolean
        isActive:
          default: true
          description: "Indicates whether the post is active. By default, this is\
            \ set to 'true'. This field is mandatory."
          type: boolean
        isNotification:
          default: false
          description: "Indicates whether a notification should be sent for the post.\
            \ By default, this is set to 'false'."
          type: boolean
        isExclusiveToHolders:
          default: false
          description: "Indicates whether the post is exclusive to stock holders.\
            \ By default, this is set to 'false'. This field is optional."
          type: boolean
        updateTargetDate:
          $ref: '#/components/schemas/TargetDateRequest'
        activeStartDate:
          format: date-time
          type: string
        activeEndDate:
          format: date-time
          type: string
        push:
          $ref: '#/components/schemas/PushRequest'
        polls:
          description: 멀티 설문 입력 정보
          items:
            $ref: '#/components/schemas/UpdatePollRequest'
          type: array
        digitalProxy:
          $ref: '#/components/schemas/UpdatePostRequest_digitalProxy'
        digitalDocument:
          $ref: '#/components/schemas/UpdatePostRequest_digitalDocument'
        imageIds:
          items:
            format: int64
            type: integer
          type: array
        isEd:
          default: false
          type: boolean
      type: object
      x-implements:
      - ag.act.dto.HtmlContent
    PostDetailsDataResponse:
      example:
        data: null
      properties:
        data:
          $ref: '#/components/schemas/PostDetailsResponse'
      type: object
    CampaignResponse:
      example:
        id: 1
        title: 캠페인 제목
        sourcePostId: 1
        sourceStockGroupId: 1
        isPoll: false
        isDigitalDocument: false
        mappedStocksCount: 1
        joinUserCount: 1
        joinStockCount: 1
        status: ACTIVE
        createdAt: 2023-08-10T08:22:44.548Z
        updatedAt: 2023-08-10T08:22:44.548Z
        deletedAt: null
        campaignDownload:
          id: 1
          requestUserId: 1
          zipFileStatus: Zip 파일 상태
          zipFilePath: Zip 파일 정보
          updatedAt: 2023-08-10T08:22:44.548Z
      properties:
        id:
          format: int64
          type: integer
        title:
          type: string
        sourcePostId:
          format: int64
          type: integer
        sourceStockGroupId:
          format: int64
          type: integer
        sourceStockGroupName:
          type: string
        mappedStocksCount:
          format: int64
          type: integer
        joinUserCount:
          type: integer
        joinStockCount:
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/Status'
        boardCategory:
          type: string
        stockQuantity:
          format: int64
          type: integer
        targetEndDate:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        isPoll:
          default: false
          type: boolean
        isDigitalDocument:
          default: false
          type: boolean
        campaignDownload:
          $ref: '#/components/schemas/DigitalDocumentDownloadResponse'
      type: object
    CampaignDetailsDataResponse:
      example:
        data:
          createdAt: 2023-08-10T08:22:44.548Z
          deletedAt: 2000-01-23T04:56:07.000+00:00
          sourcePost:
            activeStartDate: 2000-01-23T04:56:07.000+00:00
            isPush: false
            polls:
            - voteType: voteType
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              answers:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              postId: 6
              voteTotalCount: 1
              title: title
              content: content
              createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              selectionOption: selectionOption
              id: 0
              voteTotalStockSum: 5
              pollItems:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - voteType: voteType
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              answers:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              postId: 6
              voteTotalCount: 1
              title: title
              content: content
              createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              selectionOption: selectionOption
              id: 0
              voteTotalStockSum: 5
              pollItems:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            digitalProxy:
              createdAt: 2000-01-23T04:56:07.000+00:00
              templateRole: templateRole
              templateName: templateName
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              id: 1
              templateId: templateId
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            likeCount: 1
            poll:
              voteType: voteType
              targetEndDate: 2000-01-23T04:56:07.000+00:00
              answers:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 4
                stockQuantity: 1
                id: 3
                pollItemId: 2
                userId: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              postId: 6
              voteTotalCount: 1
              title: title
              content: content
              createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              targetStartDate: 2000-01-23T04:56:07.000+00:00
              selectionOption: selectionOption
              id: 0
              voteTotalStockSum: 5
              pollItems:
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - createdAt: 2000-01-23T04:56:07.000+00:00
                deletedAt: 2000-01-23T04:56:07.000+00:00
                pollId: 2
                id: 5
                text: text
                voteItemStockSum: 9
                voteItemCount: 7
                status: status
                updatedAt: 2000-01-23T04:56:07.000+00:00
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            title: title
            isActive: true
            userProfile:
              leadingStocks:
              - code: code
                name: name
                standardCode: standardCode
              - code: code
                name: name
                standardCode: standardCode
              deleted: true
              hasStocks: true
              totalAssetLabel: totalAssetLabel
              nickname: nickname
              reported: true
              userIp: userIp
              individualStockCountLabel: individualStockCountLabel
              profileImageUrl: profileImageUrl
              isSolidarityLeader: true
            content: content
            liked: true
            createdAt: 2000-01-23T04:56:07.000+00:00
            thumbnailImageUrl: thumbnailImageUrl
            reported: true
            id: 1
            viewCount: 5
            stock:
              code: 종목코드
              name: 종목명
              totalIssuedQuantity: 상장주식수
              representativePhoneNumber: (02) 555-6666
              memberCount: 주주수
              stake: 지분율
            activeEndDate: 2000-01-23T04:56:07.000+00:00
            boardGroup: boardGroup
            digitalDocument:
              id: digitalDocumentId
              answerStatus: SAVE or COMPLETE
              digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
              joinUserCount: 전자문서 참여자수
              shareholdingRatio: 지분율
              targetStartDate: 전자문서 시작일자
              targetEndDate: 전자문서 종료일자
              user: 전자문서 위임인 정보
              stock: 전자문서 위임인 주식정보
              acceptUser: 전자문서 수임인 정보
              items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
              attachOptions: 전자문서 첨부 옵션
              digitalDocumentDownload: 전자문서 다운로드 정보
            updatedAt: 2000-01-23T04:56:07.000+00:00
            isPinned: false
            boardCategory:
              name: DAILY_ACT
              displayName: 분석자료
              isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
              badgeColor: '#FFFFFF'
              isGroup: "false"
              subCategories: 하위 카테고리 목록
            isExclusiveToHolders: false
            postImageList:
            - imageId: 9
              imageUrl: imageUrl
            - imageId: 9
              imageUrl: imageUrl
            isNew: true
            isNotification: true
            userId: 7
            commentCount: 4
            isAuthorAdmin: true
            deletedAt: 2000-01-23T04:56:07.000+00:00
            holderListReadAndCopyDigitalDocument:
              digitalDocumentId: 1
              fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
              userId: 1
            deleted: true
            editedAt: 2000-01-23T04:56:07.000+00:00
            boardId: 6
            status: null
          sourceStockGroupName: "1"
          id: 1
          campaignPosts:
          - postId: 0
            stock:
              code: code
              name: name
              standardCode: standardCode
          - postId: 0
            stock:
              code: code
              name: name
              standardCode: standardCode
          title: 캠페인 제목
          sourceStockGroupId: 1
          status: null
          updatedAt: 2023-08-10T08:22:44.548Z
      properties:
        data:
          $ref: '#/components/schemas/CampaignDetailsResponse'
      type: object
    CampaignDetailsResponse:
      example:
        createdAt: 2023-08-10T08:22:44.548Z
        deletedAt: 2000-01-23T04:56:07.000+00:00
        sourcePost:
          activeStartDate: 2000-01-23T04:56:07.000+00:00
          isPush: false
          polls:
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          digitalProxy:
            createdAt: 2000-01-23T04:56:07.000+00:00
            templateRole: templateRole
            templateName: templateName
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            id: 1
            templateId: templateId
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          likeCount: 1
          poll:
            voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          title: title
          isActive: true
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          thumbnailImageUrl: thumbnailImageUrl
          reported: true
          id: 1
          viewCount: 5
          stock:
            code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          activeEndDate: 2000-01-23T04:56:07.000+00:00
          boardGroup: boardGroup
          digitalDocument:
            id: digitalDocumentId
            answerStatus: SAVE or COMPLETE
            digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
            joinUserCount: 전자문서 참여자수
            shareholdingRatio: 지분율
            targetStartDate: 전자문서 시작일자
            targetEndDate: 전자문서 종료일자
            user: 전자문서 위임인 정보
            stock: 전자문서 위임인 주식정보
            acceptUser: 전자문서 수임인 정보
            items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
            attachOptions: 전자문서 첨부 옵션
            digitalDocumentDownload: 전자문서 다운로드 정보
          updatedAt: 2000-01-23T04:56:07.000+00:00
          isPinned: false
          boardCategory:
            name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
          isExclusiveToHolders: false
          postImageList:
          - imageId: 9
            imageUrl: imageUrl
          - imageId: 9
            imageUrl: imageUrl
          isNew: true
          isNotification: true
          userId: 7
          commentCount: 4
          isAuthorAdmin: true
          deletedAt: 2000-01-23T04:56:07.000+00:00
          holderListReadAndCopyDigitalDocument:
            digitalDocumentId: 1
            fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
            userId: 1
          deleted: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          boardId: 6
          status: null
        sourceStockGroupName: "1"
        id: 1
        campaignPosts:
        - postId: 0
          stock:
            code: code
            name: name
            standardCode: standardCode
        - postId: 0
          stock:
            code: code
            name: name
            standardCode: standardCode
        title: 캠페인 제목
        sourceStockGroupId: 1
        status: null
        updatedAt: 2023-08-10T08:22:44.548Z
      properties:
        id:
          example: 1
          format: int64
          type: integer
        title:
          example: 캠페인 제목
          type: string
        sourcePost:
          $ref: '#/components/schemas/PostResponse'
        sourceStockGroupId:
          example: 1
          format: int64
          type: integer
        sourceStockGroupName:
          example: "1"
          type: string
        campaignPosts:
          items:
            $ref: '#/components/schemas/SimplePostResponse'
          type: array
        status:
          $ref: '#/components/schemas/Status'
        createdAt:
          example: 2023-08-10T08:22:44.548Z
          format: date-time
          type: string
        updatedAt:
          example: 2023-08-10T08:22:44.548Z
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
          example: null
      type: object
    DigitalProxyResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        templateRole: templateRole
        templateName: templateName
        targetStartDate: 2000-01-23T04:56:07.000+00:00
        targetEndDate: 2000-01-23T04:56:07.000+00:00
        id: 1
        templateId: templateId
        status: status
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        templateId:
          type: string
        templateName:
          type: string
        templateRole:
          type: string
        targetStartDate:
          format: date-time
          type: string
        targetEndDate:
          format: date-time
          type: string
        status:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    PostPollAnswerRequest:
      example:
        pollAnswer:
        - pollItemId: 0
        - pollItemId: 0
      properties:
        pollAnswer:
          items:
            $ref: '#/components/schemas/CreatePollAnswerItemRequest'
          type: array
      type: object
    TargetDateRequest:
      properties:
        targetStartDate:
          format: date-time
          type: string
        targetEndDate:
          format: date-time
          type: string
      type: object
      x-implements:
      - ag.act.dto.TargetStartAndEndDatePeriod
    UpdatePollRequest:
      properties:
        id:
          format: int64
          type: integer
        title:
          type: string
        content:
          type: string
        targetStartDate:
          description: 시작일
          format: date-time
          type: string
        targetEndDate:
          description: 종료일
          format: date-time
          type: string
      type: object
    CreatePollAnswerItemRequest:
      example:
        pollItemId: 0
      properties:
        pollItemId:
          format: int64
          type: integer
      type: object
    PollAnswerDataArrayResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          pollId: 4
          stockQuantity: 1
          id: 3
          pollItemId: 2
          userId: 7
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          pollId: 4
          stockQuantity: 1
          id: 3
          pollItemId: 2
          userId: 7
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/PollAnswerResponse'
          type: array
      type: object
    PollAnswerResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        pollId: 4
        stockQuantity: 1
        id: 3
        pollItemId: 2
        userId: 7
        status: status
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        pollItemId:
          format: int64
          type: integer
        pollId:
          format: int64
          nullable: true
          type: integer
        userId:
          format: int64
          type: integer
        stockQuantity:
          format: int64
          type: integer
        status:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
          example: null
      type: object
    CreateCommentRequest:
      example:
        content: text
        isAnonymous: false
        isEd: 이미 escaped 되었는지 여부 true or false
      properties:
        content:
          description: Content of the comment
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "댓글를 확인해주세요.")
        isAnonymous:
          description: Whether the comment should be anonymous
          type: boolean
          x-field-extra-annotation: |
            @IsBoolean(message = "익명여부를 확인해주세요.")
        isEd:
          default: false
          type: boolean
      type: object
      x-implements:
      - ag.act.dto.HtmlContent
    UpdateCommentRequest:
      example:
        content: text
        isAnonymous: false
        isEd: 이미 escaped 되었는지 여부 true or false
      properties:
        content:
          description: Content of the comment
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "댓글를 확인해주세요.")
        isAnonymous:
          default: false
          description: Whether the comment should be anonymous
          type: boolean
          x-field-extra-annotation: |
            @IsBoolean(message = "익명여부를 확인해주세요.")
        isEd:
          default: false
          type: boolean
      type: object
      x-implements:
      - ag.act.dto.HtmlContent
    Paging:
      example:
        size: 10
        totalPages: 10
        page: 1
        sorts: "createdAt:desc,userId:asc"
        totalElements: 10
      properties:
        totalElements:
          example: 10
          format: int64
          type: integer
        totalPages:
          example: 10
          type: integer
        size:
          example: 10
          type: integer
        page:
          example: 1
          type: integer
        sorts:
          description: Sorting criteria
          example: "createdAt:desc,userId:asc"
          items:
            type: string
          type: array
      type: object
    StockGroupDataArrayResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 0
          status: null
          stockCount: 6
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 0
          status: null
          stockCount: 6
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/StockGroupResponse'
          type: array
      type: object
    StockDataArrayResponse:
      example:
        data:
        - code: 종목코드
          name: 종목명
          totalIssuedQuantity: 상장주식수
          representativePhoneNumber: (02) 555-6666
          memberCount: 주주수
          stake: 지분율
        - code: 종목코드
          name: 종목명
          totalIssuedQuantity: 상장주식수
          representativePhoneNumber: (02) 555-6666
          memberCount: 주주수
          stake: 지분율
      properties:
        data:
          items:
            $ref: '#/components/schemas/StockResponse'
          type: array
      type: object
    StockResponse:
      example:
        code: 종목코드
        name: 종목명
        totalIssuedQuantity: 상장주식수
        representativePhoneNumber: (02) 555-6666
        memberCount: 주주수
        stake: 지분율
      properties:
        code:
          description: Code of the stock
          example: "020416"
          type: string
        name:
          description: Name of the stock
          example: 삼성전자
          type: string
        totalIssuedQuantity:
          description: Total issued quantity of the stock
          example: 33861
          format: int64
          type: integer
        representativePhoneNumber:
          description: 종목 담당자 전화번호
          example: (02) 555-6666
          type: string
        memberCount:
          description: Member count of the stock
          example: 33861
          nullable: true
          type: integer
        stake:
          description: Stake of the stock member
          format: float
          nullable: true
          type: number
        status:
          $ref: '#/components/schemas/Status'
        isPrivate:
          type: boolean
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
          example: null
      type: object
    BoardResponse:
      nullable: true
      properties:
        stockCode:
          example: string
          type: string
        id:
          format: int64
          type: integer
        name:
          example: 분석자료
          type: string
        group:
          description: Board group name
          type: string
        category:
          description: Board category name
          type: string
        status:
          $ref: '#/components/schemas/Status'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
          example: null
      type: object
    SectionItemResponse:
      properties:
        title:
          type: string
        userProfile:
          $ref: '#/components/schemas/UserProfileResponse'
        boardCategory:
          $ref: '#/components/schemas/BoardCategoryResponse'
        viewCount:
          format: int64
          type: integer
        link:
          type: string
        likeCount:
          format: int64
          type: integer
        reported:
          type: boolean
        deleted:
          type: boolean
        isNew:
          type: boolean
        isExclusiveToHolders:
          default: false
          type: boolean
        commentCount:
          format: int64
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    GetBoardGroupPostResponse:
      example:
        data:
        - activeStartDate: 2000-01-23T04:56:07.000+00:00
          isPush: false
          polls:
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          digitalProxy:
            createdAt: 2000-01-23T04:56:07.000+00:00
            templateRole: templateRole
            templateName: templateName
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            id: 1
            templateId: templateId
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          likeCount: 1
          poll:
            voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          title: title
          isActive: true
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          thumbnailImageUrl: thumbnailImageUrl
          reported: true
          id: 1
          viewCount: 5
          stock:
            code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          activeEndDate: 2000-01-23T04:56:07.000+00:00
          boardGroup: boardGroup
          digitalDocument:
            id: digitalDocumentId
            answerStatus: SAVE or COMPLETE
            digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
            joinUserCount: 전자문서 참여자수
            shareholdingRatio: 지분율
            targetStartDate: 전자문서 시작일자
            targetEndDate: 전자문서 종료일자
            user: 전자문서 위임인 정보
            stock: 전자문서 위임인 주식정보
            acceptUser: 전자문서 수임인 정보
            items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
            attachOptions: 전자문서 첨부 옵션
            digitalDocumentDownload: 전자문서 다운로드 정보
          updatedAt: 2000-01-23T04:56:07.000+00:00
          isPinned: false
          boardCategory:
            name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
          isExclusiveToHolders: false
          postImageList:
          - imageId: 9
            imageUrl: imageUrl
          - imageId: 9
            imageUrl: imageUrl
          isNew: true
          isNotification: true
          userId: 7
          commentCount: 4
          isAuthorAdmin: true
          deletedAt: 2000-01-23T04:56:07.000+00:00
          holderListReadAndCopyDigitalDocument:
            digitalDocumentId: 1
            fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
            userId: 1
          deleted: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          boardId: 6
          status: null
        - activeStartDate: 2000-01-23T04:56:07.000+00:00
          isPush: false
          polls:
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          digitalProxy:
            createdAt: 2000-01-23T04:56:07.000+00:00
            templateRole: templateRole
            templateName: templateName
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            id: 1
            templateId: templateId
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          likeCount: 1
          poll:
            voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          title: title
          isActive: true
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          thumbnailImageUrl: thumbnailImageUrl
          reported: true
          id: 1
          viewCount: 5
          stock:
            code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          activeEndDate: 2000-01-23T04:56:07.000+00:00
          boardGroup: boardGroup
          digitalDocument:
            id: digitalDocumentId
            answerStatus: SAVE or COMPLETE
            digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
            joinUserCount: 전자문서 참여자수
            shareholdingRatio: 지분율
            targetStartDate: 전자문서 시작일자
            targetEndDate: 전자문서 종료일자
            user: 전자문서 위임인 정보
            stock: 전자문서 위임인 주식정보
            acceptUser: 전자문서 수임인 정보
            items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
            attachOptions: 전자문서 첨부 옵션
            digitalDocumentDownload: 전자문서 다운로드 정보
          updatedAt: 2000-01-23T04:56:07.000+00:00
          isPinned: false
          boardCategory:
            name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
          isExclusiveToHolders: false
          postImageList:
          - imageId: 9
            imageUrl: imageUrl
          - imageId: 9
            imageUrl: imageUrl
          isNew: true
          isNotification: true
          userId: 7
          commentCount: 4
          isAuthorAdmin: true
          deletedAt: 2000-01-23T04:56:07.000+00:00
          holderListReadAndCopyDigitalDocument:
            digitalDocumentId: 1
            fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
            userId: 1
          deleted: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          boardId: 6
          status: null
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/PostResponse'
          type: array
      type: object
      x-implements:
      - ag.act.dto.Pageable
    PostDataResponse:
      example:
        data:
          activeStartDate: 2000-01-23T04:56:07.000+00:00
          isPush: false
          polls:
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          digitalProxy:
            createdAt: 2000-01-23T04:56:07.000+00:00
            templateRole: templateRole
            templateName: templateName
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            id: 1
            templateId: templateId
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          likeCount: 1
          poll:
            voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          title: title
          isActive: true
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          thumbnailImageUrl: thumbnailImageUrl
          reported: true
          id: 1
          viewCount: 5
          stock:
            code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          activeEndDate: 2000-01-23T04:56:07.000+00:00
          boardGroup: boardGroup
          digitalDocument:
            id: digitalDocumentId
            answerStatus: SAVE or COMPLETE
            digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
            joinUserCount: 전자문서 참여자수
            shareholdingRatio: 지분율
            targetStartDate: 전자문서 시작일자
            targetEndDate: 전자문서 종료일자
            user: 전자문서 위임인 정보
            stock: 전자문서 위임인 주식정보
            acceptUser: 전자문서 수임인 정보
            items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
            attachOptions: 전자문서 첨부 옵션
            digitalDocumentDownload: 전자문서 다운로드 정보
          updatedAt: 2000-01-23T04:56:07.000+00:00
          isPinned: false
          boardCategory:
            name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
          isExclusiveToHolders: false
          postImageList:
          - imageId: 9
            imageUrl: imageUrl
          - imageId: 9
            imageUrl: imageUrl
          isNew: true
          isNotification: true
          userId: 7
          commentCount: 4
          isAuthorAdmin: true
          deletedAt: 2000-01-23T04:56:07.000+00:00
          holderListReadAndCopyDigitalDocument:
            digitalDocumentId: 1
            fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
            userId: 1
          deleted: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          boardId: 6
          status: null
      properties:
        data:
          $ref: '#/components/schemas/PostResponse'
      type: object
    PostResponse:
      example:
        activeStartDate: 2000-01-23T04:56:07.000+00:00
        isPush: false
        polls:
        - voteType: voteType
          targetEndDate: 2000-01-23T04:56:07.000+00:00
          answers:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 4
            stockQuantity: 1
            id: 3
            pollItemId: 2
            userId: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 4
            stockQuantity: 1
            id: 3
            pollItemId: 2
            userId: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          postId: 6
          voteTotalCount: 1
          title: title
          content: content
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          targetStartDate: 2000-01-23T04:56:07.000+00:00
          selectionOption: selectionOption
          id: 0
          voteTotalStockSum: 5
          pollItems:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 2
            id: 5
            text: text
            voteItemStockSum: 9
            voteItemCount: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 2
            id: 5
            text: text
            voteItemStockSum: 9
            voteItemCount: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - voteType: voteType
          targetEndDate: 2000-01-23T04:56:07.000+00:00
          answers:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 4
            stockQuantity: 1
            id: 3
            pollItemId: 2
            userId: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 4
            stockQuantity: 1
            id: 3
            pollItemId: 2
            userId: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          postId: 6
          voteTotalCount: 1
          title: title
          content: content
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          targetStartDate: 2000-01-23T04:56:07.000+00:00
          selectionOption: selectionOption
          id: 0
          voteTotalStockSum: 5
          pollItems:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 2
            id: 5
            text: text
            voteItemStockSum: 9
            voteItemCount: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 2
            id: 5
            text: text
            voteItemStockSum: 9
            voteItemCount: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        digitalProxy:
          createdAt: 2000-01-23T04:56:07.000+00:00
          templateRole: templateRole
          templateName: templateName
          targetStartDate: 2000-01-23T04:56:07.000+00:00
          targetEndDate: 2000-01-23T04:56:07.000+00:00
          id: 1
          templateId: templateId
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        likeCount: 1
        poll:
          voteType: voteType
          targetEndDate: 2000-01-23T04:56:07.000+00:00
          answers:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 4
            stockQuantity: 1
            id: 3
            pollItemId: 2
            userId: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 4
            stockQuantity: 1
            id: 3
            pollItemId: 2
            userId: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          postId: 6
          voteTotalCount: 1
          title: title
          content: content
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          targetStartDate: 2000-01-23T04:56:07.000+00:00
          selectionOption: selectionOption
          id: 0
          voteTotalStockSum: 5
          pollItems:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 2
            id: 5
            text: text
            voteItemStockSum: 9
            voteItemCount: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            pollId: 2
            id: 5
            text: text
            voteItemStockSum: 9
            voteItemCount: 7
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        title: title
        isActive: true
        userProfile:
          leadingStocks:
          - code: code
            name: name
            standardCode: standardCode
          - code: code
            name: name
            standardCode: standardCode
          deleted: true
          hasStocks: true
          totalAssetLabel: totalAssetLabel
          nickname: nickname
          reported: true
          userIp: userIp
          individualStockCountLabel: individualStockCountLabel
          profileImageUrl: profileImageUrl
          isSolidarityLeader: true
        content: content
        liked: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        thumbnailImageUrl: thumbnailImageUrl
        reported: true
        id: 1
        viewCount: 5
        stock:
          code: 종목코드
          name: 종목명
          totalIssuedQuantity: 상장주식수
          representativePhoneNumber: (02) 555-6666
          memberCount: 주주수
          stake: 지분율
        activeEndDate: 2000-01-23T04:56:07.000+00:00
        boardGroup: boardGroup
        digitalDocument:
          id: digitalDocumentId
          answerStatus: SAVE or COMPLETE
          digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
          joinUserCount: 전자문서 참여자수
          shareholdingRatio: 지분율
          targetStartDate: 전자문서 시작일자
          targetEndDate: 전자문서 종료일자
          user: 전자문서 위임인 정보
          stock: 전자문서 위임인 주식정보
          acceptUser: 전자문서 수임인 정보
          items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
          attachOptions: 전자문서 첨부 옵션
          digitalDocumentDownload: 전자문서 다운로드 정보
        updatedAt: 2000-01-23T04:56:07.000+00:00
        isPinned: false
        boardCategory:
          name: DAILY_ACT
          displayName: 분석자료
          isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
          badgeColor: '#FFFFFF'
          isGroup: "false"
          subCategories: 하위 카테고리 목록
        isExclusiveToHolders: false
        postImageList:
        - imageId: 9
          imageUrl: imageUrl
        - imageId: 9
          imageUrl: imageUrl
        isNew: true
        isNotification: true
        userId: 7
        commentCount: 4
        isAuthorAdmin: true
        deletedAt: 2000-01-23T04:56:07.000+00:00
        holderListReadAndCopyDigitalDocument:
          digitalDocumentId: 1
          fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
          userId: 1
        deleted: true
        editedAt: 2000-01-23T04:56:07.000+00:00
        boardId: 6
        status: null
      properties:
        userProfile:
          $ref: '#/components/schemas/UserProfileResponse'
        boardCategory:
          $ref: '#/components/schemas/BoardCategoryResponse'
        boardGroup:
          type: string
        stock:
          $ref: '#/components/schemas/StockResponse'
        poll:
          $ref: '#/components/schemas/PollResponse'
        polls:
          items:
            $ref: '#/components/schemas/PollResponse'
          type: array
        digitalProxy:
          $ref: '#/components/schemas/DigitalProxyResponse'
        digitalDocument:
          $ref: '#/components/schemas/UserDigitalDocumentResponse'
        holderListReadAndCopyDigitalDocument:
          $ref: '#/components/schemas/HolderListReadAndCopyDigitalDocumentResponse'
        id:
          format: int64
          type: integer
        boardId:
          description: ID of the board the post belongs to
          format: int64
          type: integer
        title:
          type: string
        content:
          nullable: true
          type: string
          example: null
        status:
          $ref: '#/components/schemas/Status'
        userId:
          description: ID of the user who created the post
          format: int64
          type: integer
        likeCount:
          format: int64
          type: integer
        commentCount:
          format: int64
          type: integer
        viewCount:
          format: int64
          type: integer
        isActive:
          type: boolean
        isNotification:
          type: boolean
        isExclusiveToHolders:
          default: false
          type: boolean
        isPinned:
          default: false
          type: boolean
        isPush:
          default: false
          type: boolean
        isNew:
          type: boolean
        liked:
          type: boolean
        deleted:
          type: boolean
        reported:
          type: boolean
        isAuthorAdmin:
          type: boolean
        thumbnailImageUrl:
          type: string
        postImageList:
          items:
            $ref: '#/components/schemas/SimpleImageResponse'
          type: array
        activeStartDate:
          format: date-time
          type: string
        activeEndDate:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        editedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
          example: null
      type: object
    SimplePostResponse:
      example:
        postId: 0
        stock:
          code: code
          name: name
          standardCode: standardCode
      properties:
        postId:
          format: int64
          type: integer
        stock:
          $ref: '#/components/schemas/SimpleStockResponse'
      type: object
    UserNotificationResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        activeStartDate: 2000-01-23T04:56:07.000+00:00
        post:
          stockName: stockName
          boardCategory: boardCategory
          id: 1
          title: title
          stockCode: stockCode
          boardCategoryDisplayName: boardCategoryDisplayName
        linkUrl: linkUrl
        isRead: true
        id: 0
        postId: 6
        category: category
        type: type
      properties:
        id:
          description: Notification ID
          format: int64
          type: integer
        postId:
          description: ID of post
          format: int64
          nullable: true
          type: integer
        category:
          description: Notification category
          type: string
        linkUrl:
          description: Link Url for the app when notification tapped
          type: string
        type:
          description: Notification type
          type: string
        createdAt:
          format: date-time
          type: string
        activeStartDate:
          format: date-time
          type: string
        isRead:
          description: Whether the notification is read or not
          type: boolean
        post:
          $ref: '#/components/schemas/UserPostNotificationResponse'
      type: object
    NotificationResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        post:
          stockName: stockName
          boardCategory: boardCategory
          id: 1
          title: title
          stockCode: stockCode
          boardCategoryDisplayName: boardCategoryDisplayName
        linkUrl: linkUrl
        id: 0
        postId: 6
        category: category
        type: type
      properties:
        id:
          description: Notification ID
          format: int64
          type: integer
        postId:
          description: ID of post
          format: int64
          nullable: true
          type: integer
        category:
          description: Notification category
          type: string
        linkUrl:
          description: Link Url for the app when notification tapped
          type: string
        type:
          description: Notification type
          type: string
        createdAt:
          format: date-time
          type: string
        post:
          $ref: '#/components/schemas/UserPostNotificationResponse'
      type: object
    UserPostNotificationResponse:
      example:
        stockName: stockName
        boardCategory: boardCategory
        id: 1
        title: title
        stockCode: stockCode
        boardCategoryDisplayName: boardCategoryDisplayName
      properties:
        id:
          description: Post ID
          format: int64
          type: integer
        boardCategory:
          description: Board category
          type: string
        boardCategoryDisplayName:
          description: Board category Display Name
          type: string
        title:
          description: Post title
          type: string
        stockCode:
          description: Stock code
          type: string
        stockName:
          description: Stock name
          type: string
      type: object
    DigitalDocumentStockResponse:
      properties:
        code:
          type: string
        standardCode:
          type: string
        name:
          type: string
        referenceDateId:
          format: int64
          type: integer
        referenceDate:
          format: date
          type: string
        referenceDateStockCount:
          format: int64
          type: integer
      type: object
    DigitalDocumentResponse:
      properties:
        id:
          format: int64
          type: integer
        title:
          type: string
        content:
          type: string
        stockReferenceDate:
          format: date-time
          type: string
        companyName:
          type: string
        companyRegistrationNumber:
          type: string
        shareholderMeetingType:
          type: string
        shareholderMeetingName:
          type: string
        shareholderMeetingDate:
          format: date-time
          type: string
        designatedAgentNames:
          type: string
        acceptUserId:
          format: int64
          type: integer
        type:
          type: string
        version:
          type: string
        targetStartDate:
          format: date-time
          type: string
        targetEndDate:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        items:
          items:
            $ref: '#/components/schemas/DigitalDocumentItemResponse'
          type: array
        attachOptions:
          $ref: '#/components/schemas/JsonAttachOption'
        digitalDocumentDownload:
          $ref: '#/components/schemas/DigitalDocumentDownloadResponse'
      type: object
    DigitalDocumentDownloadResponse:
      properties:
        id:
          format: int64
          type: integer
        requestUserId:
          format: int64
          type: integer
        zipFileStatus:
          type: string
        zipFileKey:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    DigitalDocumentUserResponse:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        birthDate:
          format: date-time
          type: string
        gender:
          type: string
        phoneNumber:
          type: string
        zipcode:
          type: string
        address:
          type: string
        addressDetail:
          type: string
      type: object
    DigitalDocumentUserDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/DigitalDocumentUserResponse'
      - $ref: '#/components/schemas/DigitalDocumentUserDetailsResponse_allOf'
    DigitalDocumentAcceptUserResponse:
      example:
        phoneNumber: phoneNumber
        name: name
        corporateNo: corporateNo
        id: 0
        birthDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        birthDate:
          format: date-time
          type: string
        phoneNumber:
          type: string
        corporateNo:
          type: string
      type: object
    DigitalDocumentItemResponse:
      properties:
        id:
          format: int64
          type: integer
        title:
          description: 의안 제목
          type: string
        content:
          description: 의안 상세
          type: string
        defaultSelectValue:
          description: 기본 선택값
          type: string
        leaderDescription:
          description: 주주대표 의안 상세 설명
          type: string
        childItems:
          items:
            $ref: '#/components/schemas/DigitalDocumentItemResponse'
          type: array
      type: object
    SimpleImageDataResponse:
      example:
        data:
          imageId: 9
          imageUrl: imageUrl
      properties:
        data:
          $ref: '#/components/schemas/SimpleImageResponse'
      type: object
    SimpleImageResponse:
      example:
        imageId: 9
        imageUrl: imageUrl
      properties:
        imageId:
          description: Image ID
          format: int64
          type: integer
        imageUrl:
          type: string
      type: object
    DefaultProfileImagesResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          gender: gender
          id: 0
          url: url
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          gender: gender
          id: 0
          url: url
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/DefaultProfileImageResponse'
          type: array
      type: object
    ImageUploadResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          url: url
          originalFilename: originalFilename
          fileContentType: fileContentType
          fileType: fileType
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/FileContentResponse'
      type: object
    FileContentResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
        url: url
        originalFilename: originalFilename
        fileContentType: fileContentType
        fileType: fileType
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: File ID
          format: int64
          type: integer
        url:
          type: string
        originalFilename:
          type: string
        fileContentType:
          type: string
        fileType:
          type: string
        description:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
      type: object
    DefaultProfileImageResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        gender: gender
        id: 0
        url: url
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: File ID
          format: int64
          type: integer
        url:
          type: string
        gender:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    PollResponse:
      example:
        voteType: voteType
        targetEndDate: 2000-01-23T04:56:07.000+00:00
        answers:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          pollId: 4
          stockQuantity: 1
          id: 3
          pollItemId: 2
          userId: 7
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          pollId: 4
          stockQuantity: 1
          id: 3
          pollItemId: 2
          userId: 7
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        postId: 6
        voteTotalCount: 1
        title: title
        content: content
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        targetStartDate: 2000-01-23T04:56:07.000+00:00
        selectionOption: selectionOption
        id: 0
        voteTotalStockSum: 5
        pollItems:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          pollId: 2
          id: 5
          text: text
          voteItemStockSum: 9
          voteItemCount: 7
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          pollId: 2
          id: 5
          text: text
          voteItemStockSum: 9
          voteItemCount: 7
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        status: status
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Poll ID
          format: int64
          type: integer
        title:
          description: Poll title
          type: string
        content:
          description: Poll content
          type: string
        postId:
          description: Post ID associated with the poll
          format: int64
          type: integer
        voteType:
          type: string
        selectionOption:
          type: string
        status:
          type: string
        targetStartDate:
          description: Target start date of the poll
          format: date-time
          type: string
        targetEndDate:
          description: Target end date of the poll
          format: date-time
          type: string
        voteTotalCount:
          type: integer
        voteTotalStockSum:
          format: int64
          type: integer
        createdAt:
          description: Creation timestamp of the poll
          format: date-time
          type: string
        updatedAt:
          description: Last update timestamp of the poll
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
          example: null
        pollItems:
          items:
            $ref: '#/components/schemas/PollItemResponse'
          type: array
        answers:
          items:
            $ref: '#/components/schemas/PollAnswerResponse'
          type: array
      type: object
    PollItemResponse:
      description: Poll item details
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        pollId: 2
        id: 5
        text: text
        voteItemStockSum: 9
        voteItemCount: 7
        status: status
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Poll item ID
          format: int64
          type: integer
        text:
          description: Poll item text
          type: string
        pollId:
          description: Poll ID associated with the poll item
          format: int64
          type: integer
        status:
          type: string
        voteItemCount:
          type: integer
        voteItemStockSum:
          format: int64
          type: integer
        createdAt:
          description: Creation timestamp of the poll item
          format: date-time
          type: string
        updatedAt:
          description: Last update timestamp of the poll item
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
          example: null
      type: object
    ReportContentRequest:
      example:
        reason: reason
      properties:
        reason:
          description: Reason of the repost is mandatory
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "신고 사유를 확인해주세요.")
      type: object
    CommentDataResponse:
      example:
        data:
          replyCommentCount: 5
          likeCount: 1
          userId: 6
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          reported: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          id: 0
          replyComments:
          - null
          - null
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/CommentResponse'
      type: object
    CommentDataArrayResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommentResponse'
          type: array
      type: object
    CommentResponse:
      example:
        replyCommentCount: 5
        likeCount: 1
        userId: 6
        userProfile:
          leadingStocks:
          - code: code
            name: name
            standardCode: standardCode
          - code: code
            name: name
            standardCode: standardCode
          deleted: true
          hasStocks: true
          totalAssetLabel: totalAssetLabel
          nickname: nickname
          reported: true
          userIp: userIp
          individualStockCountLabel: individualStockCountLabel
          profileImageUrl: profileImageUrl
          isSolidarityLeader: true
        content: content
        liked: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        deleted: true
        reported: true
        editedAt: 2000-01-23T04:56:07.000+00:00
        id: 0
        replyComments:
        - null
        - null
        status: status
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        userProfile:
          $ref: '#/components/schemas/UserProfileResponse'
        id:
          format: int64
          type: integer
        userId:
          format: int64
          type: integer
        content:
          type: string
        liked:
          type: boolean
        deleted:
          type: boolean
        reported:
          type: boolean
        likeCount:
          format: int64
          type: integer
        replyCommentCount:
          format: int64
          type: integer
        replyComments:
          items:
            $ref: '#/components/schemas/CommentResponse'
          type: array
        status:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        editedAt:
          format: date-time
          type: string
      type: object
    UserProfileDataResponse:
      properties:
        data:
          $ref: '#/components/schemas/UserProfileResponse'
      type: object
    UserProfileResponse:
      example:
        leadingStocks:
        - code: code
          name: name
          standardCode: standardCode
        - code: code
          name: name
          standardCode: standardCode
        deleted: true
        hasStocks: true
        totalAssetLabel: totalAssetLabel
        nickname: nickname
        reported: true
        userIp: userIp
        individualStockCountLabel: individualStockCountLabel
        profileImageUrl: profileImageUrl
        isSolidarityLeader: true
      nullable: true
      properties:
        nickname:
          type: string
        profileImageUrl:
          nullable: true
          type: string
        individualStockCountLabel:
          nullable: true
          type: string
        totalAssetLabel:
          nullable: true
          type: string
        deleted:
          nullable: true
          type: boolean
        reported:
          nullable: true
          type: boolean
        hasStocks:
          nullable: true
          type: boolean
        userIp:
          nullable: true
          type: string
        isSolidarityLeader:
          nullable: true
          type: boolean
        leadingStocks:
          items:
            $ref: '#/components/schemas/SimpleStockResponse'
          nullable: true
          type: array
      type: object
      x-implements:
      - ag.act.entity.ContentUserProfile
    UpdateMyProfileImageRequest:
      example:
        imageId: 0
      properties:
        imageId:
          format: int64
          type: integer
      type: object
    UpdateMyProfileRequest:
      description: 내 정보 수정 모든 필드는 Optional
      example:
        jobTitle: 직업
        mySpeech: 내 소개
        address: 서울시 강남구
        addressDetail: 서초동
        zipcode: "12345"
        isAgreeToReceiveMail: true
        isVisibilityStockQuantity: true
        isVisibilityTotalAsset: true
      properties:
        jobTitle:
          type: string
        mySpeech:
          type: string
        address:
          type: string
        addressDetail:
          type: string
        zipcode:
          type: string
        isAgreeToReceiveMail:
          default: true
          type: boolean
        isVisibilityStockQuantity:
          default: true
          description: 주식수 설정
          nullable: false
          type: boolean
        isVisibilityTotalAsset:
          default: true
          description: 총자산 설정
          nullable: false
          type: boolean
      type: object
    UpdateMyAddressRequest:
      description: 내 주소 변경 리퀘스트
      example:
        address: 서울시 강남구
        addressDetail: 서초동
        zipcode: "12345"
      properties:
        address:
          type: string
        addressDetail:
          type: string
        zipcode:
          type: string
      type: object
    UpdateMyAuthTypeRequest:
      description: 내 인증수단 변경 리퀘스트
      example:
        authType: PIN
      properties:
        authType:
          description: auth type must be PIN or BIO
          type: string
          x-field-extra-annotation: |
            @IsAuthType(message = "인증수단을 확인해주세요.")
      type: object
    CreateBlockUserRequest:
      description: 유저 차단 리퀘스트
      example:
        targetUserId: 0
      properties:
        targetUserId:
          description: 차단할 유저 아이디
          format: int64
          type: integer
          x-field-extra-annotation: |
            @NotNull(message = "차단할 유저 아이디를 확인해주세요.")
      type: object
    BoardCategoryDataArrayResponse:
      example:
        data:
        - name: DAILY_ACT
          displayName: 분석자료
          isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
          badgeColor: '#FFFFFF'
          isGroup: "false"
          subCategories: 하위 카테고리 목록
        - name: DAILY_ACT
          displayName: 분석자료
          isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
          badgeColor: '#FFFFFF'
          isGroup: "false"
          subCategories: 하위 카테고리 목록
      properties:
        data:
          items:
            $ref: '#/components/schemas/BoardCategoryResponse'
          type: array
      type: object
    SimpleBoardGroupResponse:
      example:
        displayName: displayName
        name: name
        categories:
        - name: DAILY_ACT
          displayName: 분석자료
          isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
          badgeColor: '#FFFFFF'
          isGroup: "false"
          subCategories: 하위 카테고리 목록
        - name: DAILY_ACT
          displayName: 분석자료
          isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
          badgeColor: '#FFFFFF'
          isGroup: "false"
          subCategories: 하위 카테고리 목록
      properties:
        name:
          type: string
        displayName:
          type: string
        categories:
          items:
            $ref: '#/components/schemas/BoardCategoryResponse'
          type: array
      type: object
    BoardCategoryResponse:
      example:
        name: DAILY_ACT
        displayName: 분석자료
        isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
        badgeColor: '#FFFFFF'
        isGroup: "false"
        subCategories: 하위 카테고리 목록
      properties:
        name:
          type: string
        displayName:
          type: string
        isExclusiveToHolders:
          default: false
          type: boolean
        badgeColor:
          type: string
        isGroup:
          default: false
          type: boolean
        subCategories:
          items:
            $ref: '#/components/schemas/BoardCategoryResponse'
          type: array
      type: object
    BatchRequest:
      example:
        isFirstCreateUserHoldingStockHistory: false
        batchPeriod: 0
        periodTimeUnit: MINUTE or HOUR
      properties:
        batchPeriod:
          description: The duration of the batch period
          type: integer
        periodTimeUnit:
          default: HOUR
          description: The time unit for the batch period
          enum:
          - MINUTE
          - HOUR
          example: MINUTE or HOUR
          type: string
        isFirstCreateUserHoldingStockHistory:
          default: false
          type: boolean
      type: object
    UpdateMyPushTokenRequest:
      example:
        token: token
      properties:
        token:
          type: string
      type: object
    DigitalProxySignResponse:
      example:
        embeddedUrl: embeddedUrl
      properties:
        embeddedUrl:
          type: string
      type: object
    ReportStatus:
      enum:
      - READY
      - PROCESSING
      - COMPLETE
      - REJECT
      type: string
    ReportListResponse:
      example:
        reportId: reportId
        title: Post Title
        contentId: postId or commentId
        contentType: POST or COMMENT
        boardCategory: DAILY_ACT
        boardCategoryDisplayName: 분석자료
        boardGroup: ACTION
        stockCode: "145020"
        stockName: 휴젤
        likeCount: 1
        commentCount: 1
        replyCount: 1
        viewCount: 1
        createdAt: 2023-08-10T08:22:44.548Z
        updatedAt: 2023-08-10T08:22:44.548Z
      properties:
        reportId:
          format: int64
          type: integer
        title:
          type: string
        contentId:
          format: int64
          type: integer
        contentType:
          type: string
        boardCategoryName:
          type: string
        boardCategoryDisplayName:
          type: string
        boardGroupName:
          type: string
        stockCode:
          type: string
        stockName:
          type: string
        reportStatus:
          type: string
        likeCount:
          format: int64
          type: integer
        commentCount:
          format: int64
          type: integer
        replyCount:
          format: int64
          type: integer
        viewCount:
          format: int64
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    ReportResponse:
      example:
        reportId: reportId
        contentId: postId or commentId
        contentType: POST or COMMENT
        reportStatus: PROCESSING
        reason: 신고 내용 text
        createdAt: 2023-08-10T08:22:44.548Z
        updatedAt: 2023-08-10T08:22:44.548Z
        historyList: []
      properties:
        reportId:
          format: int64
          type: integer
        contentId:
          format: int64
          type: integer
        userId:
          format: int64
          type: integer
        nickname:
          type: string
        contentType:
          type: string
        reportStatus:
          type: string
        reason:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        reportHistoryList:
          items:
            $ref: '#/components/schemas/ReportHistoryResponse'
          type: array
      type: object
    ReportHistoryResponse:
      example:
        userId: 신고처리자 아이디
        contentId: postId or commentId
        reportStatus: PROCESSING
        result: 신고 결과 text
        createdAt: 2023-08-10T08:22:44.548Z
        updatedAt: 2023-08-10T08:22:44.548Z
      properties:
        id:
          format: int64
          type: integer
        userId:
          format: int64
          type: integer
        reportStatus:
          type: string
        result:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    ReportDetailResponse:
      example:
        post:
          activeStartDate: 2000-01-23T04:56:07.000+00:00
          isPush: false
          polls:
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          digitalProxy:
            createdAt: 2000-01-23T04:56:07.000+00:00
            templateRole: templateRole
            templateName: templateName
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            id: 1
            templateId: templateId
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          likeCount: 1
          poll:
            voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          title: title
          isActive: true
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          thumbnailImageUrl: thumbnailImageUrl
          reported: true
          id: 1
          viewCount: 5
          stock:
            code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          activeEndDate: 2000-01-23T04:56:07.000+00:00
          boardGroup: boardGroup
          digitalDocument:
            id: digitalDocumentId
            answerStatus: SAVE or COMPLETE
            digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
            joinUserCount: 전자문서 참여자수
            shareholdingRatio: 지분율
            targetStartDate: 전자문서 시작일자
            targetEndDate: 전자문서 종료일자
            user: 전자문서 위임인 정보
            stock: 전자문서 위임인 주식정보
            acceptUser: 전자문서 수임인 정보
            items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
            attachOptions: 전자문서 첨부 옵션
            digitalDocumentDownload: 전자문서 다운로드 정보
          updatedAt: 2000-01-23T04:56:07.000+00:00
          isPinned: false
          boardCategory:
            name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
          isExclusiveToHolders: false
          postImageList:
          - imageId: 9
            imageUrl: imageUrl
          - imageId: 9
            imageUrl: imageUrl
          isNew: true
          isNotification: true
          userId: 7
          commentCount: 4
          isAuthorAdmin: true
          deletedAt: 2000-01-23T04:56:07.000+00:00
          holderListReadAndCopyDigitalDocument:
            digitalDocumentId: 1
            fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
            userId: 1
          deleted: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          boardId: 6
          status: null
        report:
          reportId: reportId
          contentId: postId or commentId
          contentType: POST or COMMENT
          reportStatus: PROCESSING
          reason: 신고 내용 text
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
          historyList: []
        comment:
          replyCommentCount: 5
          likeCount: 1
          userId: 6
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          reported: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          id: 0
          replyComments:
          - null
          - null
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        reply:
        - replyCommentCount: 5
          likeCount: 1
          userId: 6
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          reported: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          id: 0
          replyComments:
          - null
          - null
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - replyCommentCount: 5
          likeCount: 1
          userId: 6
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          reported: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          id: 0
          replyComments:
          - null
          - null
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        post:
          $ref: '#/components/schemas/PostResponse'
        comment:
          $ref: '#/components/schemas/CommentResponse'
        reply:
          items:
            $ref: '#/components/schemas/CommentResponse'
          type: array
        report:
          $ref: '#/components/schemas/ReportResponse'
      type: object
    CreateStockGroupRequest:
      example:
        name: 종목그룹명
        description: 종목그룹 설명
        stockCodes:
        - "145020"
        - "145021"
      properties:
        name:
          description: Name of the stock group is mandatory
          nullable: false
          type: string
          x-field-extra-annotation: |
            @Size(min = 2, max = 255, message = "종목그룹명을 확인해주세요.")
            @NotBlank(message = "종목그룹명을 확인해주세요.")
        description:
          description: Description of the stock group is optional
          type: string
        stockCodes:
          description: Stock codes of the stock group is optional
          items:
            type: string
          type: array
      type: object
    UpdateStockGroupRequest:
      example:
        name: 종목그룹명
        description: 종목그룹 설명
        stockCodes:
        - "145020"
        - "145021"
      properties:
        name:
          description: Name of the stock group is optional
          type: string
        description:
          description: Description of the stock group is optional
          type: string
        stockCodes:
          description: Stock codes of the stock group is optional
          items:
            type: string
          type: array
      type: object
    StockGroupResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: 0
        status: null
        stockCount: 6
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        stockCount:
          nullable: true
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          type: string
      type: object
    SimpleStockGroupResponse:
      example:
        name: name
        id: 0
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    CmsCommonsResponse:
      example:
        boardGroups:
        - displayName: displayName
          name: name
          categories:
          - name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
          - name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
        - displayName: displayName
          name: name
          categories:
          - name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
          - name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
        stockGroups:
        - name: name
          id: 0
        - name: name
          id: 0
        stocks:
        - code: code
          name: name
          standardCode: standardCode
        - code: code
          name: name
          standardCode: standardCode
      properties:
        stocks:
          items:
            $ref: '#/components/schemas/SimpleStockResponse'
          type: array
        stockGroups:
          items:
            $ref: '#/components/schemas/SimpleStockGroupResponse'
          type: array
        boardGroups:
          items:
            $ref: '#/components/schemas/SimpleBoardGroupResponse'
          type: array
      type: object
    StockGroupDetailsResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: 0
        stocks:
        - code: code
          name: name
          standardCode: standardCode
        - code: code
          name: name
          standardCode: standardCode
        status: null
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          type: string
        stocks:
          items:
            $ref: '#/components/schemas/SimpleStockResponse'
          type: array
      type: object
    StockDetailsResponse:
      example:
        solidarityLeaderApplicants:
        - phoneNumber: phoneNumber
          name: name
          nickname: nickname
          commentsForStockHolder: commentsForStockHolder
          id: 0
          individualStockCountLabel: individualStockCountLabel
          solidarityApplicantId: 6
          profileImageUrl: profileImageUrl
        - phoneNumber: phoneNumber
          name: name
          nickname: nickname
          commentsForStockHolder: commentsForStockHolder
          id: 0
          individualStockCountLabel: individualStockCountLabel
          solidarityApplicantId: 6
          profileImageUrl: profileImageUrl
        solidarityLeader:
          id: "1"
          name: 이동훈
          email: yanggun7201@gmail.com
          birthDate: 1999-08-07T12:00:00.000Z
          phoneNumber: "01055556666"
          gender: M
          nickname: null
          status: ACTIVE
          message: 안녕하세요. 잘 부탁합니다.
          solidarityId: 124
          corporateNo: 법인번호
        solidarity:
          stake: 1.4658129
          requiredMemberCount: 5
          code: code
          representativePhoneNumber: (02) 555-6666
          minThresholdMemberCount: 33861
          memberCount: 6
          name: name
          id: 0
          status: null
        todayDelta:
          items:
          - title: title
            value: value
            variation:
              color: '#FF0000'
              text: text
          - title: title
            value: value
            variation:
              color: '#FF0000'
              text: text
          descriptionLabel: "최종 업데이트(전일대비): 2023-08-23 21:49"
        acceptUser:
          phoneNumber: phoneNumber
          name: name
          corporateNo: corporateNo
          id: 0
          birthDate: 2000-01-23T04:56:07.000+00:00
      properties:
        solidarity:
          $ref: '#/components/schemas/SolidarityResponse'
        todayDelta:
          $ref: '#/components/schemas/DashboardResponse'
        solidarityLeader:
          $ref: '#/components/schemas/SolidarityLeaderResponse'
        acceptUser:
          $ref: '#/components/schemas/DigitalDocumentAcceptUserResponse'
        solidarityLeaderApplicants:
          items:
            $ref: '#/components/schemas/SolidarityLeaderApplicantResponse'
          type: array
      type: object
    PushDetailsResponse:
      example:
        id: 1
        title: 푸시 제목
        content: 푸시 내용
        linkUrl: /stock/000990/board/action/post/1
        linkType: LINK or NOTIFICATION or MAIN_HOME or NEWS_HOME or STOCK_HOME or
          NONE
        stockTargetType: ALL or STOCK or STOCK_GROUP
        sendType: SCHEDULE or IMMEDIATELY
        sentStatus: READY or PROCESSING or COMPLETE or FAIL
        stockCode: "145020"
        stockName: 에코프로
        stockGroupId: 14
        stockGroupName: 에코프로 종목그룹
        postId: 1 or null
        result: 발송결과 메시지 OR 에러 메시지
        targetDatetime: 2023-08-10T08:22:44.548Z
        sentStartDatetime: 2023-08-10T08:22:44.548Z
        sentEmdDatetime: 2023-08-10T08:22:44.548Z
        createdAt: 2023-08-10T08:22:44.548Z
        updatedAt: 2023-08-10T08:22:44.548Z
        user:
          name: 이름
          nickname: 닉네임
      properties:
        id:
          format: int64
          type: integer
        user:
          $ref: '#/components/schemas/UserResponse'
        title:
          type: string
        content:
          type: string
        linkType:
          type: string
        stockTargetType:
          type: string
        linkUrl:
          type: string
        stockCode:
          nullable: true
          type: string
        stockName:
          nullable: true
          type: string
        stockGroupId:
          format: int64
          type: integer
        stockGroupName:
          nullable: true
          type: string
        postId:
          format: int64
          type: integer
        sendType:
          type: string
        sendStatus:
          type: string
        topic:
          nullable: true
          type: string
        result:
          type: string
        targetDatetime:
          format: date-time
          type: string
        sentStartDatetime:
          format: date-time
          nullable: true
          type: string
        sentEndDatetime:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    PopupDetailsResponse:
      example:
        id: 1
        title: 팝업 제목
        content: 팝업 내용
        targetStartDatetime: 2023-08-10T08:22:44.548Z
        targetEndDatetime: 2023-08-10T08:22:44.548Z
        popupStatus: READY / PROCESSING / COMPLETE
        linkType: LINK / NOTIFICATION / MAIN_HOME / NEWS_HOME / STOCK_HOME / NONE
        linkTitle: 링크 타이틀
        linkUrl: /stock/000990/board/active/post/1 or /globalboard or null
        displayTargetType: MAIN_HOME or NEWS_HOME or STOCK_HOME
        stockCode: "145020"
        stockName: 종목명
        stockGroupId: 14
        stockGroupName: 종목 그룹명
        stockTargetType: ALL / STOCK / STOCK_GROUP
        createdAt: 2023-08-10T08:22:44.548Z
        updatedAt: 2023-08-10T08:22:44.548Z
        postId: Post ID
      properties:
        id:
          format: int64
          type: integer
        title:
          type: string
        content:
          type: string
        targetStartDatetime:
          format: date-time
          type: string
        targetEndDatetime:
          format: date-time
          type: string
        popupStatus:
          type: string
        linkType:
          type: string
        linkTitle:
          type: string
        linkUrl:
          description: linkUrl should be null when linkType is NONE or NOTIFICATION
          type: string
        displayTargetType:
          type: string
        stockCode:
          nullable: true
          type: string
        stockName:
          nullable: true
          type: string
        stockGroupId:
          format: int64
          type: integer
        stockGroupName:
          nullable: true
          type: string
        stockTargetType:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        postId:
          format: int64
          type: integer
      type: object
    UserPushAgreementItem:
      example:
        itemType: ALL / SUB
        title: 푸시 알림 받기(전체)
        agreementTypes:
        - ACT_NOTICE
        - ACT_NOTICE
        value: true
      properties:
        title:
          description: 화면에 표시될 토글의 이름
          example: 푸시 알림 받기(전체)
          type: string
        agreementTypes:
          description: "푸시 전송 타입. 베스트 진입, 새 댓글 등"
          items:
            example: ACT_NOTICE
            type: string
          type: array
        value:
          description: 유저 수신 동의 여부
          example: true
          nullable: false
          type: boolean
        itemType:
          description: 전체 ON/OFF 여부인지 아니면 개별 그룹에 대한 ON/OFF 여부인지
          example: ALL / SUB
          type: string
      type: object
    CreatePushRequest:
      example:
        title: 푸시 제목
        content: 푸시 내용
        linkType: LINK or NOTIFICATION or MAIN_HOME or NEWS_HOME or STOCK_HOME or
          NONE
        stockTargetType: ALL or STOCK or STOCK_GROUP
        sendType: SCHEDULE or IMMEDIATELY
        stockCode: 145020 or null
        stockGroupId: 14 or null
        postId: 1 or null
        targetDatetime: 2023-08-10T08:22:44.548Z
      properties:
        title:
          default: 액트
          description: Title of the push is mandatory
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "제목을 확인해주세요.")
        content:
          description: Content of the post is mandatory
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "내용을 확인해주세요.")
        stockCode:
          description: Stock code of the push
          type: string
        stockGroupId:
          description: Stock group id of the push
          format: int64
          type: integer
        postId:
          description: postId of where to link to
          format: int64
          type: integer
        linkType:
          default: NONE
          description: where should it link to when the push notification is tapped
          type: string
        stockTargetType:
          description: Send target. ALL or STOCK or STOCK_GROUP
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "타겟타입을 확인해주세요.")
        sendType:
          description: Send type. SCHEDULE or IMMEDIATELY
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "발송타입을 확인해주세요.")
        targetDatetime:
          description: Send target datetime for SCHEDULE type
          format: date-time
          nullable: true
          type: string
      type: object
    CreateOrUpdateTestStockRequest:
      example:
        solidarityLeader:
          name: name
          birthDate: birthDate
        users:
        - name: name
          birthDate: birthDate
        - name: name
          birthDate: birthDate
      properties:
        solidarityLeader:
          $ref: '#/components/schemas/JsonTestStockUser'
        users:
          items:
            $ref: '#/components/schemas/JsonTestStockUser'
          type: array
      type: object
    AddDummyStockToUserRequest:
      example:
        stockReferenceDateId: 0
        stockCode: stockCode
      properties:
        stockCode:
          description: 종목 코드
          type: string
        stockReferenceDateId:
          description: 기준일 정보 아이디
          format: int64
          type: integer
      type: object
    DeleteDummyStockFromUserRequest:
      example:
        stockCode: stockCode
      properties:
        stockCode:
          description: 종목 코드
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "종목 코드를 확인해주세요.")
      type: object
    JsonTestStockUser:
      example:
        name: name
        birthDate: birthDate
      properties:
        name:
          description: User name
          type: string
          x-field-extra-annotation: |
            @Size(min = 1, max = 255, message = "이름을 확인하세요.")
        birthDate:
          type: string
          x-field-extra-annotation: |
            @Size(min = 8, max = 8, message = "생년월일을 8자리 ''YYYYMMDD'' 형식으로 입력해 주세요.")
            @IsBirthDate(message = "생년월일을 8자리 ''YYYYMMDD'' 형식으로 입력해 주세요.")
      type: object
    CreateStockReferenceDateRequest:
      example:
        referenceDate: 2023-09-24
      properties:
        referenceDate:
          description: stock reference date
          format: date
          nullable: true
          type: string
      type: object
    CreateStopWordRequest:
      example:
        word: 바보
      properties:
        word:
          description: stop word
          nullable: false
          type: string
          x-field-extra-annotation: |
            @Size(min = 1, max = 255, message = "금칙어를 확인해주세요.")
            @NotBlank(message = "금칙어를 확인해주세요.")
      type: object
    UpdateStopWordRequest:
      example:
        beforeStatus: ACTIVE
        afterStatus: INACTIVE_BY_ADMIN
      properties:
        beforeStatus:
          description: ACTIVE or INACTIVE_BY_ADMIN
          nullable: false
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "상태를 확인해주세요.")
        afterStatus:
          description: ACTIVE or INACTIVE_BY_ADMIN
          nullable: false
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "상태를 확인해주세요.")
      type: object
    StopWordDataResponse:
      example:
        data:
          id: 1
          word: 바보
          status: ACTIVE
          createdAt: 2024-04-11T08:22:44.548Z
          updatedAt: 2024-04-11T08:22:44.548Z
      properties:
        data:
          $ref: '#/components/schemas/StopWordResponse'
      type: object
    StopWordResponse:
      example:
        id: 1
        word: 바보
        status: ACTIVE
        createdAt: 2024-04-11T08:22:44.548Z
        updatedAt: 2024-04-11T08:22:44.548Z
      properties:
        id:
          format: int64
          type: integer
        word:
          description: Stock code of the stock reference date
          type: string
        status:
          $ref: '#/components/schemas/Status'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    StockReferenceDateResponse:
      example:
        id: 1
        stockCode: "145020"
        referenceDate: 2023-08-10
        createdAt: 2023-08-10T08:22:44.548Z
        updatedAt: 2023-08-10T08:22:44.548Z
      properties:
        id:
          format: int64
          type: integer
        stockCode:
          description: Stock code of the stock reference date
          type: string
        referenceDate:
          description: stock reference date
          format: date
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    UserStockResponse:
      example:
        code: "145020"
        name: 종목명
        quantity: 주식수
        referenceDate: 2023-08-10
        registerDate: 2023-08-10
      properties:
        code:
          type: string
        name:
          type: string
        quantity:
          format: int64
          type: integer
        referenceDate:
          format: date
          type: string
        registerDate:
          format: date
          type: string
      type: object
    UserDummyStockResponse:
      example:
        code: "145020"
        name: 종목명
        quantity: 주식수
        referenceDate: 2023-08-10
        registerDate: 2023-08-10
      properties:
        code:
          type: string
        name:
          type: string
        quantity:
          format: int64
          type: integer
        referenceDate:
          format: date
          type: string
        registerDate:
          format: date
          type: string
      type: object
    BlockedUserResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        blockedUserId: 6
        nickname: nickname
        id: 0
        leadingSolidarityStockNames:
        - leadingSolidarityStockNames
        - leadingSolidarityStockNames
        profileImageUrl: profileImageUrl
        isSolidarityLeader: true
      properties:
        id:
          format: int64
          type: integer
        blockedUserId:
          format: int64
          type: integer
        nickname:
          type: string
        profileImageUrl:
          type: string
        isSolidarityLeader:
          type: boolean
        leadingSolidarityStockNames:
          items:
            description: List of stocks where the user is a leader of the solidarity.
            type: string
          type: array
        createdAt:
          format: date-time
          type: string
      type: object
    StockStatisticsResponse:
      example:
        value: 1000
        key: "2023-10-01, 2023-10"
      properties:
        key:
          description: "년월, 년월일"
          example: "2023-10-01, 2023-10"
          type: string
        value:
          description: "주식수, 주주수, 시가액, 지분율"
          example: 1000
          format: double
          type: number
      type: object
    PostDigitalDocumentResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: 0
        title: title
        stock:
          code: 종목코드
          name: 종목명
          totalIssuedQuantity: 상장주식수
          representativePhoneNumber: (02) 555-6666
          memberCount: 주주수
          stake: 지분율
        content: content
        status: null
        digitalDocument:
          id: digitalDocumentId
          answerStatus: SAVE or COMPLETE
          digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
          joinUserCount: 전자문서 참여자수
          shareholdingRatio: 지분율
          targetStartDate: 전자문서 시작일자
          targetEndDate: 전자문서 종료일자
          user: 전자문서 위임인 정보
          stock: 전자문서 위임인 주식정보
          acceptUser: 전자문서 수임인 정보
          items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
          attachOptions: 전자문서 첨부 옵션
          digitalDocumentDownload: 전자문서 다운로드 정보
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        title:
          type: string
        content:
          nullable: true
          type: string
          example: null
        status:
          $ref: '#/components/schemas/Status'
        stock:
          $ref: '#/components/schemas/StockResponse'
        digitalDocument:
          $ref: '#/components/schemas/UserDigitalDocumentResponse'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    StockRankingResponse:
      example:
        stake: stake
        stockName: stockName
        marketValue: marketValue
        stakeRank: 0
        marketValueRankDelta: 5
        marketValueRank: 1
        stakeRankDelta: 6
        stockCode: stockCode
      properties:
        stockCode:
          type: string
        stockName:
          type: string
        stake:
          type: string
        marketValue:
          type: string
        stakeRank:
          format: int32
          type: integer
        stakeRankDelta:
          format: int32
          type: integer
        marketValueRank:
          format: int32
          type: integer
        marketValueRankDelta:
          format: int32
          type: integer
      type: object
    StockRankingDataResponse:
      example:
        data:
        - stake: stake
          stockName: stockName
          marketValue: marketValue
          stakeRank: 0
          marketValueRankDelta: 5
          marketValueRank: 1
          stakeRankDelta: 6
          stockCode: stockCode
        - stake: stake
          stockName: stockName
          marketValue: marketValue
          stakeRank: 0
          marketValueRankDelta: 5
          marketValueRank: 1
          stakeRankDelta: 6
          stockCode: stockCode
      properties:
        data:
          items:
            $ref: '#/components/schemas/StockRankingResponse'
          type: array
      type: object
    SolidarityLeaderElectionProcedureResponse:
      example:
        durationDays: 6
        name: name
        displayOrder: 0
        description: description
        title: title
      properties:
        title:
          type: string
        description:
          type: string
        name:
          type: string
        displayOrder:
          format: int32
          type: integer
        durationDays:
          format: int32
          type: integer
      type: object
    SolidarityLeaderElectionApplyRequest:
      example:
        reasonsForApply: reasonsForApply
        commentsForStockHolder: commentsForStockHolder
        applyStatus: applyStatus
        knowledgeOfCompanyManagement: knowledgeOfCompanyManagement
        goals: goals
      properties:
        applyStatus:
          description: SAVE or COMPLETE
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "제출 상태를 확인해주세요.")
        reasonsForApply:
          description: 지원 동기
          type: string
        knowledgeOfCompanyManagement:
          description: 현기업 경영에 대한 지식
          type: string
        goals:
          description: 주주행동 운영 목표 및 간단한 계획
          type: string
        commentsForStockHolder:
          description: 주주에게 전하고 싶은 말
          type: string
      type: object
    SolidarityLeaderApplicationResponse:
      example:
        reasonsForApply: reasonsForApply
        solidarityLeaderApplicantId: 5
        solidarityLeaderElectionId: 1
        commentsForStockHolder: commentsForStockHolder
        stock:
          code: code
          name: name
          standardCode: standardCode
        user:
          phoneNumber: phoneNumber
          name: name
          nickname: nickname
          commentsForStockHolder: commentsForStockHolder
          id: 0
          individualStockCountLabel: individualStockCountLabel
          solidarityApplicantId: 6
          profileImageUrl: profileImageUrl
        applyStatus: applyStatus
        knowledgeOfCompanyManagement: knowledgeOfCompanyManagement
        goals: goals
      properties:
        user:
          $ref: '#/components/schemas/SolidarityLeaderApplicantResponse'
        stock:
          $ref: '#/components/schemas/SimpleStockResponse'
        solidarityLeaderElectionId:
          format: int64
          type: integer
        solidarityLeaderApplicantId:
          format: int64
          type: integer
        applyStatus:
          type: string
        reasonsForApply:
          type: string
        knowledgeOfCompanyManagement:
          type: string
        goals:
          type: string
        commentsForStockHolder:
          type: string
      type: object
    SolidarityLeaderElectionResponse:
      properties:
        winner:
          $ref: '#/components/schemas/LeaderElectionWinnerResponse'
        applicants:
          items:
            $ref: '#/components/schemas/SolidarityLeaderApplicantResponse'
          type: array
        electionDetail:
          $ref: '#/components/schemas/SolidarityLeaderElectionDetailResponse'
      type: object
    SolidarityLeaderElectionDetailResponse:
      example:
        solidarityLeaderElectionId: 0
        totalVoterCount: 6
        isVoted: true
        pollApplicants:
        - solidarityLeaderApplicantId: 1
          resolutionCondition:
            requiredStockQuantityRatio: requiredStockQuantityRatio
            unit: unit
            valueText: valueText
            color: color
            stockQuantity: 5
            label: label
          nickname: nickname
          finishedEarlyCondition:
            requiredStockQuantityRatio: requiredStockQuantityRatio
            unit: unit
            valueText: valueText
            color: color
            stockQuantity: 5
            label: label
          totalVoteStockQuantity: 5
          pollItemGroups:
          - stockQuantityPercentage: 3
            stockQuantity: 9
            isVoted: true
            voteCount: 7
            pollItemId: 2
            title: title
            type: type
          - stockQuantityPercentage: 3
            stockQuantity: 9
            isVoted: true
            voteCount: 7
            pollItemId: 2
            title: title
            type: type
        - solidarityLeaderApplicantId: 1
          resolutionCondition:
            requiredStockQuantityRatio: requiredStockQuantityRatio
            unit: unit
            valueText: valueText
            color: color
            stockQuantity: 5
            label: label
          nickname: nickname
          finishedEarlyCondition:
            requiredStockQuantityRatio: requiredStockQuantityRatio
            unit: unit
            valueText: valueText
            color: color
            stockQuantity: 5
            label: label
          totalVoteStockQuantity: 5
          pollItemGroups:
          - stockQuantityPercentage: 3
            stockQuantity: 9
            isVoted: true
            voteCount: 7
            pollItemId: 2
            title: title
            type: type
          - stockQuantityPercentage: 3
            stockQuantity: 9
            isVoted: true
            voteCount: 7
            pollItemId: 2
            title: title
            type: type
        status: status
      properties:
        solidarityLeaderElectionId:
          format: int64
          type: integer
        status:
          description: "투표 상태 \n- CANDIDATE_REGISTRATION_PENDING_PERIOD(\"후보자 등록 대\
            기\", 0)\n- CANDIDATE_REGISTRATION_PERIOD(\"후보자 등록 기간\", 1)\n- VOTE_PERIOD(\"\
            주주대표 투표\", 2)\n- FINISHED(\"투표마감\", 3)\n"
          type: string
        isVoted:
          description: 로그인한 유저의 투표 여부
          type: boolean
        totalVoterCount:
          type: integer
        pollApplicants:
          items:
            $ref: '#/components/schemas/SolidarityLeaderElectionApplicantDataResponse'
          type: array
      type: object
    SolidarityLeaderElectionApplicantDataResponse:
      example:
        solidarityLeaderApplicantId: 1
        resolutionCondition:
          requiredStockQuantityRatio: requiredStockQuantityRatio
          unit: unit
          valueText: valueText
          color: color
          stockQuantity: 5
          label: label
        nickname: nickname
        finishedEarlyCondition:
          requiredStockQuantityRatio: requiredStockQuantityRatio
          unit: unit
          valueText: valueText
          color: color
          stockQuantity: 5
          label: label
        totalVoteStockQuantity: 5
        pollItemGroups:
        - stockQuantityPercentage: 3
          stockQuantity: 9
          isVoted: true
          voteCount: 7
          pollItemId: 2
          title: title
          type: type
        - stockQuantityPercentage: 3
          stockQuantity: 9
          isVoted: true
          voteCount: 7
          pollItemId: 2
          title: title
          type: type
      properties:
        solidarityLeaderApplicantId:
          format: int64
          type: integer
        nickname:
          type: string
        totalVoteStockQuantity:
          format: int64
          type: integer
        resolutionCondition:
          $ref: '#/components/schemas/SolidarityLeaderElectionApplicantDataLabelResponse'
        finishedEarlyCondition:
          $ref: '#/components/schemas/SolidarityLeaderElectionApplicantDataLabelResponse'
        pollItemGroups:
          items:
            $ref: '#/components/schemas/SolidarityLeaderElectionVoteItemDataResponse'
          type: array
      type: object
    SolidarityLeaderElectionVoteItemDataResponse:
      example:
        stockQuantityPercentage: 3
        stockQuantity: 9
        isVoted: true
        voteCount: 7
        pollItemId: 2
        title: title
        type: type
      properties:
        pollItemId:
          format: int64
          type: integer
        isVoted:
          type: boolean
        title:
          description: 찬성/반대
          type: string
        type:
          description: APPROVAL/REJECTION
          type: string
        voteCount:
          type: integer
        stockQuantity:
          format: int64
          type: integer
        stockQuantityPercentage:
          format: int64
          type: integer
      type: object
    SolidarityLeaderElectionApplicantDataLabelResponse:
      example:
        requiredStockQuantityRatio: requiredStockQuantityRatio
        unit: unit
        valueText: valueText
        color: color
        stockQuantity: 5
        label: label
      properties:
        requiredStockQuantityRatio:
          type: string
        stockQuantity:
          format: int64
          type: integer
        label:
          type: string
        unit:
          type: string
        valueText:
          type: string
        color:
          type: string
      type: object
    SimpleStringResponse:
      description: Simple string response
      example:
        status: ok
      properties:
        status:
          description: Human readable simple message
          example: ok
          type: string
      type: object
    ErrorResponse:
      description: JSON payload with error message
      properties:
        statusCode:
          description: HTTP status code
          type: integer
        errorCode:
          description: Specific error code
          type: integer
        message:
          description: Human readable error message
          type: string
        errorData:
          additionalProperties:
            type: object
          description: Additional error data
          type: object
      type: object
    ShopCreateRequest:
      example:
        shopName: 상점명
        pricePlanId: 요금제 정보 아이디
        userShiftStartTime: 근무자 근무 시작 시간 09:00:00
        shopGroupId: 상점 그룹 아이디
        userListFile: 유저 목록 csv 파일
      properties:
        shopName:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "상점명을 확인해주세요.")
        pricePlanId:
          format: int64
          type: integer
        userShiftStartTime:
          format: time
          type: string
        shopGroupId:
          format: int64
          type: integer
        userListFile:
          format: binary
          type: string
      type: object
    CreateStockSearchTrendRequest:
      example:
        stockCode: stockCode
      properties:
        stockCode:
          type: string
          x-field-extra-annotation: '@NotBlank(message = "종목코드를 확인해주세요.")'
      type: object
    StockSearchRecommendationSectionDataResponse:
      example:
        data:
        - baseDateTime: baseDateTime
          title: title
          type: type
          stocks:
          - code: code
            name: name
            standardCode: standardCode
          - code: code
            name: name
            standardCode: standardCode
        - baseDateTime: baseDateTime
          title: title
          type: type
          stocks:
          - code: code
            name: name
            standardCode: standardCode
          - code: code
            name: name
            standardCode: standardCode
      properties:
        data:
          items:
            $ref: '#/components/schemas/StockSearchRecommendationSectionResponse'
          type: array
      type: object
    SendAuthRequest:
      example:
        firstNumberOfIdentification: firstNumberOfIdentification
        phoneNumber: phoneNumber
        gender: gender
        provider: provider
        name: name
        birthDate: birthDate
      properties:
        phoneNumber:
          type: string
          x-field-extra-annotation: |
            @IsPhoneNumber(message = "휴대폰 번호를 확인해주세요.")
        provider:
          description: "통신사 구분(SKT: 01, KT: 02, LGU+: 03, 알뚤폰 SKT: 04, 알뜰폰 KT: 05,\
            \ 알뜰폰 LGU+: 06)"
          type: string
          x-field-extra-annotation: |
            @Pattern(regexp = "^(01|02|03|04|05|06)$", message = "휴대폰 통신사를 확인해 주세요.")
        gender:
          type: string
          x-field-extra-annotation: |
            @IsGender(message = "성별을 확인해주세요.")
        birthDate:
          type: string
          x-field-extra-annotation: |
            @Size(min = 8, max = 8, message = "생년월일을 8자리 ''YYYYMMDD'' 형식으로 입력해 주세요.")
            @IsBirthDate(message = "생년월일을 8자리 ''YYYYMMDD'' 형식으로 입력해 주세요.")
        name:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "이름을 확인해주세요.")
        firstNumberOfIdentification:
          description: "주민번호 첫번째 자리 숫자 (1:1900년대생 남자,2:1900년대생 여자,3:2000년대생 남자,4:2000년\
            대생 여자,5:1900년대생 외국 남자,6:1900년대생 외국 여자,7:2000년대생 외국 남자,8:2000년대생 외국 여자)"
          type: string
          x-field-extra-annotation: |
            @Pattern(regexp = "^[1-8]$", message = "주민번호 첫번째 자리를 확인해 주세요.")
            @NotBlank(message = "주민번호 첫번째 자리를 확인해 주세요.")
      required:
      - birthDate
      - firstNumberOfIdentification
      - gender
      - name
      - phoneNumber
      - provider
      type: object
    SendAuthResponse:
      example:
        telComResCd: telComResCd
        txSeqNo: txSeqNo
        resultCode: resultCode
        resultMessage: resultMessage
      properties:
        resultCode:
          type: string
        resultMessage:
          type: string
        txSeqNo:
          type: string
        telComResCd:
          type: string
      type: object
    VerifyAuthCodeRequest:
      example:
        phoneNumber: "01044445555"
        provider: "04"
        gender: M
        birthDate: "19990308"
        firstNumberOfIdentification: "1"
        name: 이동훈
        code: "459097"
        txSeqNo: 230713090740KC024686
      properties:
        phoneNumber:
          type: string
          x-field-extra-annotation: |
            @IsPhoneNumber(message = "휴대폰 번호를 확인해주세요.")
        provider:
          description: "통신사 구분(SKT: 01, KT: 02, LGU+: 03, 알뚤폰 SKT: 04, 알뜰폰 KT: 05,\
            \ 알뜰폰 LGU+: 06)"
          type: string
          x-field-extra-annotation: |
            @Pattern(regexp = "^(01|02|03|04|05|06)$", message = "휴대폰 통신사를 확인해 주세요.")
        gender:
          type: string
          x-field-extra-annotation: |
            @IsGender(message = "성별을 확인해주세요.")
        birthDate:
          type: string
          x-field-extra-annotation: |
            @Size(min = 8, max = 8, message = "생년월일을 8자리 ''YYYYMMDD'' 형식으로 입력해 주세요.")
            @IsBirthDate(message = "생년월일을 8자리 ''YYYYMMDD'' 형식으로 입력해 주세요.")
        firstNumberOfIdentification:
          description: "주민번호 첫번째 자리 숫자 (1:1900년대생 남자,2:1900년대생 여자,3:2000년대생 남자,4:2000년\
            대생 여자,5:1900년대생 외국 남자,6:1900년대생 외국 여자,7:2000년대생 외국 남자,8:2000년대생 외국 여자)"
          type: string
          x-field-extra-annotation: |
            @Pattern(regexp = "^[1-8]$", message = "주민번호 첫번째 자리를 확인해 주세요.")
            @NotBlank(message = "주민번호 첫번째 자리를 확인해 주세요.")
        name:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "이름을 확인해주세요.")
        code:
          type: string
          x-field-extra-annotation: |
            @Size(min = 6, max = 6, message = "인증코드를 확인해주세요.")
        txSeqNo:
          type: string
          x-field-extra-annotation: |
            @Size(min = 20, max = 20, message = "본인인증 요청 트랜잭션 번호를 확인해주세요.")
      type: object
    AuthUserResponse:
      example:
        user:
          id: "1"
          name: 이동훈
          email: yanggun7201@gmail.com
          birthDate: 1999-08-07T12:00:00.000Z
          phoneNumber: "01055556666"
          gender: M
          isAgreeToReceiveMail: null
          lastPinNumberVerifiedAt: 2023-07-13T08:40:08.021Z
          nickname: null
          jobTitle: null
          address: null
          addressDetail: null
          zipcode: null
          totalAssetAmount: null
          profileImageUrl: null
          status: PROCESSING
          authType: PIN
          createdAt: 2023-07-13T08:39:14.490Z
          updatedAt: 2023-07-13T08:40:08.022Z
          deletedAt: null
          isPinNumberRegistered: true
          isSolidarityLeaderConfidentialAgreementSigned: true
          userBadgeVisibility:
          - label: 주식수
            isVisible: true
            name: isVisibilityStockQuantity
          - label: 자산
            isVisible: true
            name: isVisibilityTotalAsset
          lastNicknameUpdatedAt: null || 2023-07-18T13:52:45.028685Z
          roles:
          - USER
          - ADMIN
          - SUPER_ADMIN
          leadingSolidarityStockCodes:
          - "005930"
          - "555666"
          - "000660"
          holdingStocks:
          - code: "005930"
            name: 삼성전자
          - code: "000660"
            name: SK하이닉스
        token:
          accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjg5MTMyNzIwLCJleHAiOjE2ODk3Mzc1MjB9.Wo3iBvhSyf3ujtQiqA9BPyZ54tQuKL_bNRAN6qS3Ih8
          finpongAccessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjg5MTMyNzIwLCJleHAiOjE2ODk3Mzc1MjB9.Wo3iBvhSyf3ujtQiqA9BPyZ54tQuKL_bNRAN6qS3Ih8
      properties:
        token:
          $ref: '#/components/schemas/AuthUserResponse_token'
        user:
          $ref: '#/components/schemas/UserResponse'
      type: object
    ResendAuthRequest:
      example:
        phoneNumber: "01058625193"
        txSeqNo: 230712102659KC687332
      properties:
        phoneNumber:
          type: string
          x-field-extra-annotation: |
            @IsPhoneNumber(message = "휴대폰 번호를 확인해주세요.")
        txSeqNo:
          type: string
          x-field-extra-annotation: |
            @Size(min = 20, max = 20, message = "본인인증 요청 트랜잭션 번호를 확인해주세요.")
      type: object
    ResendAuthResponse:
      example:
        resultCode: B000
        resultMessage: 인증번호 재발송 성공
        resendCount: 2
        txSeqNo: 230712102659KC687332
      properties:
        resultCode:
          type: string
        resultMessage:
          type: string
        resendCount:
          type: integer
        txSeqNo:
          type: string
      type: object
    PinNumberRequest:
      example:
        pinNumber: "012345"
      properties:
        pinNumber:
          type: string
          x-field-extra-annotation: |
            @Pattern(regexp = "^[0-9]{6}$", message = "핀번호를 확인해주세요.")
            @Size(min = 6, max = 6, message = "핀번호를 확인해주세요.")
      type: object
    WebVerificationCodeGenerateRequest:
      example:
        authenticationReference: 9151f21f-43ae-43b4-92f3-f4af67cdf544
      properties:
        authenticationReference:
          format: uuid
          nullable: false
          type: string
          x-field-extra-annotation: |
            @NotNull(message = "인증참조키를 확인하세요.")
      type: object
    WebVerificationCodeGenerateResponse:
      example:
        expirationDateTime: 2024-06-10T00:00:00Z
        verificationCode: A123
      properties:
        verificationCode:
          example: A123
          type: string
        expirationDateTime:
          example: 2024-06-10T00:00:00Z
          format: date-time
          type: string
      type: object
    WebVerificationCodeRequest:
      example:
        authenticationReference: 9151f21f-43ae-43b4-92f3-f4af67cdf544
        verificationCode: A123
      properties:
        authenticationReference:
          format: uuid
          nullable: false
          type: string
          x-field-extra-annotation: |
            @NotNull(message = "인증참조키를 확인하세요.")
        verificationCode:
          example: A123
          nullable: false
          type: string
          x-field-extra-annotation: |
            @Pattern(regexp = "^[A-Z]{1}[0-9]{3}$", message = "개인안심번호를 확인해주세요.")
            @Size(min = 4, max = 4, message = "개인안심번호를 확인해주세요.")
      type: object
    WebVerificationCodeResponse:
      example:
        user:
          id: "1"
          name: 이동훈
          email: yanggun7201@gmail.com
          birthDate: 1999-08-07T12:00:00.000Z
          phoneNumber: "01055556666"
          gender: M
          isAgreeToReceiveMail: null
          lastPinNumberVerifiedAt: 2023-07-13T08:40:08.021Z
          nickname: null
          jobTitle: null
          address: null
          addressDetail: null
          zipcode: null
          totalAssetAmount: null
          profileImageUrl: null
          status: PROCESSING
          authType: PIN
          createdAt: 2023-07-13T08:39:14.490Z
          updatedAt: 2023-07-13T08:40:08.022Z
          deletedAt: null
          isPinNumberRegistered: true
          isSolidarityLeaderConfidentialAgreementSigned: true
          userBadgeVisibility:
          - label: 주식수
            isVisible: true
            name: isVisibilityStockQuantity
          - label: 자산
            isVisible: true
            name: isVisibilityTotalAsset
          lastNicknameUpdatedAt: null || 2023-07-18T13:52:45.028685Z
          roles:
          - USER
          - ADMIN
          - SUPER_ADMIN
          leadingSolidarityStockCodes:
          - "005930"
          - "555666"
          - "000660"
          holdingStocks:
          - code: "005930"
            name: 삼성전자
          - code: "000660"
            name: SK하이닉스
        status: VERIFIED or EXPIRED or WAITING
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjg5MTMyNzIwLCJleHAiOjE2ODk3Mzc1MjB9.Wo3iBvhSyf3ujtQiqA9BPyZ54tQuKL_bNRAN6qS3Ih8
      properties:
        status:
          $ref: '#/components/schemas/WebVerificationStatus'
        token:
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjg5MTMyNzIwLCJleHAiOjE2ODk3Mzc1MjB9.Wo3iBvhSyf3ujtQiqA9BPyZ54tQuKL_bNRAN6qS3Ih8
          type: string
        user:
          $ref: '#/components/schemas/UserResponse'
      type: object
    VerificationCodeRequest:
      example:
        verificationCode: A123
      properties:
        verificationCode:
          example: A123
          nullable: false
          type: string
          x-field-extra-annotation: |
            @Pattern(regexp = "^[A-Z]{1}[0-9]{3}$", message = "개인안심번호를 확인해주세요.")
            @Size(min = 4, max = 4, message = "개인안심번호를 확인해주세요.")
      type: object
    MySolidarityDataArrayResponse:
      example:
        data:
        - null
        - null
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/MySolidarityResponse'
          type: array
      type: object
    UnreadStockBoardGroupPostStatusResponse:
      example:
        unreadDebate: true
        unreadAnalysis: true
        unreadAction: true
      properties:
        unreadAnalysis:
          default: false
          example: true
          type: boolean
        unreadAction:
          default: false
          example: true
          type: boolean
        unreadDebate:
          default: false
          example: true
          type: boolean
      type: object
    SimpleStockResponse:
      example:
        code: code
        name: name
        standardCode: standardCode
      properties:
        code:
          type: string
        name:
          type: string
        standardCode:
          type: string
      type: object
    WithdrawSolidarityLeaderApplicantRequest:
      example:
        reason: reason
      properties:
        reason:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "지원 철회 사유를 입력하세요.")
      type: object
    CreatePrivateStockRequest:
      example:
        name: 종목명
        code: "000000"
        standardCode: KR7000000000
        stockType: 보통주
        closingPrice: 10000
        totalIssuedQuantity: 1000000
      properties:
        name:
          type: string
          x-field-extra-annotation: |
            @Size(min = 1, max = 255, message = "종목명을 확인해주세요.")
            @NotBlank(message = "종목명을 확인해주세요.")
        code:
          type: string
          x-field-extra-annotation: |
            @Size(min = 6, max = 6, message = "종목 코드는 6글자로 입력해주세요.")
            @NotBlank(message = "종목코드를 확인해주세요.")
        standardCode:
          type: string
          x-field-extra-annotation: |
            @Size(min = 12, max = 12, message = "표준 종목 코드는 12글자로 입력해주세요.")
            @NotBlank(message = "표준종목코드를 확인해주세요.")
        stockType:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "종목타입을 확인해주세요.")
            @Pattern(regexp = "보통주|액트주|신형우선주|종류주권|구형우선주", message = "종목타입을 확인해주세요.")
        closingPrice:
          type: integer
          x-field-extra-annotation: |
            @PositiveOrZero(message = "종가를 확인해주세요.")
        totalIssuedQuantity:
          format: int64
          type: integer
          x-field-extra-annotation: |
            @PositiveOrZero(message = "총주식 발행수를 확인해주세요.")
      type: object
    Status:
      enum:
      - ACTIVE
      - PROCESSING
      - INACTIVE_BY_USER
      - INACTIVE_BY_ADMIN
      - WITHDRAWAL_REQUESTED
      - DELETED_BY_USER
      - DELETED_BY_ADMIN
      - DELETED
      - SCHEDULE
      type: string
    Gender:
      enum:
      - M
      - F
      type: string
    AuthType:
      enum:
      - PIN
      - BIO
      type: string
    UserBadgeVisibilityResponse:
      example:
      - label: 주식수
        isVisible: true
        name: isVisibilityStockQuantity
      - label: 자산
        isVisible: true
        name: isVisibilityTotalAsset
      properties:
        label:
          type: string
        isVisible:
          type: boolean
        name:
          type: string
      type: object
    MySolidarityResponse:
      allOf:
      - $ref: '#/components/schemas/SolidarityResponse'
      - $ref: '#/components/schemas/MySolidarityResponse_allOf'
    SolidarityResponse:
      example:
        stake: 1.4658129
        requiredMemberCount: 5
        code: code
        representativePhoneNumber: (02) 555-6666
        minThresholdMemberCount: 33861
        memberCount: 6
        name: name
        id: 0
        status: null
      properties:
        status:
          $ref: '#/components/schemas/Status'
        id:
          description: Id of Solidarity
          format: int64
          type: integer
        name:
          description: Name of the Stock
          type: string
        code:
          description: Code of the solidarity
          type: string
        memberCount:
          description: Member count of the solidarity
          nullable: true
          type: integer
        stake:
          description: Stake of the solidarity
          format: float
          nullable: true
          type: number
        requiredMemberCount:
          description: Required member count for the solidarity
          nullable: true
          type: integer
        minThresholdMemberCount:
          example: 33861
          nullable: true
          type: integer
        representativePhoneNumber:
          description: 종목 담당자 전화번호
          example: (02) 555-6666
          type: string
      type: object
    NoticeLevel:
      enum:
      - INFO
      - WARNING
      - CRITICAL
      type: string
    StockSearchRecommendationSectionResponse:
      example:
        baseDateTime: baseDateTime
        title: title
        type: type
        stocks:
        - code: code
          name: name
          standardCode: standardCode
        - code: code
          name: name
          standardCode: standardCode
      properties:
        title:
          type: string
        baseDateTime:
          type: string
        type:
          description: SEARCH_TREND_STOCK or STAKE_RANKING_STOCK
          type: string
        stocks:
          items:
            $ref: '#/components/schemas/SimpleStockResponse'
          type: array
      type: object
    WebVerificationStatus:
      enum:
      - VERIFIED
      - EXPIRED
      - WAITING
      example: VERIFIED or EXPIRED or WAITING
      type: string
    LinkResponse:
      properties:
        title:
          type: string
        url:
          type: string
        color:
          type: string
      type: object
    uploadImage_request:
      properties:
        file:
          format: binary
          type: string
      type: object
    UnreadStockBoardGroupPostStatusDataResponse:
      example:
        unreadStockBoardGroupPostStatus:
          unreadDebate: true
          unreadAnalysis: true
          unreadAction: true
      properties:
        unreadStockBoardGroupPostStatus:
          $ref: '#/components/schemas/UnreadStockBoardGroupPostStatusResponse'
      title: UnreadStockBoardGroupPostStatusDataResponse
      type: object
    UpdateSolidarityLeaderMessageRequest:
      example:
        message: message
      properties:
        message:
          type: string
          x-field-extra-annotation: |
            @Size(min = 1, max = 255, message = "주주대표 한마디를 확인해주세요.")
            @NotBlank(message = "주주대표 한마디를 확인해주세요.")
      title: UpdateSolidarityLeaderMessageRequest
    HolderListReadAndCopyFormResponse:
      example:
        content: 주주명부 열람/등사 내용
      properties:
        content:
          example: 주주명부 열람/등사 내용
          type: string
      title: HolderListReadAndCopyFormResponse
      type: object
    GetUserNotificationDataResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          activeStartDate: 2000-01-23T04:56:07.000+00:00
          post:
            stockName: stockName
            boardCategory: boardCategory
            id: 1
            title: title
            stockCode: stockCode
            boardCategoryDisplayName: boardCategoryDisplayName
          linkUrl: linkUrl
          isRead: true
          id: 0
          postId: 6
          category: category
          type: type
        - createdAt: 2000-01-23T04:56:07.000+00:00
          activeStartDate: 2000-01-23T04:56:07.000+00:00
          post:
            stockName: stockName
            boardCategory: boardCategory
            id: 1
            title: title
            stockCode: stockCode
            boardCategoryDisplayName: boardCategoryDisplayName
          linkUrl: linkUrl
          isRead: true
          id: 0
          postId: 6
          category: category
          type: type
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/UserNotificationResponse'
          type: array
      title: GetUserNotificationDataResponse
      type: object
      x-implements:
      - ag.act.dto.Pageable
    CommentPagingResponse:
      example:
        data:
        - replyCommentCount: 5
          likeCount: 1
          userId: 6
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          reported: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          id: 0
          replyComments:
          - null
          - null
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - replyCommentCount: 5
          likeCount: 1
          userId: 6
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          reported: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          id: 0
          replyComments:
          - null
          - null
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/CommentResponse'
          type: array
      title: CommentPagingResponse
      type: object
    MyStockAuthenticationResponse:
      example:
        individualStockCountLabel: 개별주식수 라벨
        stock:
          code: code
          name: name
          standardCode: standardCode
      properties:
        individualStockCountLabel:
          example: 개별주식수 라벨
          type: string
        stock:
          $ref: '#/components/schemas/SimpleStockResponse'
      title: MyStockAuthenticationResponse
      type: object
    GetSolidarityLeaderConfidentialAgreementResponse:
      example:
        content: 비밀유지 서약서 내용
      properties:
        content:
          example: 비밀유지 서약서 내용
          type: string
      title: GetSolidarityLeaderConfidentialAgreementResponse
      type: object
    CreateSolidarityLeaderConfidentialAgreementRequest:
      example:
        stockCode: stockCode
      properties:
        stockCode:
          type: string
      title: CreateSolidarityLeaderConfidentialAgreementRequest
      type: object
    UserPushAgreementItemsDataResponse:
      example:
        data:
        - itemType: ALL / SUB
          title: 푸시 알림 받기(전체)
          agreementTypes:
          - ACT_NOTICE
          - ACT_NOTICE
          value: true
        - itemType: ALL / SUB
          title: 푸시 알림 받기(전체)
          agreementTypes:
          - ACT_NOTICE
          - ACT_NOTICE
          value: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserPushAgreementItem'
          type: array
      title: UserPushAgreementItemsDataResponse
      type: object
    UpdateMyNicknameRequest:
      example:
        nickname: Jonny
      properties:
        nickname:
          type: string
          x-field-extra-annotation: |
            @Size(min = 1, max = 255, message = "닉네임을 확인해주세요.")
            @NotBlank(message = "닉네임을 확인해주세요.")
      title: UpdateMyNicknameRequest
      type: object
    GetBlockedUserResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          blockedUserId: 6
          nickname: nickname
          id: 0
          leadingSolidarityStockNames:
          - leadingSolidarityStockNames
          - leadingSolidarityStockNames
          profileImageUrl: profileImageUrl
          isSolidarityLeader: true
        - createdAt: 2000-01-23T04:56:07.000+00:00
          blockedUserId: 6
          nickname: nickname
          id: 0
          leadingSolidarityStockNames:
          - leadingSolidarityStockNames
          - leadingSolidarityStockNames
          profileImageUrl: profileImageUrl
          isSolidarityLeader: true
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/BlockedUserResponse'
          type: array
      title: GetBlockedUserResponse
      type: object
    UpdateMyDataRequest:
      example:
        jsonData: x3f4d92D30F4D
      properties:
        jsonData:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "마이데이터를 확인해주세요.")
      title: UpdateMyDataRequest
      type: object
    GetAnonymousCountResponse:
      example:
        data:
          post:
            current: 0
            max: 6
          comment:
            current: 0
            max: 6
      properties:
        data:
          $ref: '#/components/schemas/AnonymousCountResponse'
      title: GetAnonymousCountResponse
      type: object
    SendEmailRequest:
      example:
        recipientEmail: 수신인 이메일 주소
      properties:
        recipientEmail:
          example: 수신인 이메일 주소
          type: string
          x-field-extra-annotation: |
            @Email(message = "형식에 맞지 않는 이메일입니다. ex) act123@naver.com", regexp="^[A-Za-z0-9][A-Za-z0-9+_.-]+@([A-Za-z0-9.-]+\\.[A-Za-z]{2,})$")
      title: SendEmailRequest
      type: object
    SenderEmailRequest:
      example:
        subject: subject
        senderEmail: senderEmail
        recipientEmail: recipientEmail
        content: content
      properties:
        senderEmail:
          description: 발신자 이메일 주소
          type: string
          x-field-extra-annotation: |
            @Email(message = "형식에 맞지 않는 이메일입니다. ex) act123@naver.com", regexp="^[A-Za-z0-9][A-Za-z0-9+_.-]+@([A-Za-z0-9.-]+\\.[A-Za-z]{2,})$")
        recipientEmail:
          description: 수신자 이메일 주소
          type: string
          x-field-extra-annotation: |
            @Email(message = "형식에 맞지 않는 이메일입니다. ex) act123@naver.com", regexp="^[A-Za-z0-9][A-Za-z0-9+_.-]+@([A-Za-z0-9.-]+\\.[A-Za-z]{2,})$")
        subject:
          description: 이메일 제목
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "이메일 제목을 확인해주세요.")
        content:
          description: 이메일 내용
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "이메일 내용을 확인해주세요.")
      title: SenderEmailRequest
      type: object
    ContactUsRequest:
      example:
        senderName: senderName
        phoneNumber: phoneNumber
        recaptchaResponse: recaptchaResponse
        senderEmail: senderEmail
        content: content
      properties:
        recaptchaResponse:
          description: reCAPTCHA 요청값
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "reCAPTCHA 요청값를 확인해주세요.")
        senderName:
          description: 이름
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "이름을 확인해주세요.")
        senderEmail:
          description: 이메일 주소
          type: string
          x-field-extra-annotation: |
            @Email(message = "형식에 맞지 않는 이메일입니다. ex) act123@naver.com", regexp="^[A-Za-z0-9][A-Za-z0-9+_.-]+@([A-Za-z0-9.-]+\\.[A-Za-z]{2,})$")
        phoneNumber:
          type: string
          x-field-extra-annotation: |
            @IsPhoneNumber(message = "휴대폰번호를 확인해주세요.")
        content:
          description: 문의내용
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "문의내용을 확인해주세요.")
      title: ContactUsRequest
      type: object
    SlackMessageRequest:
      example:
        channel: channel
        message: message
      properties:
        message:
          type: string
        channel:
          type: string
      title: SlackMessageRequest
    SolidarityLeaderElectionProceduresDataResponse:
      example:
        data:
        - durationDays: 6
          name: name
          displayOrder: 0
          description: description
          title: title
        - durationDays: 6
          name: name
          displayOrder: 0
          description: description
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/SolidarityLeaderElectionProcedureResponse'
          type: array
      title: SolidarityLeaderElectionProceduresDataResponse
      type: object
    GetSolidarityLeaderApplicantResponse:
      example:
        data:
          id: 1
          nickname: 양군짜앙
          profileImageUrl: https://profile-image-url
          individualStockCountLabel: 1억+
          commentsForStockHolder: 안녕하세요. 잘 이끌겠습니다. 뽑아주십쇼.
          solidarityApplicantId: 20
      properties:
        data:
          example:
            id: 1
            nickname: 양군짜앙
            profileImageUrl: https://profile-image-url
            individualStockCountLabel: 1억+
            commentsForStockHolder: 안녕하세요. 잘 이끌겠습니다. 뽑아주십쇼.
            solidarityApplicantId: 20
          items:
            $ref: '#/components/schemas/SolidarityLeaderApplicantResponse'
          type: array
      title: GetSolidarityLeaderApplicantResponse
      type: object
    DashboardStatisticsDataResponse_search:
      example:
        period: 0
        from: from
        to: to
      properties:
        period:
          type: integer
        from:
          description: 월별 2023-10 or 일별 2023-10-01
          type: string
        to:
          description: 월별 2023-10 or 일별 2023-10-01
          type: string
      type: object
    DashboardStatisticsDataResponse:
      example:
        search:
          period: 0
          from: from
          to: to
        data:
        - summary:
            upDownText: upDownText
            upDownPercent: upDownPercent
            upDown: upDown
          periodType: periodType
          type: type
          title: title
          value: 6.027456183070403
          items:
          - value: 1.4658129805029452
            key: key
          - value: 1.4658129805029452
            key: key
        - summary:
            upDownText: upDownText
            upDownPercent: upDownPercent
            upDown: upDown
          periodType: periodType
          type: type
          title: title
          value: 6.027456183070403
          items:
          - value: 1.4658129805029452
            key: key
          - value: 1.4658129805029452
            key: key
      properties:
        search:
          $ref: '#/components/schemas/DashboardStatisticsDataResponse_search'
        data:
          items:
            $ref: '#/components/schemas/DashboardStatisticsResponse'
          type: array
      title: DashboardStatisticsDataResponse
      type: object
    DashboardStatisticsGenderDataResponse:
      example:
        search:
          period: 0
          from: from
          to: to
        data:
          total: 0
          periodType: periodType
          type: type
          title: title
          female:
            upDownText: upDownText
            upDownPercent: upDownPercent
            title: title
            upDown: upDown
            value: 6
            percent: percent
          male:
            upDownText: upDownText
            upDownPercent: upDownPercent
            title: title
            upDown: upDown
            value: 6
            percent: percent
      properties:
        search:
          $ref: '#/components/schemas/DashboardStatisticsDataResponse_search'
        data:
          $ref: '#/components/schemas/DashboardGenderStatisticsResponse'
      title: DashboardStatisticsGenderDataResponse
      type: object
    DashboardStatisticsAgeDataResponse:
      example:
        search:
          period: 0
          from: from
          to: to
        data:
          total: 0
          periodType: periodType
          age10:
            upDownText: upDownText
            upDownPercent: upDownPercent
            title: title
            upDown: upDown
            value: 6
            percent: percent
          age20:
            upDownText: upDownText
            upDownPercent: upDownPercent
            title: title
            upDown: upDown
            value: 6
            percent: percent
          age30:
            upDownText: upDownText
            upDownPercent: upDownPercent
            title: title
            upDown: upDown
            value: 6
            percent: percent
          type: type
          title: title
          age40:
            upDownText: upDownText
            upDownPercent: upDownPercent
            title: title
            upDown: upDown
            value: 6
            percent: percent
          age50:
            upDownText: upDownText
            upDownPercent: upDownPercent
            title: title
            upDown: upDown
            value: 6
            percent: percent
          age60:
            upDownText: upDownText
            upDownPercent: upDownPercent
            title: title
            upDown: upDown
            value: 6
            percent: percent
          age70:
            upDownText: upDownText
            upDownPercent: upDownPercent
            title: title
            upDown: upDown
            value: 6
            percent: percent
      properties:
        search:
          $ref: '#/components/schemas/DashboardStatisticsDataResponse_search'
        data:
          $ref: '#/components/schemas/DashboardAgeStatisticsResponse'
      title: DashboardStatisticsAgeDataResponse
      type: object
    CreateSolidarityLeaderRequest:
      example:
        solidarityApplicantId: 0
      properties:
        solidarityApplicantId:
          format: int64
          type: integer
      title: CreateSolidarityLeaderRequest
      type: object
    DismissSolidarityLeaderRequest:
      example:
        solidarityLeaderId: 0
      properties:
        solidarityLeaderId:
          format: int64
          type: integer
      title: DismissSolidarityLeaderRequest
      type: object
    CreateSolidarityLeaderForCorporateUserRequest:
      example:
        userId: 0
      properties:
        userId:
          format: int64
          type: integer
      title: CreateSolidarityLeaderForCorporateUserRequest
      type: object
    DeleteSolidarityApplicantRequest:
      example:
        solidarityLeaderApplicantId: 0
      properties:
        solidarityLeaderApplicantId:
          format: int64
          type: integer
      title: DeleteSolidarityApplicantRequest
      type: object
    GetStockGroupsResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 0
          status: null
          stockCount: 6
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 0
          status: null
          stockCount: 6
          updatedAt: 2000-01-23T04:56:07.000+00:00
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/StockGroupResponse'
          type: array
      title: GetStockGroupsResponse
      type: object
    StockGroupDataResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 0
          status: null
          stockCount: 6
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/StockGroupResponse'
      title: StockGroupDataResponse
      type: object
    GetStockGroupDetailsDataResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 0
          stocks:
          - code: code
            name: name
            standardCode: standardCode
          - code: code
            name: name
            standardCode: standardCode
          status: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/StockGroupDetailsResponse'
      title: GetStockGroupDetailsDataResponse
      type: object
    GetStocksResponse:
      example:
        data:
        - code: 종목코드
          name: 종목명
          totalIssuedQuantity: 상장주식수
          representativePhoneNumber: (02) 555-6666
          memberCount: 주주수
          stake: 지분율
        - code: 종목코드
          name: 종목명
          totalIssuedQuantity: 상장주식수
          representativePhoneNumber: (02) 555-6666
          memberCount: 주주수
          stake: 지분율
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/StockResponse'
          type: array
      title: GetStocksResponse
      type: object
    GetStockDetailsDataResponse:
      example:
        data:
          solidarityLeaderApplicants:
          - phoneNumber: phoneNumber
            name: name
            nickname: nickname
            commentsForStockHolder: commentsForStockHolder
            id: 0
            individualStockCountLabel: individualStockCountLabel
            solidarityApplicantId: 6
            profileImageUrl: profileImageUrl
          - phoneNumber: phoneNumber
            name: name
            nickname: nickname
            commentsForStockHolder: commentsForStockHolder
            id: 0
            individualStockCountLabel: individualStockCountLabel
            solidarityApplicantId: 6
            profileImageUrl: profileImageUrl
          solidarityLeader:
            id: "1"
            name: 이동훈
            email: yanggun7201@gmail.com
            birthDate: 1999-08-07T12:00:00.000Z
            phoneNumber: "01055556666"
            gender: M
            nickname: null
            status: ACTIVE
            message: 안녕하세요. 잘 부탁합니다.
            solidarityId: 124
            corporateNo: 법인번호
          solidarity:
            stake: 1.4658129
            requiredMemberCount: 5
            code: code
            representativePhoneNumber: (02) 555-6666
            minThresholdMemberCount: 33861
            memberCount: 6
            name: name
            id: 0
            status: null
          todayDelta:
            items:
            - title: title
              value: value
              variation:
                color: '#FF0000'
                text: text
            - title: title
              value: value
              variation:
                color: '#FF0000'
                text: text
            descriptionLabel: "최종 업데이트(전일대비): 2023-08-23 21:49"
          acceptUser:
            phoneNumber: phoneNumber
            name: name
            corporateNo: corporateNo
            id: 0
            birthDate: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/StockDetailsResponse'
      title: GetStockDetailsDataResponse
      type: object
    CreateStockAcceptorUserRequest:
      example:
        userId: 0
      properties:
        userId:
          format: int64
          type: integer
      title: CreateStockAcceptorUserRequest
      type: object
    DeleteStockAcceptorUserRequest:
      example:
        userId: 0
      properties:
        userId:
          format: int64
          type: integer
      title: DeleteStockAcceptorUserRequest
      type: object
    GetStockStatisticsDataResponse:
      example:
        data:
        - value: 1000
          key: "2023-10-01, 2023-10"
        - value: 1000
          key: "2023-10-01, 2023-10"
      properties:
        data:
          items:
            $ref: '#/components/schemas/StockStatisticsResponse'
          type: array
      title: GetStockStatisticsDataResponse
      type: object
    GetReportResponse:
      example:
        data:
        - reportId: reportId
          title: Post Title
          contentId: postId or commentId
          contentType: POST or COMMENT
          boardCategory: DAILY_ACT
          boardCategoryDisplayName: 분석자료
          boardGroup: ACTION
          stockCode: "145020"
          stockName: 휴젤
          likeCount: 1
          commentCount: 1
          replyCount: 1
          viewCount: 1
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
        - reportId: reportId
          title: Post Title
          contentId: postId or commentId
          contentType: POST or COMMENT
          boardCategory: DAILY_ACT
          boardCategoryDisplayName: 분석자료
          boardGroup: ACTION
          stockCode: "145020"
          stockName: 휴젤
          likeCount: 1
          commentCount: 1
          replyCount: 1
          viewCount: 1
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/ReportListResponse'
          type: array
      title: GetReportResponse
      type: object
    updateReportStatus_request:
      properties:
        result:
          description: 판단이유 mandatory
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "처리 사유를 확인해주세요.")
        currentReportStatus:
          description: Current Status of the report is mandatory
          type: string
        changeReportStatus:
          description: Changing Status of the report is mandatory
          type: string
      type: object
    StockReferenceDateDataResponse:
      example:
        data:
          id: 1
          stockCode: "145020"
          referenceDate: 2023-08-10
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
      properties:
        data:
          $ref: '#/components/schemas/StockReferenceDateResponse'
      title: StockReferenceDateDataResponse
      type: object
    DigitalDocumentUserDetailsDataResponse:
      example:
        data:
        - null
        - null
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/DigitalDocumentUserDetailsResponse'
          type: array
      title: DigitalDocumentUserDetailsDataResponse
      type: object
    uploadImageAdmin_request:
      properties:
        file:
          format: binary
          type: string
        description:
          nullable: true
          type: string
      type: object
    GetPostDigitalDocumentDataResponse:
      example:
        data:
        - activeStartDate: 2000-01-23T04:56:07.000+00:00
          isPush: false
          polls:
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          digitalProxy:
            createdAt: 2000-01-23T04:56:07.000+00:00
            templateRole: templateRole
            templateName: templateName
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            id: 1
            templateId: templateId
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          likeCount: 1
          poll:
            voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          title: title
          isActive: true
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          thumbnailImageUrl: thumbnailImageUrl
          reported: true
          id: 1
          viewCount: 5
          stock:
            code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          activeEndDate: 2000-01-23T04:56:07.000+00:00
          boardGroup: boardGroup
          digitalDocument:
            id: digitalDocumentId
            answerStatus: SAVE or COMPLETE
            digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
            joinUserCount: 전자문서 참여자수
            shareholdingRatio: 지분율
            targetStartDate: 전자문서 시작일자
            targetEndDate: 전자문서 종료일자
            user: 전자문서 위임인 정보
            stock: 전자문서 위임인 주식정보
            acceptUser: 전자문서 수임인 정보
            items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
            attachOptions: 전자문서 첨부 옵션
            digitalDocumentDownload: 전자문서 다운로드 정보
          updatedAt: 2000-01-23T04:56:07.000+00:00
          isPinned: false
          boardCategory:
            name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
          isExclusiveToHolders: false
          postImageList:
          - imageId: 9
            imageUrl: imageUrl
          - imageId: 9
            imageUrl: imageUrl
          isNew: true
          isNotification: true
          userId: 7
          commentCount: 4
          isAuthorAdmin: true
          deletedAt: 2000-01-23T04:56:07.000+00:00
          holderListReadAndCopyDigitalDocument:
            digitalDocumentId: 1
            fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
            userId: 1
          deleted: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          boardId: 6
          status: null
        - activeStartDate: 2000-01-23T04:56:07.000+00:00
          isPush: false
          polls:
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          digitalProxy:
            createdAt: 2000-01-23T04:56:07.000+00:00
            templateRole: templateRole
            templateName: templateName
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            id: 1
            templateId: templateId
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          likeCount: 1
          poll:
            voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          title: title
          isActive: true
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          thumbnailImageUrl: thumbnailImageUrl
          reported: true
          id: 1
          viewCount: 5
          stock:
            code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          activeEndDate: 2000-01-23T04:56:07.000+00:00
          boardGroup: boardGroup
          digitalDocument:
            id: digitalDocumentId
            answerStatus: SAVE or COMPLETE
            digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
            joinUserCount: 전자문서 참여자수
            shareholdingRatio: 지분율
            targetStartDate: 전자문서 시작일자
            targetEndDate: 전자문서 종료일자
            user: 전자문서 위임인 정보
            stock: 전자문서 위임인 주식정보
            acceptUser: 전자문서 수임인 정보
            items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
            attachOptions: 전자문서 첨부 옵션
            digitalDocumentDownload: 전자문서 다운로드 정보
          updatedAt: 2000-01-23T04:56:07.000+00:00
          isPinned: false
          boardCategory:
            name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
          isExclusiveToHolders: false
          postImageList:
          - imageId: 9
            imageUrl: imageUrl
          - imageId: 9
            imageUrl: imageUrl
          isNew: true
          isNotification: true
          userId: 7
          commentCount: 4
          isAuthorAdmin: true
          deletedAt: 2000-01-23T04:56:07.000+00:00
          holderListReadAndCopyDigitalDocument:
            digitalDocumentId: 1
            fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
            userId: 1
          deleted: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          boardId: 6
          status: null
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/PostResponse'
          type: array
      title: GetPostDigitalDocumentDataResponse
      type: object
    GetUserResponse:
      example:
        data:
        - id: "1"
          name: 이동훈
          email: yanggun7201@gmail.com
          birthDate: 1999-08-07T12:00:00.000Z
          phoneNumber: "01055556666"
          gender: M
          isAgreeToReceiveMail: null
          lastPinNumberVerifiedAt: 2023-07-13T08:40:08.021Z
          nickname: null
          jobTitle: null
          address: null
          addressDetail: null
          zipcode: null
          totalAssetAmount: null
          profileImageUrl: null
          status: PROCESSING
          authType: PIN
          createdAt: 2023-07-13T08:39:14.490Z
          updatedAt: 2023-07-13T08:40:08.022Z
          deletedAt: null
          isPinNumberRegistered: true
          isSolidarityLeaderConfidentialAgreementSigned: true
          userBadgeVisibility:
          - label: 주식수
            isVisible: true
            name: isVisibilityStockQuantity
          - label: 자산
            isVisible: true
            name: isVisibilityTotalAsset
          lastNicknameUpdatedAt: null || 2023-07-18T13:52:45.028685Z
          roles:
          - USER
          - ADMIN
          - SUPER_ADMIN
          leadingSolidarityStockCodes:
          - "005930"
          - "555666"
          - "000660"
          holdingStocks:
          - code: "005930"
            name: 삼성전자
          - code: "000660"
            name: SK하이닉스
        - id: "1"
          name: 이동훈
          email: yanggun7201@gmail.com
          birthDate: 1999-08-07T12:00:00.000Z
          phoneNumber: "01055556666"
          gender: M
          isAgreeToReceiveMail: null
          lastPinNumberVerifiedAt: 2023-07-13T08:40:08.021Z
          nickname: null
          jobTitle: null
          address: null
          addressDetail: null
          zipcode: null
          totalAssetAmount: null
          profileImageUrl: null
          status: PROCESSING
          authType: PIN
          createdAt: 2023-07-13T08:39:14.490Z
          updatedAt: 2023-07-13T08:40:08.022Z
          deletedAt: null
          isPinNumberRegistered: true
          isSolidarityLeaderConfidentialAgreementSigned: true
          userBadgeVisibility:
          - label: 주식수
            isVisible: true
            name: isVisibilityStockQuantity
          - label: 자산
            isVisible: true
            name: isVisibilityTotalAsset
          lastNicknameUpdatedAt: null || 2023-07-18T13:52:45.028685Z
          roles:
          - USER
          - ADMIN
          - SUPER_ADMIN
          leadingSolidarityStockCodes:
          - "005930"
          - "555666"
          - "000660"
          holdingStocks:
          - code: "005930"
            name: 삼성전자
          - code: "000660"
            name: SK하이닉스
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
      title: GetUserResponse
      type: object
    AddRoleToUserRequest:
      example:
        roleType: roleType
      properties:
        roleType:
          description: Role type
          type: string
      title: AddRoleToUserRequest
      type: object
    EditUserNicknameRequest:
      example:
        nickname: nickname
      properties:
        nickname:
          description: User Nickname
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "닉네임을 확인해주세요.")
      title: EditUserNicknameRequest
      type: object
    GetUserStockResponse:
      example:
        data:
        - code: "145020"
          name: 종목명
          quantity: 주식수
          referenceDate: 2023-08-10
          registerDate: 2023-08-10
        - code: "145020"
          name: 종목명
          quantity: 주식수
          referenceDate: 2023-08-10
          registerDate: 2023-08-10
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/UserStockResponse'
          type: array
      title: GetUserStockResponse
      type: object
    GetUserDummyStockResponse:
      example:
        data:
        - code: "145020"
          name: 종목명
          quantity: 주식수
          referenceDate: 2023-08-10
          registerDate: 2023-08-10
        - code: "145020"
          name: 종목명
          quantity: 주식수
          referenceDate: 2023-08-10
          registerDate: 2023-08-10
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/UserDummyStockResponse'
          type: array
      title: GetUserDummyStockResponse
      type: object
    CmsLoginRequest:
      example:
        password: password
        email: email
      properties:
        email:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "아이디를 확인해주세요.")
        password:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "비밀번호를 확인해주세요.")
      title: CmsLoginRequest
      type: object
    ChangePasswordRequest:
      example:
        password: password
        confirmPassword: confirmPassword
        currentPassword: currentPassword
      properties:
        currentPassword:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "기존 비밀번호를 확인해주세요.")
        password:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "비밀번호를 확인해주세요.")
        confirmPassword:
          type: string
          x-field-extra-annotation: |
            @NotBlank(message = "컨펌 비밀번호를 확인해주세요.")
      title: ChangePasswordRequest
      type: object
    GetPushDataResponse:
      example:
        data:
        - id: 1
          title: 푸시 제목
          content: 푸시 내용
          linkUrl: /stock/000990/board/action/post/1
          linkType: LINK or NOTIFICATION or MAIN_HOME or NEWS_HOME or STOCK_HOME or
            NONE
          stockTargetType: ALL or STOCK or STOCK_GROUP
          sendType: SCHEDULE or IMMEDIATELY
          sentStatus: READY or PROCESSING or COMPLETE or FAIL
          stockCode: "145020"
          stockName: 에코프로
          stockGroupId: 14
          stockGroupName: 에코프로 종목그룹
          postId: 1 or null
          result: 발송결과 메시지 OR 에러 메시지
          targetDatetime: 2023-08-10T08:22:44.548Z
          sentStartDatetime: 2023-08-10T08:22:44.548Z
          sentEmdDatetime: 2023-08-10T08:22:44.548Z
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
          user:
            name: 이름
            nickname: 닉네임
        - id: 1
          title: 푸시 제목
          content: 푸시 내용
          linkUrl: /stock/000990/board/action/post/1
          linkType: LINK or NOTIFICATION or MAIN_HOME or NEWS_HOME or STOCK_HOME or
            NONE
          stockTargetType: ALL or STOCK or STOCK_GROUP
          sendType: SCHEDULE or IMMEDIATELY
          sentStatus: READY or PROCESSING or COMPLETE or FAIL
          stockCode: "145020"
          stockName: 에코프로
          stockGroupId: 14
          stockGroupName: 에코프로 종목그룹
          postId: 1 or null
          result: 발송결과 메시지 OR 에러 메시지
          targetDatetime: 2023-08-10T08:22:44.548Z
          sentStartDatetime: 2023-08-10T08:22:44.548Z
          sentEmdDatetime: 2023-08-10T08:22:44.548Z
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
          user:
            name: 이름
            nickname: 닉네임
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/PushDetailsResponse'
          type: array
      title: GetPushDataResponse
      type: object
    PushDetailsDataResponse:
      example:
        data:
          id: 1
          title: 푸시 제목
          content: 푸시 내용
          linkUrl: /stock/000990/board/action/post/1
          linkType: LINK or NOTIFICATION or MAIN_HOME or NEWS_HOME or STOCK_HOME or
            NONE
          stockTargetType: ALL or STOCK or STOCK_GROUP
          sendType: SCHEDULE or IMMEDIATELY
          sentStatus: READY or PROCESSING or COMPLETE or FAIL
          stockCode: "145020"
          stockName: 에코프로
          stockGroupId: 14
          stockGroupName: 에코프로 종목그룹
          postId: 1 or null
          result: 발송결과 메시지 OR 에러 메시지
          targetDatetime: 2023-08-10T08:22:44.548Z
          sentStartDatetime: 2023-08-10T08:22:44.548Z
          sentEmdDatetime: 2023-08-10T08:22:44.548Z
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
          user:
            name: 이름
            nickname: 닉네임
      properties:
        data:
          $ref: '#/components/schemas/PushDetailsResponse'
      title: PushDetailsDataResponse
      type: object
    GetPopupDataResponse:
      example:
        data:
        - id: 1
          title: 팝업 제목
          content: 팝업 내용
          targetStartDatetime: 2023-08-10T08:22:44.548Z
          targetEndDatetime: 2023-08-10T08:22:44.548Z
          popupStatus: READY / PROCESSING / COMPLETE
          linkType: LINK / NOTIFICATION / MAIN_HOME / NEWS_HOME / STOCK_HOME / NONE
          linkTitle: 링크 타이틀
          linkUrl: /stock/000990/board/active/post/1 or /globalboard or null
          displayTargetType: MAIN_HOME or NEWS_HOME or STOCK_HOME
          stockCode: "145020"
          stockName: 종목명
          stockGroupId: 14
          stockGroupName: 종목 그룹명
          stockTargetType: ALL / STOCK / STOCK_GROUP
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
          postId: Post ID
        - id: 1
          title: 팝업 제목
          content: 팝업 내용
          targetStartDatetime: 2023-08-10T08:22:44.548Z
          targetEndDatetime: 2023-08-10T08:22:44.548Z
          popupStatus: READY / PROCESSING / COMPLETE
          linkType: LINK / NOTIFICATION / MAIN_HOME / NEWS_HOME / STOCK_HOME / NONE
          linkTitle: 링크 타이틀
          linkUrl: /stock/000990/board/active/post/1 or /globalboard or null
          displayTargetType: MAIN_HOME or NEWS_HOME or STOCK_HOME
          stockCode: "145020"
          stockName: 종목명
          stockGroupId: 14
          stockGroupName: 종목 그룹명
          stockTargetType: ALL / STOCK / STOCK_GROUP
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
          postId: Post ID
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/PopupDetailsResponse'
          type: array
      title: GetPopupDataResponse
      type: object
    PopupDataResponse:
      example:
        data:
          id: 1
          title: 팝업 제목
          content: 팝업 내용
          targetStartDatetime: 2023-08-10T08:22:44.548Z
          targetEndDatetime: 2023-08-10T08:22:44.548Z
          popupStatus: READY / PROCESSING / COMPLETE
          linkType: LINK / NOTIFICATION / MAIN_HOME / NEWS_HOME / STOCK_HOME / NONE
          linkTitle: 링크 타이틀
          linkUrl: /stock/000990/board/active/post/1 or /globalboard or null
          displayTargetType: MAIN_HOME or NEWS_HOME or STOCK_HOME
          stockCode: "145020"
          stockName: 종목명
          stockGroupId: 14
          stockGroupName: 종목 그룹명
          stockTargetType: ALL / STOCK / STOCK_GROUP
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
          postId: Post ID
      properties:
        data:
          $ref: '#/components/schemas/PopupDetailsResponse'
      title: PopupDataResponse
      type: object
    PopupDetailsDataResponse:
      example:
        data:
          id: 1
          title: 팝업 제목
          content: 팝업 내용
          targetStartDatetime: 2023-08-10T08:22:44.548Z
          targetEndDatetime: 2023-08-10T08:22:44.548Z
          popupStatus: READY / PROCESSING / COMPLETE
          linkType: LINK / NOTIFICATION / MAIN_HOME / NEWS_HOME / STOCK_HOME / NONE
          linkTitle: 링크 타이틀
          linkUrl: /stock/000990/board/active/post/1 or /globalboard or null
          displayTargetType: MAIN_HOME or NEWS_HOME or STOCK_HOME
          stockCode: "145020"
          stockName: 종목명
          stockGroupId: 14
          stockGroupName: 종목 그룹명
          stockTargetType: ALL / STOCK / STOCK_GROUP
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
          postId: Post ID
      properties:
        data:
          $ref: '#/components/schemas/PopupDetailsResponse'
      title: PopupDetailsDataResponse
      type: object
    GetCorporateUserDataResponse:
      example:
        data:
        - id: ID
          corporateNo: 법인사업자번호
          corporateName: 법인명
          status: 상태
          leadingSolidarityStockCodes:
          - "005930"
          - "000930"
          createdAt: 2023-07-13T08:39:14.490Z
          updatedAt: 2023-07-13T08:40:08.022Z
          deletedAt: null
        - id: ID
          corporateNo: 법인사업자번호
          corporateName: 법인명
          status: 상태
          leadingSolidarityStockCodes:
          - "005930"
          - "000930"
          createdAt: 2023-07-13T08:39:14.490Z
          updatedAt: 2023-07-13T08:40:08.022Z
          deletedAt: null
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/CorporateUserDetailsResponse'
          type: array
      title: GetCorporateUserDataResponse
      type: object
    CorporateUserDataResponse:
      example:
        data:
          id: ID
          corporateNo: 법인사업자번호
          corporateName: 법인명
          status: 상태
          leadingSolidarityStockCodes:
          - "005930"
          - "000930"
          createdAt: 2023-07-13T08:39:14.490Z
          updatedAt: 2023-07-13T08:40:08.022Z
          deletedAt: null
      properties:
        data:
          $ref: '#/components/schemas/CorporateUserDetailsResponse'
      title: CorporateUserDataResponse
      type: object
    GetPostDigitalDocumentResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          id: 0
          title: title
          stock:
            code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          content: content
          status: null
          digitalDocument:
            id: digitalDocumentId
            answerStatus: SAVE or COMPLETE
            digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
            joinUserCount: 전자문서 참여자수
            shareholdingRatio: 지분율
            targetStartDate: 전자문서 시작일자
            targetEndDate: 전자문서 종료일자
            user: 전자문서 위임인 정보
            stock: 전자문서 위임인 주식정보
            acceptUser: 전자문서 수임인 정보
            items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
            attachOptions: 전자문서 첨부 옵션
            digitalDocumentDownload: 전자문서 다운로드 정보
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          id: 0
          title: title
          stock:
            code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          content: content
          status: null
          digitalDocument:
            id: digitalDocumentId
            answerStatus: SAVE or COMPLETE
            digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
            joinUserCount: 전자문서 참여자수
            shareholdingRatio: 지분율
            targetStartDate: 전자문서 시작일자
            targetEndDate: 전자문서 종료일자
            user: 전자문서 위임인 정보
            stock: 전자문서 위임인 주식정보
            acceptUser: 전자문서 수임인 정보
            items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
            attachOptions: 전자문서 첨부 옵션
            digitalDocumentDownload: 전자문서 다운로드 정보
          updatedAt: 2000-01-23T04:56:07.000+00:00
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/PostDigitalDocumentResponse'
          type: array
      title: GetPostDigitalDocumentResponse
      type: object
    GetCampaignsDataResponse:
      example:
        data:
        - id: 1
          title: 캠페인 제목
          sourcePostId: 1
          sourceStockGroupId: 1
          isPoll: false
          isDigitalDocument: false
          mappedStocksCount: 1
          joinUserCount: 1
          joinStockCount: 1
          status: ACTIVE
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
          deletedAt: null
          campaignDownload:
            id: 1
            requestUserId: 1
            zipFileStatus: Zip 파일 상태
            zipFilePath: Zip 파일 정보
            updatedAt: 2023-08-10T08:22:44.548Z
        - id: 1
          title: 캠페인 제목
          sourcePostId: 1
          sourceStockGroupId: 1
          isPoll: false
          isDigitalDocument: false
          mappedStocksCount: 1
          joinUserCount: 1
          joinStockCount: 1
          status: ACTIVE
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
          deletedAt: null
          campaignDownload:
            id: 1
            requestUserId: 1
            zipFileStatus: Zip 파일 상태
            zipFilePath: Zip 파일 정보
            updatedAt: 2023-08-10T08:22:44.548Z
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/CampaignResponse'
          type: array
      title: GetCampaignsDataResponse
      type: object
    CommentUpdateStatusRequest:
      example:
        status: DELETED_BY_ADMIN
      properties:
        status:
          default: DELETED_BY_ADMIN
          description: DELETED_BY_ADMIN or INACTIVE_BY_ADMIN
          type: string
      title: CommentUpdateStatusRequest
      type: object
    PostCopyRequest:
      example:
        stockCode: stockCode
      properties:
        stockCode:
          type: string
      title: PostCopyRequest
      type: object
    StockReferenceDateDataArrayResponse:
      example:
        data:
        - id: 1
          stockCode: "145020"
          referenceDate: 2023-08-10
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
        - id: 1
          stockCode: "145020"
          referenceDate: 2023-08-10
          createdAt: 2023-08-10T08:22:44.548Z
          updatedAt: 2023-08-10T08:22:44.548Z
      properties:
        data:
          items:
            $ref: '#/components/schemas/StockReferenceDateResponse'
          type: array
      title: StockReferenceDateDataArrayResponse
      type: object
    GetSimpleStockDataResponse:
      example:
        data:
        - code: code
          name: name
          standardCode: standardCode
        - code: code
          name: name
          standardCode: standardCode
      properties:
        data:
          items:
            $ref: '#/components/schemas/SimpleStockResponse'
          type: array
      title: GetSimpleStockDataResponse
      type: object
    CmsCommonsDataResponse:
      example:
        data:
          boardGroups:
          - displayName: displayName
            name: name
            categories:
            - name: DAILY_ACT
              displayName: 분석자료
              isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
              badgeColor: '#FFFFFF'
              isGroup: "false"
              subCategories: 하위 카테고리 목록
            - name: DAILY_ACT
              displayName: 분석자료
              isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
              badgeColor: '#FFFFFF'
              isGroup: "false"
              subCategories: 하위 카테고리 목록
          - displayName: displayName
            name: name
            categories:
            - name: DAILY_ACT
              displayName: 분석자료
              isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
              badgeColor: '#FFFFFF'
              isGroup: "false"
              subCategories: 하위 카테고리 목록
            - name: DAILY_ACT
              displayName: 분석자료
              isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
              badgeColor: '#FFFFFF'
              isGroup: "false"
              subCategories: 하위 카테고리 목록
          stockGroups:
          - name: name
            id: 0
          - name: name
            id: 0
          stocks:
          - code: code
            name: name
            standardCode: standardCode
          - code: code
            name: name
            standardCode: standardCode
      properties:
        data:
          $ref: '#/components/schemas/CmsCommonsResponse'
      title: CmsCommonsDataResponse
      type: object
    AppPreferenceDataResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          updatedBy: 1
          createdBy: 6
          id: 0
          value: value
          appPreferenceType: appPreferenceType
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          updatedBy: 1
          createdBy: 6
          id: 0
          value: value
          appPreferenceType: appPreferenceType
          updatedAt: 2000-01-23T04:56:07.000+00:00
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/AppPreferenceResponse'
          type: array
      title: AppPreferenceDataResponse
      type: object
    GetNotificationDataResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          post:
            stockName: stockName
            boardCategory: boardCategory
            id: 1
            title: title
            stockCode: stockCode
            boardCategoryDisplayName: boardCategoryDisplayName
          linkUrl: linkUrl
          id: 0
          postId: 6
          category: category
          type: type
        - createdAt: 2000-01-23T04:56:07.000+00:00
          post:
            stockName: stockName
            boardCategory: boardCategory
            id: 1
            title: title
            stockCode: stockCode
            boardCategoryDisplayName: boardCategoryDisplayName
          linkUrl: linkUrl
          id: 0
          postId: 6
          category: category
          type: type
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/NotificationResponse'
          type: array
      title: GetNotificationDataResponse
      type: object
    GetStopWordResponse:
      example:
        data:
        - id: 1
          word: 바보
          status: ACTIVE
          createdAt: 2024-04-11T08:22:44.548Z
          updatedAt: 2024-04-11T08:22:44.548Z
        - id: 1
          word: 바보
          status: ACTIVE
          createdAt: 2024-04-11T08:22:44.548Z
          updatedAt: 2024-04-11T08:22:44.548Z
        paging:
          size: 10
          totalPages: 10
          page: 1
          sorts: "createdAt:desc,userId:asc"
          totalElements: 10
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/StopWordResponse'
          type: array
      title: GetStopWordResponse
      type: object
    DigitalDocumentZipFileCallbackRequest:
      example:
        digitalDocumentDownloadId: 0
        zipFilePath: zipFilePath
      properties:
        digitalDocumentDownloadId:
          description: Digital document id parameter
          format: int64
          type: integer
        zipFilePath:
          description: ZIP file URL
          type: string
      title: DigitalDocumentZipFileCallbackRequest
      type: object
    DashboardStatisticsResponse_summary:
      example:
        upDownText: upDownText
        upDownPercent: upDownPercent
        upDown: upDown
      properties:
        upDown:
          description: "Up, Down, - 구분"
          type: string
        upDownText:
          description: 전일대비 전월대비
          type: string
        upDownPercent:
          description: 12.5%
          type: string
      type: object
    DashboardStatisticsResponse_items_inner:
      example:
        value: 1.4658129805029452
        key: key
      properties:
        key:
          description: 2023-10-10
          type: string
        value:
          format: double
          type: number
      type: object
    AnonymousCountResponse_post:
      example:
        current: 0
        max: 6
      properties:
        current:
          type: integer
        max:
          type: integer
      type: object
    SolidarityLeaderResponse_allOf:
      properties:
        message:
          description: 주주연대 대표 한마디
          nullable: true
          type: string
        solidarityId:
          description: 주주연대 아이디
          format: int64
          type: integer
        solidarityLeaderId:
          description: 주주연대 대표 아이디
          format: int64
          type: integer
        userId:
          description: 주주연대 대표 유저 아이디
          format: int64
          type: integer
        corporateNo:
          type: string
      type: object
      example: null
    ActBestPosts:
      example:
        link: /act-best
        posts:
        - activeStartDate: 2000-01-23T04:56:07.000+00:00
          isPush: false
          polls:
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          digitalProxy:
            createdAt: 2000-01-23T04:56:07.000+00:00
            templateRole: templateRole
            templateName: templateName
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            id: 1
            templateId: templateId
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          likeCount: 1
          poll:
            voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          title: title
          isActive: true
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          thumbnailImageUrl: thumbnailImageUrl
          reported: true
          id: 1
          viewCount: 5
          stock:
            code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          activeEndDate: 2000-01-23T04:56:07.000+00:00
          boardGroup: boardGroup
          digitalDocument:
            id: digitalDocumentId
            answerStatus: SAVE or COMPLETE
            digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
            joinUserCount: 전자문서 참여자수
            shareholdingRatio: 지분율
            targetStartDate: 전자문서 시작일자
            targetEndDate: 전자문서 종료일자
            user: 전자문서 위임인 정보
            stock: 전자문서 위임인 주식정보
            acceptUser: 전자문서 수임인 정보
            items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
            attachOptions: 전자문서 첨부 옵션
            digitalDocumentDownload: 전자문서 다운로드 정보
          updatedAt: 2000-01-23T04:56:07.000+00:00
          isPinned: false
          boardCategory:
            name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
          isExclusiveToHolders: false
          postImageList:
          - imageId: 9
            imageUrl: imageUrl
          - imageId: 9
            imageUrl: imageUrl
          isNew: true
          isNotification: true
          userId: 7
          commentCount: 4
          isAuthorAdmin: true
          deletedAt: 2000-01-23T04:56:07.000+00:00
          holderListReadAndCopyDigitalDocument:
            digitalDocumentId: 1
            fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
            userId: 1
          deleted: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          boardId: 6
          status: null
        - activeStartDate: 2000-01-23T04:56:07.000+00:00
          isPush: false
          polls:
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          digitalProxy:
            createdAt: 2000-01-23T04:56:07.000+00:00
            templateRole: templateRole
            templateName: templateName
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            id: 1
            templateId: templateId
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          likeCount: 1
          poll:
            voteType: voteType
            targetEndDate: 2000-01-23T04:56:07.000+00:00
            answers:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 4
              stockQuantity: 1
              id: 3
              pollItemId: 2
              userId: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            postId: 6
            voteTotalCount: 1
            title: title
            content: content
            createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            targetStartDate: 2000-01-23T04:56:07.000+00:00
            selectionOption: selectionOption
            id: 0
            voteTotalStockSum: 5
            pollItems:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - createdAt: 2000-01-23T04:56:07.000+00:00
              deletedAt: 2000-01-23T04:56:07.000+00:00
              pollId: 2
              id: 5
              text: text
              voteItemStockSum: 9
              voteItemCount: 7
              status: status
              updatedAt: 2000-01-23T04:56:07.000+00:00
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
          title: title
          isActive: true
          userProfile:
            leadingStocks:
            - code: code
              name: name
              standardCode: standardCode
            - code: code
              name: name
              standardCode: standardCode
            deleted: true
            hasStocks: true
            totalAssetLabel: totalAssetLabel
            nickname: nickname
            reported: true
            userIp: userIp
            individualStockCountLabel: individualStockCountLabel
            profileImageUrl: profileImageUrl
            isSolidarityLeader: true
          content: content
          liked: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          thumbnailImageUrl: thumbnailImageUrl
          reported: true
          id: 1
          viewCount: 5
          stock:
            code: 종목코드
            name: 종목명
            totalIssuedQuantity: 상장주식수
            representativePhoneNumber: (02) 555-6666
            memberCount: 주주수
            stake: 지분율
          activeEndDate: 2000-01-23T04:56:07.000+00:00
          boardGroup: boardGroup
          digitalDocument:
            id: digitalDocumentId
            answerStatus: SAVE or COMPLETE
            digitalDocumentType: DIGITAL_PROXY or JOINT_OWNERSHIP_DOCUMENT or ETC_DOCUMENT
            joinUserCount: 전자문서 참여자수
            shareholdingRatio: 지분율
            targetStartDate: 전자문서 시작일자
            targetEndDate: 전자문서 종료일자
            user: 전자문서 위임인 정보
            stock: 전자문서 위임인 주식정보
            acceptUser: 전자문서 수임인 정보
            items: 전자문서 위임장 찬성/반대/기권 기본 선택정보
            attachOptions: 전자문서 첨부 옵션
            digitalDocumentDownload: 전자문서 다운로드 정보
          updatedAt: 2000-01-23T04:56:07.000+00:00
          isPinned: false
          boardCategory:
            name: DAILY_ACT
            displayName: 분석자료
            isExclusiveToHolders: ACT BEST 카테고리 주주글만 보기 여부
            badgeColor: '#FFFFFF'
            isGroup: "false"
            subCategories: 하위 카테고리 목록
          isExclusiveToHolders: false
          postImageList:
          - imageId: 9
            imageUrl: imageUrl
          - imageId: 9
            imageUrl: imageUrl
          isNew: true
          isNotification: true
          userId: 7
          commentCount: 4
          isAuthorAdmin: true
          deletedAt: 2000-01-23T04:56:07.000+00:00
          holderListReadAndCopyDigitalDocument:
            digitalDocumentId: 1
            fileName: 삼성전자_3월말_주주명부열람등사청구.pdf
            userId: 1
          deleted: true
          editedAt: 2000-01-23T04:56:07.000+00:00
          boardId: 6
          status: null
      properties:
        link:
          description: url to route to when "더보기" button tapped
          example: /act-best
          type: string
        posts:
          items:
            $ref: '#/components/schemas/PostResponse'
          type: array
      title: ActBestPosts
      type: object
    StockHomeSectionResponse:
      allOf:
      - $ref: '#/components/schemas/CarouselSectionResponse'
      - $ref: '#/components/schemas/ListSectionResponse'
      title: StockHomeSectionResponse
    DashboardItemResponse_variation:
      example:
        color: '#FF0000'
        text: text
      properties:
        text:
          type: string
        color:
          description: Color of the variation
          example: '#FF0000'
          type: string
      type: object
    LeaderElectionProcessDetailResponse:
      properties:
        title:
          description: 지원자 현황 or 투표율
          type: string
        value:
          description: 지원자 현황인원수 or 투표율
          format: int64
          type: integer
        unit:
          description: 명 or %
          type: string
        startDate:
          description: 시작일
          format: date-time
          type: string
        endDate:
          description: 시작일
          format: date-time
          type: string
      title: LeaderElectionProcessDetailResponse
      type: object
    LeaderElectionProcessLabelResponse:
      properties:
        title:
          description: 진행중 or 마감 or 4일 남음
          type: string
        color:
          description: title 색상
          type: string
      title: LeaderElectionProcessLabelResponse
      type: object
    PushRequest:
      properties:
        title:
          default: 액트
          description: Title of the push notification
          type: string
        content:
          description: Content of the push notification
          type: string
      title: PushRequest
      type: object
    UpdatePostRequest_digitalProxy:
      description: 모두싸인 의결권위임 입력 정보
      properties:
        targetStartDate:
          description: 시작일
          format: date-time
          type: string
        targetEndDate:
          description: 종료일
          format: date-time
          type: string
      type: object
      x-implements:
      - ag.act.dto.TargetStartAndEndDatePeriod
    UpdatePostRequest_digitalDocument:
      description: 전자문서 위임장 공동보유 기타문서 입력 정보
      properties:
        stockReferenceDateId:
          description: 기준일 정보 아이디
          format: int64
          type: integer
        targetStartDate:
          description: 시작일
          format: date-time
          type: string
        targetEndDate:
          description: 종료일
          format: date-time
          type: string
        title:
          description: 전자문서 제목
          type: string
        content:
          description: 전자문서 내용
          type: string
      type: object
      x-implements:
      - ag.act.dto.TargetStartAndEndDatePeriod
    PostDetailsResponse_allOf:
      properties:
        push:
          $ref: '#/components/schemas/PushDetailsResponse'
        poll:
          $ref: '#/components/schemas/PollResponse'
        polls:
          items:
            $ref: '#/components/schemas/PollResponse'
          type: array
        digitalProxy:
          $ref: '#/components/schemas/DigitalProxyResponse'
        digitalDocument:
          $ref: '#/components/schemas/DigitalDocumentResponse'
        election:
          $ref: '#/components/schemas/SolidarityLeaderElectionResponse'
      type: object
    PostDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/PostResponse'
      - $ref: '#/components/schemas/PostDetailsResponse_allOf'
      title: PostDetailsResponse
    DigitalDocumentUserDetailsResponse_allOf:
      properties:
        userId:
          format: int64
          type: integer
        digitalDocumentId:
          format: int64
          type: integer
        issuedNumber:
          format: int64
          type: integer
      type: object
      example: null
    AuthUserResponse_token:
      example:
        accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjg5MTMyNzIwLCJleHAiOjE2ODk3Mzc1MjB9.Wo3iBvhSyf3ujtQiqA9BPyZ54tQuKL_bNRAN6qS3Ih8
        finpongAccessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjg5MTMyNzIwLCJleHAiOjE2ODk3Mzc1MjB9.Wo3iBvhSyf3ujtQiqA9BPyZ54tQuKL_bNRAN6qS3Ih8
      properties:
        accessToken:
          type: string
        finpongAccessToken:
          nullable: true
          type: string
      type: object
    MySolidarityResponse_allOf:
      properties:
        displayOrder:
          example: 1
          type: integer
        links:
          example: "Array [ { title, url, color } ] || null"
          items:
            $ref: '#/components/schemas/LinkResponse'
          nullable: true
          type: array
        stakeRank:
          example: "-"
          type: string
        stakeRankDelta:
          format: int32
          type: integer
        marketValueRank:
          example: "-"
          type: string
        marketValueRankDelta:
          format: int32
          type: integer
      type: object
      example: null
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
