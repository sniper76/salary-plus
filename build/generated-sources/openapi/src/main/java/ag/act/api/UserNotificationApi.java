/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ag.act.api;

import ag.act.model.GetUserNotificationDataResponse;
import ag.act.model.SimpleStringResponse;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import jakarta.annotation.Generated;
import jakarta.validation.*;
import ag.act.validation.constraints.*;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-02-13T06:43:13.649172+09:00[Asia/Seoul]")
@Validated
public interface UserNotificationApi {

    default UserNotificationApiDelegate getDelegate() {
        return new UserNotificationApiDelegate() {};
    }

    /**
     * POST /api/notifications/{notificationId} : 사용자 알림 확인
     *
     * @param notificationId Notification ID (required)
     * @return Successful response (status code 200)
     */
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/notifications/{notificationId}",
        produces = { "application/json" }
    )
    default ResponseEntity<SimpleStringResponse> createNotificationUserView(
         @PathVariable("notificationId") Long notificationId
    ) {
        return getDelegate().createNotificationUserView(notificationId);
    }


    /**
     * GET /api/notifications : 알림 리스트 조회
     *
     * @param category Notification category parameter, (null or STOCKHOLDER_ACTION) (optional)
     * @param page Page number (optional, default to 1)
     * @param size Number of items per page (optional, default to 10)
     * @param sorts Sorting criteria (optional, default to createdAt:desc)
     * @return Successful response (status code 200)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/notifications",
        produces = { "application/json" }
    )
    default ResponseEntity<GetUserNotificationDataResponse> getUserNotifications(
         @Valid @RequestParam(value = "category", required = false) String category,
         @Valid @RequestParam(value = "page", required = false, defaultValue = "1") Integer page,
         @Valid @RequestParam(value = "size", required = false, defaultValue = "10") Integer size,
         @Valid @RequestParam(value = "sorts", required = false, defaultValue = "createdAt:desc") List<String> sorts
    ) {
        return getDelegate().getUserNotifications(category, page, size, sorts);
    }

}
