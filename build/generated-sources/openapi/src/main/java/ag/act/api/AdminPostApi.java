/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ag.act.api;

import ag.act.model.ErrorResponse;
import ag.act.model.PostCopyRequest;
import ag.act.model.PostDetailsDataResponse;
import ag.act.model.SimpleStringResponse;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import jakarta.annotation.Generated;
import jakarta.validation.*;
import ag.act.validation.constraints.*;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-02-13T06:43:13.649172+09:00[Asia/Seoul]")
@Validated
public interface AdminPostApi {

    default AdminPostApiDelegate getDelegate() {
        return new AdminPostApiDelegate() {};
    }

    /**
     * GET /api/admin/posts/{postId}/csv-download : 설문 게시글 설문 결과 다운로드
     *
     * @param postId Post id (required)
     * @return Poll User responses file download (status code 200)
     *         or Bad Request. Invalid file format or data. (status code 400)
     *         or Internal Server Error (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/admin/posts/{postId}/csv-download",
        produces = { "application/octet-stream", "application/json" }
    )
    default ResponseEntity<org.springframework.core.io.Resource> downloadPostPollResultsInCsv(
         @PathVariable("postId") Long postId
    ) {
        return getDelegate().downloadPostPollResultsInCsv(postId);
    }


    /**
     * POST /api/admin/posts/{postId}/duplicate : 게시글을 그룹 카테고리에 복제한다.
     *
     * @param postId Post ID parameter (required)
     * @param postCopyRequest  (required)
     * @return Successful response (status code 200)
     *         or Board group of the category does not match (status code 400)
     *         or Not Found (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/admin/posts/{postId}/duplicate",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<PostDetailsDataResponse> duplicatePost(
         @PathVariable("postId") Long postId,
         @Valid @RequestBody PostCopyRequest postCopyRequest
    ) {
        return getDelegate().duplicatePost(postId, postCopyRequest);
    }


    /**
     * POST /api/admin/posts/{postId}/stock-groups/{stockGroupId}/duplicate : 같은 종목 그룹에 게시글을 복제한다.
     *
     * @param postId Post ID parameter (required)
     * @param stockGroupId Stock group ID parameter (required)
     * @return Successful response (status code 200)
     */
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/admin/posts/{postId}/stock-groups/{stockGroupId}/duplicate",
        produces = { "application/json" }
    )
    default ResponseEntity<SimpleStringResponse> duplicatePosts(
         @PathVariable("postId") Long postId,
         @PathVariable("stockGroupId") Long stockGroupId
    ) {
        return getDelegate().duplicatePosts(postId, stockGroupId);
    }

}
