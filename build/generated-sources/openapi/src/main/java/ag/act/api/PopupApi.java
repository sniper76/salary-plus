/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ag.act.api;

import ag.act.model.PopupDetailsDataResponse;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import jakarta.annotation.Generated;
import jakarta.validation.*;
import ag.act.validation.constraints.*;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-02-13T06:43:13.649172+09:00[Asia/Seoul]")
@Validated
public interface PopupApi {

    default PopupApiDelegate getDelegate() {
        return new PopupApiDelegate() {};
    }

    /**
     * GET /api/popup/exclusive : 여러개의 팝업중에 사용자에게 가장 중요한 팝업을 선별하여 회신한다
     *
     * @param displayTargetType MAIN_HOME or NEWS_HOME or STOCK_HOME (required)
     * @param stockCode Stock code (optional)
     * @return Successful (status code 200)
     *         or Bad Request (status code 400)
     *         or Not Found (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/popup/exclusive",
        produces = { "application/json" }
    )
    default ResponseEntity<PopupDetailsDataResponse> getExclusivePopup(
        @NotNull  @Valid @RequestParam(value = "displayTargetType", required = true) String displayTargetType,
         @Valid @RequestParam(value = "stockCode", required = false) String stockCode
    ) {
        return getDelegate().getExclusivePopup(displayTargetType, stockCode);
    }

}
