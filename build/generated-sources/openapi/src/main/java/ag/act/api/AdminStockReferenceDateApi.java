/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ag.act.api;

import ag.act.model.CreateStockReferenceDateRequest;
import ag.act.model.SimpleStringResponse;
import ag.act.model.StockReferenceDateDataArrayResponse;
import ag.act.model.StockReferenceDateDataResponse;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import jakarta.annotation.Generated;
import jakarta.validation.*;
import ag.act.validation.constraints.*;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-02-13T06:43:13.649172+09:00[Asia/Seoul]")
@Validated
public interface AdminStockReferenceDateApi {

    default AdminStockReferenceDateApiDelegate getDelegate() {
        return new AdminStockReferenceDateApiDelegate() {};
    }

    /**
     * POST /api/admin/stocks/{stockCode}/reference-dates : 종목 기준일 등록 생성하기
     *
     * @param stockCode Stock code parameter (required)
     * @param createStockReferenceDateRequest  (required)
     * @return Successful response (status code 200)
     */
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/admin/stocks/{stockCode}/reference-dates",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<StockReferenceDateDataResponse> createStockReferenceDate(
         @PathVariable("stockCode") String stockCode,
         @Valid @RequestBody CreateStockReferenceDateRequest createStockReferenceDateRequest
    ) {
        return getDelegate().createStockReferenceDate(stockCode, createStockReferenceDateRequest);
    }


    /**
     * DELETE /api/admin/stocks/{stockCode}/reference-dates/{referenceDateId} : 종목 기준일 삭제하기
     *
     * @param stockCode Stock code parameter (required)
     * @param referenceDateId Stock&#39;s reference Date Id (required)
     * @return Successful (status code 200)
     *         or Bad Request (status code 400)
     *         or Not Found (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/api/admin/stocks/{stockCode}/reference-dates/{referenceDateId}",
        produces = { "application/json" }
    )
    default ResponseEntity<SimpleStringResponse> deleteStockReferenceDateAdmin(
         @PathVariable("stockCode") String stockCode,
         @PathVariable("referenceDateId") Long referenceDateId
    ) {
        return getDelegate().deleteStockReferenceDateAdmin(stockCode, referenceDateId);
    }


    /**
     * GET /api/admin/stocks/{stockCode}/reference-dates : 종목 기준일 목록 조회하기
     *
     * @param stockCode Stock code parameter (required)
     * @return Successful response (status code 200)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/admin/stocks/{stockCode}/reference-dates",
        produces = { "application/json" }
    )
    default ResponseEntity<StockReferenceDateDataArrayResponse> getStockReferenceDates(
         @PathVariable("stockCode") String stockCode
    ) {
        return getDelegate().getStockReferenceDates(stockCode);
    }


    /**
     * PATCH /api/admin/stocks/{stockCode}/reference-dates/{referenceDateId} : 종목 기준일 수정하기
     *
     * @param stockCode Stock code parameter (required)
     * @param referenceDateId Stock&#39;s reference Date Id (required)
     * @param createStockReferenceDateRequest  (required)
     * @return Successful response (status code 200)
     */
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/api/admin/stocks/{stockCode}/reference-dates/{referenceDateId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<StockReferenceDateDataResponse> updateStockReferenceDate(
         @PathVariable("stockCode") String stockCode,
         @PathVariable("referenceDateId") Long referenceDateId,
         @Valid @RequestBody CreateStockReferenceDateRequest createStockReferenceDateRequest
    ) {
        return getDelegate().updateStockReferenceDate(stockCode, referenceDateId, createStockReferenceDateRequest);
    }

}
